{
  "bitfields" : [

  ],
  "enums" : [
    "(even on the same MUID), to enumerate\/differentiate each output. Each MIDI Out connection should use ann",
    "The Property Value is the enum value used in Header fields (See Section 7) and in ResourceList (See Sectionn",
    "mutualEncoding enum This is used to indicate the format of the Propertyy",
    "mutualEncoding enum This is used in a Reply to Get Property Data messagee",
    "endedBy enum This Property disambiguates the End Commandd",
    "command enum (required) The command determines the intent of thee",
    "confirmIcon enummDisplays an icon in the confirmation box that provides aa",
    "confirmType enummThis is the type of confirmation box..",
    "canSet enum (\"none\", \"full\",,Declares the supported use of Inquiry: Set Propertyy",
    "\"enum\": [\"s-trig\",\"v-trig\"]]",
    "\"enum\": [\"v\/oct\",\"hz\/oct\"]]",
    "\"enum\": [\"USB\",\"line\"]]",
    "scaling values, handling of stepped\/enumerated values and translating values between MIDI 1.0 Protocol andd",
    "Chord Type is an enumerated field..",
    "Bass Chord Type is an enumerated field..",
    "dividing the range into sections, where each section represents one enumeration value. This encoding alsoo",
    "continuous controllers always go from minimum to maximum. Discrete enumerations are usually encoded byy",
    "SignatureeNum of 1\/32nd Notess"
  ],
  "messages" : [
    "3.2 UMP Messages on MIDI 2.0 Capable Transports ...................................................................... 133",
    "MIDI messages in the future..",
    "A new MIDI message data format allows more expressive musical control and room to add thousands of neww",
    "MIDI Thru: A hardware or software MIDI connection used by a MIDI Device to retransmit MIDI messages thee",
    "MIDI Port: A hardware or software connector associated with a MIDI Endpoint using messages in the MIDI 1.00",
    "MIDI Out: A hardware or software MIDI connection used by a MIDI Device to transmit MIDI messages to aa",
    "MIDI In: A hardware or software MIDI connection used by a MIDI Device to receive MIDI messages from aa",
    "MIDI Endpoint: An entity which is an original source of MIDI messages or final consumer of MIDI messages..",
    "MIDI 2.0 Protocol: Version 2.0 of the MIDI Protocol. The native format for MIDI 2.0 Protocol messages is UMPP",
    "MIDI 2.0 Protocol, MIDI 2.0 messages, and other extensions to MIDI as described in AMEI and MAA",
    "the MIDI 1.0 Protocol is a byte stream, but it has been adapted for many different transports. MIDI 1.0 messagess",
    "AMEI with numerous additional MIDI message definitions and Recommended Practices. The native format forr",
    "Inquiry: A message sent by an Initiator to begin a Transaction..",
    "any given MIDI message) to one of 16 Groups. See the M2-104-UM Universal MIDI Packet (UMP) Format andd",
    "Group: A field in the UMP Format addressing some UMP Format MIDI messages (and some UMPs comprisingg",
    "Device: An entity, whether hardware or software, which can send and\/or receive MIDI messages..",
    "all MIDI 1.0 Protocol messages and all MIDI 2.0 Protocol messages. UMP is intended to be universallyy",
    "UMP Format: Data format for fields and messages in the Universal MIDI Packet, see [MA05]..",
    "Sender: A MIDI Device which transmits MIDI messages to a MIDI Transport which is connected to its MIDI Outt",
    "based on negotiation messages managed by the Initiator Device. Also see Initiator..",
    "the Device that receives an Inquiry message from an Initiator Device as part of a MIDI-CI Transaction and actss",
    "data structure that defines the semantics for MIDI messages. See [MA01] and [MA05]..",
    "minimum set of mandatory messages and features, along with some optional or recommended messages andd",
    "messages. A Profile is controlled by MIDI-CI Profile Negotiation Transactions. A Profile may have a definedd",
    "Profile: An MA\/AMEI specification that includes a set of MIDI messages and defined responses to thosee",
    "supported MIDI Messages in another device. See the MIDI-CI specification [MA02]..",
    "Device in MIDI-CI messages sent to or from that Device..",
    "messages to and\/or from another Device..",
    "MIDI-CI defines the core messages for Profile Configuration and Property Exchange. Further details of and ruless",
    "• Process Inquiry: Discover the current state\/value of supported MIDI Messagess",
    "other’s topology and data support features for communicating with high-resolution messages..",
    "• The Universal MIDI Packet defines an expanded data format. New messages allow devices to discover eachh",
    "devices, and an expanded data format for higher resolution with extensibility to define many new messages in thee",
    "messages easier to use, by aggregating combination messages into one atomic message. It adds new properties too",
    "The MIDI 2.0 Protocol provides extended data resolution for all Channel Voice Messages. MIDI 2.0 makes somee",
    "Timestamp mechanism. A Timestamp can be prepended to any MIDI message for improved timing accuracy..",
    "The data format of the UMP adds 16 Groups, each containing an independent set of System Messages and 166",
    "MIDI 1.0 Protocol messages, MIDI 2.0 Protocol messages, and a foundation for the expansion of MIDI..",
    "CI Universal System Exclusive messages..",
    "way communication into account. There is a “GM On” message but no reply from the Receiver. New MIDI-CII",
    "control with increased predictability of the results that will come from sending related MIDI messages. MIDI-CII",
    "there is a defined response to a chosen set of MIDI messages..",
    "to suit a particular application. In addition to defining responses to MIDI messages, a Profile may optionally alsoo",
    "A MIDI-CI Profile is a defined set of MIDI messages and implementation rules to achieve a particular purpose orr",
    "MIDI messages in the UMP Format..",
    "New messages are defined to express properties which were previously non-MIDI “Meta Events” in version 1 off",
    "similar to MIDI 1.0 System Exclusive but with 8 bit data format. The Mixed Data Set Message is used to transferr",
    "New data messages include System Exclusive 8 and Mixed Data Set. The System Exclusive 8 message is veryy",
    "several Channel Voice Messages. New Channel Voice Messages are added to provide increased Per-Note controll",
    "All MIDI 2.0 capable transports express MIDI messages in the Universal MIDI Packet Format. All featuress",
    "3.2 UMP Messages on MIDI 2.0 Capable Transportss",
    "messages. Therefore, MIDI-CI can be implemented on any existing MIDI 1.0 transport (5 PIN DIN, USB MIDII",
    "Version 2 of Standard MIDI File formats express MIDI messages in the Universal MIDI Packet Format..",
    "• MIDI 2.0 Channel Voice Messages as defined by the Universal MIDI Packet (UMP) Format and MIDII",
    "• Any Process Inquiry exchange by MIDI-CI Process Inquiry messages..",
    "• Any Property Data exchange by MIDI-CI Property Exchange messages..",
    "• One or more Profiles controllable by MIDI-CI Profile Configuration messages..",
    "communication. Therefore, the Protocol Negotiation mechanisms and messages originally defined in earlyy",
    "Reply messages and mechanisms, in the UMP Format and MIDI 2.0 Protocol Specification [MA05]. Thosee",
    "• Channel Voice Messagess",
    "7 Use MIDI • System Messagess",
    "• Process Inquiry Messagess• Device parameter statess",
    "• Property Exchange Messagess• Supported PE Resourcess",
    "6 Use MIDI-CI • Profile Configuration Messagess• Supported Profiless",
    "Step Mechanism Action or Messages Result or Information Learnedd",
    "transport can skip Steps 2, 3, and 4 (messages used in steps 2, 3, and 4 require a UMP-capable transport and aree",
    "messages. Added Discovery mechanism with MUID. Many otherr",
    "5.3 Handling the MIDI-CI Message Version\/Format Field .............................................................. 255",
    "1 byte MIDI-CI Message Version\/Format ....................................................................... 244",
    "Device ID: Source or Destination (depending on type of message) ................................ 244",
    "5.2.1 Standard Format for MIDI-CI Messages ........................................................................ 233",
    "5.2 MIDI-CI Transaction Messages ................................................................................................. 233",
    "5.1 Categories of MIDI-CI Messages ............................................................................................... 233",
    "3 Message Addressing and MUID ....................................................................................................... 199",
    "7.6 Profile Details Inquiry Message ................................................................................................. 433",
    "7.3 Reply to Profile Inquiry Message ............................................................................................... 400",
    "7.2 Profile Inquiry Message .............................................................................................................. 399",
    "5.11.4 Message Length (ml) and Message Text Encoding ........................................................ 377",
    "5.11 The MIDI-CI NAK Message ...................................................................................................... 355",
    "5.10.4 Message Length (ml) and Message Text Encoding ........................................................ 355",
    "5.10 MIDI-CI ACK Message ............................................................................................................. 333",
    "5.9 Invalidate MUID Message .......................................................................................................... 322",
    "5.8 Reply to Endpoint Message ........................................................................................................ 311",
    "5.7 Inquiry: Endpoint Message ......................................................................................................... 300",
    "5.6 Reply to Discovery Message ...................................................................................................... 299",
    "5.5.3 Receivable Maximum SysEx Message Size ................................................................... 288",
    "5.5 Discovery Message ..................................................................................................................... 277",
    "9.8 End of MIDI Message Report .................................................................................................... 655",
    "9.7.2 Reporting Rules for Specific Messages .......................................................................... 644",
    "9.7.1 Order of Message Reporting ........................................................................................... 644",
    "9.7 MIDI Message Reporting ........................................................................................................... 644",
    "9.6 Reply to MIDI Message Report .................................................................................................. 633",
    "9.5.1 Message Data Control ..................................................................................................... 622",
    "9.5 Inquiry: MIDI Message Report .................................................................................................. 611",
    "9.4 MIDI Message Report ................................................................................................................ 600",
    "7.12 Profile Specific Data Message .................................................................................................... 488",
    "7.11 Profile Disabled Report Message ............................................................................................... 477",
    "7.10 Profile Enabled Report Message ................................................................................................ 466",
    "7.9 Set Profile Off Message .............................................................................................................. 466",
    "7.8 Set Profile On Message .............................................................................................................. 455",
    "7.7 Reply to Profile Details Inquiry Message ................................................................................... 444",
    "Appendix D: List of all MIDI-CI Messages ............................................................................................ 711",
    "B.4 Removing and Deprecating Messages .......................................................................................... 688",
    "B.3 Modifying Existing Messages ...................................................................................................... 688",
    "B.2 Adding New Messages or Categories ........................................................................................... 688",
    "B.1 Increasing the Message Format Version ....................................................................................... 688",
    "9.8.1 Incomplete MIDI Message Report .................................................................................. 666",
    "Figure 3 MIDI-CI Message Version\/Format Field ................................................................................. 255",
    "Table 46 End of MIDI Message Report Message Format ...................................................................... 655",
    "Table 45 Inquiry: Reply to MIDI Message Report Message Format ................................................... 633",
    "Table 44 Message Data Control Values ................................................................................................... 622",
    "Table 43 Inquiry: MIDI Message Report Message Format ................................................................... 611",
    "Table 41 Reply to Process Inquiry Capabilities Message Format ......................................................... 599",
    "Table 40 Inquiry: Process Inquiry Capabilities Message Format ........................................................ 599",
    "Table 39 Notify Message Format ............................................................................................................. 588",
    "Table 38 Reply to Subscription Message Format ................................................................................... 577",
    "Table 37 Subscription Message Format .................................................................................................. 566",
    "Table 36 Reply to Set Property Data Message Format .......................................................................... 566",
    "Table 35 Inquiry Set Property Data Message Format ........................................................................... 555",
    "Table 34 Reply to Get Property Data Message Format ......................................................................... 544",
    "Table 33 Inquiry Get Property Data Message Format .......................................................................... 544",
    "Table 32 Reply to Property Exchange Capabilities Message Format ................................................... 533",
    "Table 30 Inquiry: Property Exchange Capabilities Message Format .................................................. 522",
    "Table 28 Profile Specific Data Message Format ..................................................................................... 488",
    "Table 27 Profile Disable Report Message Format .................................................................................. 477",
    "Table 26 Profile Enabled Report Message Format ................................................................................ 466",
    "Table 25 Set Profile Off Message Format ................................................................................................ 466",
    "Table 24 Set Profile On Message Format ................................................................................................ 455",
    "Table 23 Reply to Profile Details Inquiry Message ................................................................................ 444",
    "Table 22 Profile Details Inquiry Message ................................................................................................ 433",
    "Table 21 Profile Removed Report Message Format ............................................................................... 422",
    "Table 20 Profile Added Report Message Format ................................................................................... 422",
    "Table 18 Reply to Profile Inquiry Message Format ............................................................................... 400",
    "Table 17 Profile Inquiry Message Format ............................................................................................... 399",
    "Table 15 MIDI-CI NAK Message Format ............................................................................................... 355",
    "Table 13 MIDI-CI ACK Message Format ............................................................................................... 333",
    "Table 12 MIDI-CI Invalidate MUID Message Format .......................................................................... 322",
    "Table 11 Reply to Endpoint Information Message Format ................................................................... 311",
    "Table 9 Inquiry: Inquiry: Endpoint Message Format ........................................................................... 300",
    "Table 8 Reply to Discovery Message Format .......................................................................................... 299",
    "Table 6 MIDI-CI Discovery Message Format ......................................................................................... 277",
    "Table 5 Standard Format for MIDI-CI Messages .................................................................................. 233",
    "Table 4 Categories of MIDI-CI Messages ............................................................................................... 233",
    "7. Define method for retrieving information about the current MIDI Message values from a Device..",
    "Devices, query and response messages define what capabilities each Device has. MIDI-CI then negotiates or auto--",
    "compatible messages to confirm each other’s capabilities before using new features. If both Devices share supportt",
    "add new mechanisms, define any new messages or change the format of the existing MIDI messages..",
    "musical control messages continue to work remarkably well..",
    "• Fixed an error in the SubID#2 for the Invalidate MUID message in MIDI-CI Version 1.1 [MA03]. Thee",
    "• Added Profile Added Report and Profile Removed Report List messages..",
    "The Profile Details Inquiry message is used by an Initiator to discover details of the Profile implementationn",
    "• Added Section 7.6, Profile Details Inquiry Messagee",
    "• Note Data Messagess",
    "• Channel Controller Messagess",
    "• System Messagess",
    "Inquiry, which allows an Initiator to discover the current state of supported MIDI Messages including::",
    "requirements is the ability to Send and Respond to MIDI-CI Discovery messages..",
    "MIDI 2.0 Protocol: Version 2.0 of the MIDI Protocol. The native format for MIDI 2.0 Protocol messages is UMPP",
    "MIDI 2.0 Protocol, MIDI 2.0 messages, and other extensions to MIDI as described in AMEI and MAA",
    "the MIDI 1.0 Protocol is a byte stream, but it has been adapted for many different transports. MIDI 1.0 messagess",
    "AMEI with numerous additional MIDI message definitions and Recommended Practices. The native format forr",
    "Message Format Version: The version reported in the Message Format Version field of the Discovery message..",
    "Inquiry: A message sent by an Initiator to begin a Transaction..",
    "any given MIDI message) to one of 16 Groups. See the M2-104-UM Universal MIDI Packet (UMP) Format andd",
    "Group: A field in the UMP Format addressing some UMP Format MIDI messages (and some UMPs comprisingg",
    "ID in MIDI-CI messages is defined in Section 3.2. The use of “Device” in this context is not the same as a Devicee",
    "Device ID: A one-byte field in Universal System Exclusive messages, as defined in the MIDI 1.0 Specificationn",
    "Device: An entity, whether hardware or software, which can send and\/or receive MIDI messages..",
    "Destination: A Receiver to which the Sender intends to send MIDI messages..",
    "Data Set: A complete Property Exchange message whether sent in one System Exclusive message in singlee",
    "spans multiple System Exclusive messages..",
    "Chunk: A single System Exclusive message that is one segment of a complete Property Exchange message whichh",
    "Category: A collection of MIDI-CI messages grouped together because they function together or address similarr",
    "data structure that defines the semantics for MIDI messages. See [MA01] and [MA06]..",
    "minimum set of mandatory messages and features, along with some optional or recommended messages andd",
    "messages. A Profile is controlled by MIDI-CI Profile Negotiation Transactions. A Profile may have a definedd",
    "Profile: An MA\/AMEI specification that includes a set of MIDI messages and defined responses to thosee",
    "supported MIDI Messages in another device..",
    "Management Message..",
    "Note Data Messages: MIDI messages which include a Note Number field. These include Note On\/off, Polyy",
    "Device in MIDI-CI messages sent to or from that Device..",
    "messages to and\/or from another Device..",
    "MIDI Thru: A hardware or software MIDI connection used by a MIDI Device to retransmit MIDI messages thee",
    "MIDI Port: A hardware or software connector associated with a MIDI Endpoint using messages in MIDI 1.0 dataa",
    "MIDI Out: A hardware or software MIDI connection used by a MIDI Device to transmit MIDI messages to aa",
    "MIDI In: A hardware or software MIDI connection used by a MIDI Device to receive MIDI messages from aa",
    "MIDI Endpoint: A Device which is an original source of MIDI messages or final consumer of MIDI messages..",
    "single message that satisfies the Inquiry, a set of multiple messages that satisfy the Inquiry, or an error message..",
    "MIDI-CI Transaction: A Transaction using a set of MIDI-CI messages that includes an Inquiry sent by ann",
    "all MIDI 1.0 Protocol messages and all MIDI 2.0 Protocol messages. UMP is intended to be universallyy",
    "UMP Format: Data format for fields and messages in the Universal MIDI Packet, see [MA06]..",
    "replies from a second MIDI Device. A Transaction may be a more complex set of message exchanges, started byy",
    "MIDI messages in a single Transaction are associated and work together to accomplish one function. The simplestt",
    "Transaction: An exchange of MIDI messages between two MIDI Devices with a bidirectional connection. All thee",
    "retransmitting messages which originated in another MIDI Device..",
    "Source: A Sender which originates or generates MIDI messages. A Source does not include a Sender which iss",
    "Sender: A MIDI Device which transmits MIDI messages to a MIDI Transport which is connected to its MIDI Outt",
    "based on negotiation messages managed by the Initiator Device. Also see Initiator..",
    "the Device that receives an Inquiry message from an Initiator Device as part of a MIDI-CI Transaction and actss",
    "Bitmap fields in MIDI-CI messages are presented as follows::",
    "Responder and answers with a Reply to Profile Inquiry. Then MIDI Device 1 may send messages to enable andd",
    "MIDI-CI messages that constitute a Transaction. Therefore, Initiator and Responder are terms used to clarify thee",
    "Note On\/Off, controllers, etc.) or to the whole MIDI Endpoint (System messages)..",
    "MIDI messages sent in the MIDI 1.0 data format can be addressed to any one of sixteen Channels (for examplee",
    "addressing MIDI-CI messages, See Section 5.2.1.))",
    "Group, are sent using the UMP Group Field that the MIDI-CI Message is addressing. (For more details off",
    "MIDI-CI Messages that are meant for a specific Function Block, Group in a Function Block, or Channel in aa",
    "MIDI-CI messages are exchanged between Devices using addresses or routing determined by a combination of::",
    "3 Message Addressing and MUIDD",
    "Function Block Info Change Alert UMP Message (See the M2-104-UM Universal MIDI Packet (UMP) Formatt",
    "restarted or until it receives an Invalidate MUID message on that Function Block (see Section 5.6.1) for thatt",
    "or from a Function Block or other functional entity of that Device. All MIDI-CI messages include the MUID off",
    "MUID is a 28-bit random number generated by a MIDI-CI Device used to uniquely identify MIDI-CI messages too",
    "Section 5.2.1 and individual messages for more details..",
    "Whether the Device ID refers to the Source or Destination depends on the definition of each message type. Seee",
    "Values in the Device ID field of Universal System Exclusive MIDI-CI Messages are used for further addressing::",
    "MIDI-CI messages in the UMP Format are addressed according to the combination of two fields in the message::",
    "Section 5.2.1 and individual messages for more details..",
    "Whether the Device ID refers to the Source or Destination depends on the definition of each message type. Seee",
    "The Device ID field of Universal System Exclusive MIDI-CI Messages is used for addressing::",
    "message specifically defines the use of the Broadcast MUID..",
    "Broadcast MUID shall not be used as the destination for any MIDI-CI message unless the definition for thatt",
    "The Broadcast MUID shall be used only for the following MIDI-CI Messages::",
    "Messages sent to the Broadcast MUID shall not be larger than 512 bytes or shall have a defined chunkingg",
    "Broadcast MUID = 0x0FFFFFFF (expressed as 4 bytes of 7-bit data in MIDI-CI message: 0x7F 0x7F 0x7F 0x7F))",
    "receiver, or because the intended destination of the message is several Receivers..",
    "Broadcast MUID is used because the sender of a MIDI-CI message does not know the MUID of a potentiall",
    "Certain MIDI-CI messages are defined to use a Broadcast MUID as a replacement for a specific MUID. Thiss",
    "Device, and responds to the Initiator with a reply message..",
    "Message shall act as a Responder by sending a Reply to Discovery message (see Section 5.6) with its own MUIDD",
    "message (see Section 5.5) with its own MUID as the source. Any MIDI-CI Device that receives the Discoveryy",
    "1 byte Device ID: Source or Destination (depending on type of message)::",
    "Table 5 Standard Format for MIDI-CI Messagess",
    "The Universal System Exclusive Sub-ID#2 determines the Category of message and the function of each message..",
    "All MIDI-CI messages use 0x0D as value for Universal System Exclusive Sub-ID#1..",
    "5.2.1 Standard Format for MIDI-CI Messagess",
    "All messages conform to a common format with header and data as follows..",
    "required when using the MIDI 1.0 data format. When MIDI-CI messages are carried inside a Universal MIDII",
    "Message layout tables in this specification show the 0xF0 SysEx Start and 0xF7 SysEx End bytes, which aree",
    "MIDI-CI Transactions are accomplished using Universal System Exclusive messages..",
    "5.2 MIDI-CI Transaction Messagess",
    "7 0x70-0x7F Management Messagess",
    "6 0x60-0x6F Reserved – No Messages Defined Yett",
    "5 0x50-0x5F Reserved – No Messages Defined Yett",
    "4 0x40-0x4F Process Inquiry Messagess",
    "3 0x30-0x3F Property Exchange Messagess",
    "2 0x20-0x2F Profile Configuration Messagess",
    "0 0x00-0x0F Reserved – No Messages Defined Yett",
    "Table 4 Categories of MIDI-CI Messagess",
    "negotiation of Device capabilities in four Categories. Each Category contains multiple messages that workk",
    "MIDI-CI defines Universal System Exclusive messages, Transactions, and mechanisms for the inquiry andd",
    "5.1 Categories of MIDI-CI Messagess",
    "This section outlines concepts and rules common to all categories of MIDI-CI messages and Transactions..",
    "The Message Format Version is broken into 2 parts::",
    "1 byte MIDI-CI Message Version\/Formatt",
    "If a Device sends a message using MIDI-CI Device ID = 0x7F, the message may be sent using any UMP Groupp",
    "Property Exchange messages..",
    "In a MIDI-CI reply message sent by the Responder, this is the source of the reply. Default value is 0x7F ==",
    "In a MIDI-CI inquiry message sent by the Initiator, this is the destination of the inquiry. Default value is 0x7F ==",
    "Block 0x7F. See individual messages as defined in this document for whether each message can be used on a perr",
    "Some MIDI-CI messages, such as Property Exchange messages, are only valid when sent to a whole Functionn",
    "Messages with a Value of 0x7F are addressed to the whole Function Block, not channelized..",
    "MIDI Channels 1-16. Messages with a Value of 0x7E are addressed to the whole Group, not channelized..",
    "Device ID: Source or Destination (depending on type of message))",
    "n bytes Data. Includes any necessary fields to suit the needs of each type of MIDI-CI message..",
    "1 byte MIDI-CI Message Version\/Formatt",
    "0x70–7F: Management Messagess",
    "0x30–3F: Property Exchange Messagess",
    "0x20–2F: Profile Configuration Messagess",
    "1 byte Universal System Exclusive Sub-ID#2: Category and Type of MIDI-CI Message::",
    "Message fields that are known, and ignore any unknown Message fields received..",
    "• When a Device receives messages of a higher Message Format Version than it implements, it should use thee",
    "• MIDI-CI Devices are not required to send messages in earlier Message Format Versions..",
    "Example: A Device that uses Message Format Version 0x03 shall also support reception of versions 0x022",
    "• In addition to the given Message Format Version that a Device uses, the device shall be able to receive andd",
    "• Devices shall use Message Format Version 0x01 or higher. Message Format Version 0x00 is deprecatedd",
    "message (error code 0x02, see section 5.11)..",
    "• If any of the reserved bits of the Message Format Version field are set, the Device shall reply with a NAKK",
    "• If the received message is of the same version as the Device, then no special considerations are necessary..",
    "When receiving a MIDI-CI message, the Device shall examine the received Message Format Version to determinee",
    "Message Format Version than the Receiver supports. If a Device wishes to change to sending a different Messagee",
    "be the same as the Device it is communicating with. Senders should avoid sending messages introduced in a laterr",
    "When sending MIDI-CI messages, a Device shall always use its own Message Format Version, which might nott",
    "5.3 Handling the MIDI-CI Message Version\/Format Fieldd",
    "If the message contains any payload, it is in this field. Some messages define multiple fields in the Data field..",
    "The MUID of the Device intended to receive this message..",
    "The MUID of the Device sending this message..",
    "of messages in this version..",
    "Figure 3 MIDI-CI Message Version\/Format Fieldd",
    "will receive the v3 message, ignoring the additional fields it does not understand..",
    "message, well knowing that Device B will ignore all fields that are new in v2 and v3 of that message. Device BB",
    "Device B sends an Inquiry message to Device A in format v1. Device A must respond with the v3 format of thee",
    "use the v3 format of the Inquiry message. The additional fields it assembles and sends in the Inquiry will bee",
    "Device A sends an Inquiry message to Device B. Device A knows that Device B only supports v1, but it must stilll",
    "When Device A receives a MIDI-CI message from Device B, it shall process all the MIDI-CI Header fieldss",
    "When Device B receives a MIDI-CI message from Device A, it shall process all the MIDI-CI Header fieldss",
    "MIDI-CI messages..",
    "Future MIDI-CI messages in the minor version updates shall only add fields to the end of a message (before F7) ––",
    "NAK message using the Receiver’s Message Format Version and NAK Status Code set to 0x02..",
    "• A Receiver of a Discovery message (or any other message) with the reserved version bits set, reply with aa",
    "Message Format Version reported in Discovery and Reply to Discovery..",
    "• For sending, devices shall not mix Message Format versions. Devices shall send all messages in the samee",
    "• When a Device receives messages of a lower Message Format Version it shall process all relevant Messagee",
    "Universal System Exclusive message (See MIDI 1.0 Detailed Specification [MA01]). The data is formatted ass",
    "The following fields (except F7 End) were added in MIDI-CI Message Version 22",
    "4 bytes Receivable Maximum SysEx Message Size (LSB first))",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 6 MIDI-CI Discovery Message Formatt",
    "• A MIDI-CI capable Device should send a Discovery message when the Device or a Function Block in thee",
    "• A MIDI-CI capable Device should send a Discovery message when the user selects the MIDI-CI Startt",
    "• A MIDI-CI capable Device should send a Discovery message after its power on and boot up procedure iss",
    "on the Initiator Device. Some examples of when a Discovery message might be sent include::",
    "message also declares the MUID of the Initiator. A Discovery message may be sent in response to various eventss",
    "An Initiator shall establish connections to MIDI-CI Responders by sending a Discovery message. The Discoveryy",
    "5.5 Discovery Messagee",
    "the Receivable Maximum SysEx Message Size are 128 or greater..",
    "All MIDI-CI Devices shall support System Exclusive message lengths of at least 128 bytes. The allowed values inn",
    "5.5.3 Receivable Maximum SysEx Message Sizee",
    "field are both of that Management Message Category..",
    "implement MIDI-CI. This MIDI-CI Discovery message and the associated reply (following) that contain thiss",
    "Note: Management Messages (Sub-ID#2 value=0x70-0x7F) shall be supported by all Devices thatt",
    "See Appendix D: for a list of all MIDI-CI messages in all Categories..",
    "The bits correspond to the high nibble of the Sub-ID#2 of various MIDI-CI messages..",
    "D6 6 0x60-0x6F Reserved – No Messages Defined Yett",
    "D5 5 0x50-0x5F Reserved – No Messages Defined Yett",
    "D0 0 0x00-0x0F Reserved – No Messages Defined Yett",
    "set high in any bit indicates support for some inquiry messages of that Category. Support for all messages of thatt",
    "This field is a bitmap which reports the Categories of MIDI-CI messages the Device supports. A value which iss",
    "1 byte Initiator's Output Path Instance Id (from the Discovery message received))",
    "The following fields (except F7 End) were added in MIDI-CI Message Version 22",
    "4 bytes Receivable Maximum SysEx Message Size (LSB first)**",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 8 Reply to Discovery Message Formatt",
    "Discovery message. This message declares the MUID of the Responder..",
    "When a MIDI-CI Device receives a Discovery message it shall become a Responder and send this Reply too",
    "5.6 Reply to Discovery Messagee",
    "Messages to be returned before timing out..",
    "After sending a Discovery Message, an Initiator shall wait at least 3 seconds for all Reply to Discoveryy",
    "SysEx Message Size are 512 or greater..",
    "categories shall support message lengths of at least 512 bytes. The allowed values in the Receivable Maximumm",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 9 Inquiry: Inquiry: Endpoint Message Formatt",
    "An Initiator may send the Inquiry: Endpoint Message to a Function Block in a Responder to get information aboutt",
    "5.7 Inquiry: Endpoint Messagee",
    "The Reply to Discovery shall return the same Output Path Id provided in the originating Discovery Message..",
    "Note: This Reply to Discovery message is mandatory for all MIDI-CI Devices. Devices which do nott",
    "*See the Receivable Maximum SysEx Message Size in Section 5.5.3..",
    "The Responder sets the Status field to the same value it received in the Inquiry: Endpoint Information message..",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 11 Reply to Endpoint Information Message Formatt",
    "Status, it should reply with a MIDI-CI NAK message (See Section 5.11)..",
    "to Endpoint Information message. If the Device is not able to provide the requested information of the givenn",
    "When a MIDI-CI Device receives an Inquiry: Endpoint Information message, it should reply with the Replyy",
    "5.8 Reply to Endpoint Messagee",
    "Id which is also declared in a Product Instance Id Notification message (See the M2-104-UM Universal MIDII",
    "or revert to previous Protocols. An Invalidate MUID message immediately ends all current, pending, orr",
    "When sending or receiving an Invalidate MUID message, a Device is not required to disable any enabled Profiless",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 12 MIDI-CI Invalidate MUID Message Formatt",
    "If a Device receives an Invalidate MUID message with the Target MUID set to the same value as any otherr",
    "If a Device receives an Invalidate MUID message with the Target MUID set to the same value as its own MUID,,",
    "Every MIDI-CI Device shall process received Invalidate MUID messages..",
    "An Invalidate MUID message is used as defined in Section 3.3.2..",
    "5.9 Invalidate MUID Messagee",
    "Instance Id Notification message (See the M2-104-UM Universal MIDI Packet (UMP) Format and MIDI 2.00",
    "Table 13 MIDI-CI ACK Message Formatt",
    "notice of ongoing activity, such as timeout wait messages..",
    "The MIDI-CI ACK Message is a message for dealing with positive acknowledgement of an action, or to provide aa",
    "5.10 MIDI-CI ACK Messagee",
    "1. The Initiator shall send an Invalidate MUID message with the Target MUID set to the duplicated MUID..",
    "If an Initiator sends a MIDI-CI Discovery message and receives multiple replies and where two or more of thee",
    "1. The Responder shall reply with an Invalidate MUID message with the Target MUID set to the duplicatedd",
    "2. The Responder shall send a Reply to Discovery message with the new MUID value..",
    "If a Responder receives a MIDI-CI Discovery message with the Source MUID set to the same value as its ownn",
    "new MIDI-CI Discovery Message to all connections..",
    "When a Device receives an Invalidate MUID message, it does not send any reply or confirmation message. To re--",
    "0x10 - 0x1F Notification Messages – These require further actionn",
    "0x00 - 0x0F Success Messages – Do Not Retryy",
    "ACK message with the original Transaction..",
    "A MIDI-CI ACK message declares the result of a successful transaction or declares the status of an in-progresss",
    "specification. Look for usage explanations in other specifications which reference this message..",
    "Note: This MIDI-CI message is defined for new mechanisms which are not published at the time of thiss",
    "ml bytes Message Textt",
    "2 bytes Message Length (ml) (LSB first))",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 15 MIDI-CI NAK Message Formatt",
    "• Reply to a MIDI-CI message with a MIDI-CI Message Format Version with reserved bits set..",
    "• Reply to a Profile Enable or Disable message for a Profile the Responder does not support or does nott",
    "• Reply to a malformed MIDI-CI messagee",
    "• Reply to a MIDI-CI message with MIDI-CI message Version\/Format the Device does not supportt",
    "• Reply to a MIDI-CI message the Device does not supportt",
    "application for this NAK message include::",
    "The MIDI-CI NAK message is used to respond to any message that a Device does not understand. Examples off",
    "5.11 The MIDI-CI NAK Messagee",
    "3. The Message should not use ASCII Characters below 0x20 (space), except for 0x0A (line feed). Otherr",
    "optionally escaped so it can be encoded in Message values as either \"\/\" or \"\\\/\"..",
    "Due to the restrictions of MIDI 1.0 SysEx, Message values have the following rules::",
    "7-Bit Encoding of Message Textt",
    "Discovery. Therefore, it is generally safe to send up to 103 bytes of Message text..",
    "ACK messages shall not exceed the responder’s Maximum Receivable SysEx Size as established by MIDI-CII",
    "These messages should be presented to the user..",
    "Messages provide extended human readable text that further explains the reason for the MIDI-CI ACK message..",
    "5.10.4 Message Length (ml) and Message Text Encodingg",
    "0x41 0x00 Message was malformedd",
    "0x40 - 0x5F Fail Message – Retry is recommendedd",
    "0x20 0x00 Terminate Inquiry (replaces PE Notify Message with a status of 144))",
    "0x20 - 0x3F Notification Messages – further action is recommendedd",
    "0x01 0x00 MIDI-CI message not supportedd",
    "0x00 - 0x1F Fail Messages – Do Not Retryy",
    "Classification is used, along with other fields, to link the NAK message with the original Transaction..",
    "A MIDI-CI NAK message is always the result of a failed MIDI-CI transaction. The Original Transaction Sub-Id#22",
    "ml bytes Message Textt",
    "2 bytes Message Length (ml) (LSB first))",
    "The following fields (except F7 End) were added in MIDI-CI Message Version 22",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Message Text uses the same format as described in Section 5.10.4..",
    "established by MIDI-CI Discovery. Therefore, it is generally safe to send up to 103 bytes of Message text..",
    "Message Length is in bytes. NAK messages shall not exceed the responder’s Maximum Receivable SysEx Size ass",
    "These messages should be presented to the user..",
    "Messages provide extended human readable text that further explains the reason for the MIDI-CI NAK message..",
    "5.11.4 Message Length (ml) and Message Text Encodingg",
    "Note: A Device receiving a NAK Messages with a status code greater than 0x0F may decide to not retry orr",
    "For definitions of Protocol Negotiation mechanisms and the deprecated messages, see MIDI-CI version 1.11",
    "Table 17 Profile Inquiry Message Formatt",
    "7.2 Profile Inquiry Messagee",
    "These messages are defined in this specification but details of implementing the messages are further defined inn",
    "• Reply to Profile Details Messagee",
    "• Inquiry: Profile Details Messagee",
    "Profiles are controlled by the following Common Profile Configuration messages::",
    "The MIDI-CI specification contains only the base message definitions used for Profile Configuration. Criticall",
    "Profiles define specific implementations of a set of MIDI messages chosen to suit a particular instrument, Devicee",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 18 Reply to Profile Inquiry Message Formatt",
    "There are two lists of Supported Profiles in the message::",
    "When a Responder receives the Profile Inquiry message it shall reply with this message to report a list of Profiless",
    "7.3 Reply to Profile Inquiry Messagee",
    "1 byte MIDI-CI Message Version\/Formatt",
    "message..",
    "might have a Profile that is already active (Enabled) before receiving a Set Profile On message. For example, aa",
    "1 byte Device ID: Source or Destination (depending on type of message)::",
    "Table 21 Profile Removed Report Message Formatt",
    "in the previous Reply to Profile Inquiry message..",
    "should send a Profile Removed Report message to update the list of Currently Disabled Profile Supported declaredd",
    "Device has previously acted as a Responder by sending a Reply to Profile Inquiry message, then the Devicee",
    "message for that Profile immediately following the Profile Added Report..",
    "The Profile Added Report message shall have the Destination MUID set to Broadcast (0x7F 7F 7F 7F)..",
    "1 byte MIDI-CI Message Version\/Formatt",
    "1 byte Device ID: Source or Destination (depending on type of message)::",
    "Table 20 Profile Added Report Message Formatt",
    "the previous Reply to Profile Inquiry message..",
    "should send a Profile Added Report message to update the list of Currently Disabled Profile Supported declared inn",
    "Device has previously acted as a Responder by sending a Reply to Profile Inquiry message, then the Devicee",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 22 Profile Details Inquiry Messagee",
    "know the number of MIDI Channels available for use by a Profile before enabling that Profile. This message mayy",
    "The Profile Details Inquiry message is used by an Initiator to discover details of the Profile implementation of aa",
    "7.6 Profile Details Inquiry Messagee",
    "Report message for that Profile before sending the Profile Removed Report message..",
    "The Profile Removed Report message shall have the Destination MUID set to Broadcast (0x7F 7F 7F 7F)..",
    "1 byte MIDI-CI Message Version\/Formatt",
    "02 MIDI-CI Message Version\/Formatt",
    "Table 23 Reply to Profile Details Inquiry Messagee",
    "7.7 Reply to Profile Details Inquiry Messagee",
    "The following fields (except F7 End) were added in MIDI-CI Message Version 22",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 24 Set Profile On Message Formatt",
    "7.8 Set Profile On Messagee",
    "The content of the Inquiry Target field shall be the same as in the Profile Details Inquiry message which wass",
    "Table 26 Profile Enabled Report Message Formatt",
    "The Profile Enabled Report message shall always have the Destination MUID field set to the Broadcast MUID..",
    "A Device shall send this message if it is unable to comply with a Set Profile Off message and the Profile remainss",
    "• This message should be sent if a Device receives a Program Change which results in enabling a Profile..",
    "• This message should be sent if a user changes to a mode on a Device which results in enabling a Profile..",
    "This is an informative message if any event enables a Profile. For example::",
    "This is an acknowledgement upon receipt of a Set Profile On message..",
    "A Device shall send this message if it has enabled a Profile..",
    "7.10 Profile Enabled Report Messagee",
    "The following fields (except F7 End) were added in MIDI-CI Message Version 22",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 25 Set Profile Off Message Formatt",
    "7.9 Set Profile Off Messagee",
    "Table 27 Profile Disable Report Message Formatt",
    "The Profile Disabled Report message shall always have the Destination MUID field set to the Broadcast MUID..",
    "A Device shall send this message if it is unable to comply with a Set Profile On message and the Profile remainss",
    "• This message should be sent if a Device receives a Program Change which results in disabling a Profile..",
    "• This message should be sent if a user changes to a mode on a Device which results in disabling a Profile..",
    "This is an informative message if any event disables a Profile. For example::",
    "This is an acknowledgement upon receipt of a Set Profile Off message..",
    "A Device shall send this message if it has disabled a Profile..",
    "7.11 Profile Disabled Report Messagee",
    "The following fields (except F7 End) were added in MIDI-CI Message Version 22",
    "1 byte MIDI-CI Message Version\/Formatt",
    "1 byte MIDI-CI Message Version\/Formatt",
    "1 byte Device ID: Source or Destination (depending on type of message)::",
    "Table 28 Profile Specific Data Message Formatt",
    "use of this message and may freely define the contents of the Profile Specific Data field..",
    "to communicate data relating to that Profile ID. This message allows a Profile to send data that is specific to thee",
    "Some Profile specifications might need to define some System Exclusive messages to support unique features orr",
    "7.12 Profile Specific Data Messagee",
    "The following fields (except F7 End) were added in MIDI-CI Message Version 22",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Profiles and it receives a Profile Inquiry message, the Device should send this Reply to Profile Inquiry messagee",
    "Inquiry message with the Number of Currently Enabled Profiles set to 0x00 and with the Number of Currentlyy",
    "If a Device supports Profiles and it receives a Profile Inquiry message on a MIDI Channel, Group, or Functionn",
    "this Reply to Profile Inquiry message with the Number of Currently Enabled Profiles set to 0x00 and with thee",
    "the Discovery Message (see Section 5.5). If that Device receives a Profile Inquiry message, the Device may sendd",
    "the use of the Broadcast MUID. Messages sent to the Broadcast MUID shall not be larger than 512 bytes or shalll",
    "* Profile Specific Data messages shall not be sent to the Broadcast MUID unless the Profile Specification definess",
    "Chunks in Message to 0x0000. Then when sending Chunks, the sender shall set the Number of This Chunk forr",
    "Message” and shall label each Chunk with a sequential “Number of This Chunk”. The Number of This Chunkk",
    "may also choose to send a message in multiple Chunks for its own design requirements..",
    "Discovery Transaction between the Devices) the sender shall break the message into multiple Chunks. A Devicee",
    "exceeds the size of the “Receivable Maximum SysEx Message Size” of the other Device (discovered in the initiall",
    "When a complete Property Exchange message, with all defined SysEx fields and the payload Property Data,,",
    "SysEx messages or “Chunks”..",
    "A Device may choose to send a Property Exchange message as a single SysEx message or as a set of multiplee",
    "The Device ID field of all Property Exchange messages shall be set to 0x0F (whole Function Block). Propertyy",
    "Properties are exchanged by the following Common Property Exchange messages::",
    "The MIDI-CI specification contains only the base message definitions used for Property Exchange. Criticall",
    "in MessageeChunkkin MessageeChunkk",
    "mechanism. For any message that does not contain any Property Data, Number of Chunks in Message shall be sett",
    "Any message that contains Header Data only and does not contain any Property Data shall not use the Chunkingg",
    "Number of Chunks in Message to match the Number of This Chunk..",
    "number of Chunks to match Number of Chunks in Message, then the final Chunk sent shall indicate the end off",
    "If a sender runs out of Property Data or otherwise needs to terminate a message before sending the expectedd",
    "Chunks in Message to match the sequential count value of Number of This Chunk..",
    "When Number of Chunks in Message is unknown, the final Chunk shall declare a new value for Number off",
    "The following fields (except F7 End) were added in MIDI-CI Message Version 22",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 30 Inquiry: Property Exchange Capabilities Message Formatt",
    "information discovered by this message so that this inquiry might be performed only once after the Discoveryy",
    "subsequent Property Exchange messages..",
    "The Initiator may freely choose the value of the Request ID in the initial request message, but the value shall bee",
    "ID as was sent in the associated inquiry message..",
    "of a message shall contain the same Request ID. The reply to an inquiry message shall contain the same Requestt",
    "time. This is useful to prevent a larger PE message which is split over many chunks from blocking smallerr",
    "A Request ID allows the Device to support multiple messages or PE Transactions being sent and received at onee",
    "The following fields (except F7 End) were added in MIDI-CI Message Version 22",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 32 Reply to Property Exchange Capabilities Message Formatt",
    "to report basic information for sending and receiving PE messages..",
    "When a Responder receives the Inquiry: Property Exchange Capabilities message it shall reply with this messagee",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 34 Reply to Get Property Data Message Formatt",
    "A Responder shall send this reply after receiving an Inquiry: Get Property Data message..",
    "*This message does not include any Property Data as defined in this version of MIDI-CI. Set Length of Followingg",
    "01 00 Number of Chunks in Message (LSB first))",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 33 Inquiry Get Property Data Message Formatt",
    "0x0000 = Number of Chunks in Message is Unknownn",
    "2 bytes Number of Chunks in Message (LSB first))",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 35 Inquiry Set Property Data Message Formatt",
    "0x0000 = Number of Chunks in Message is Unknownn",
    "2 bytes Number of Chunks in Message (LSB first))",
    "Table 37 Subscription Message Formatt",
    "Property Data using an Inquiry: Set Property Data message instead..",
    "Note: An Initiator shall not send updates to the Property Data by this message but shall send updates to thee",
    "use this message to end the Subscription (depending on Header Data as defined in the Common Rules for Propertyy",
    "Subsequently, the Responder may then send updates for that Property Data via this Subscription messages or mayy",
    "An Initiator may establish a Subscription to Property Data in a Responder using a Subscription message..",
    "*This message does not include any Property Data as defined in this version of MIDI-CI. Set Length of Followingg",
    "01 00 Number of Chunks in Message (LSB first))",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 36 Reply to Set Property Data Message Formatt",
    "A Responder shall send this reply after receiving an Inquiry: Set Property Data message..",
    "2 bytes Number of Chunks in Message (LSB first))",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 38 Reply to Subscription Message Formatt",
    "A Device shall send this reply after receiving a Subscription message..",
    "0x0000 = Number of Chunks in Message is Unknownn",
    "2 bytes Number of Chunks in Message (LSB first))",
    "1 byte MIDI-CI Message Version\/Formatt",
    "0x0000 = Number of Chunks in Message is Unknownn",
    "2 bytes Number of Chunks in Message (LSB first))",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 39 Notify Message Formatt",
    "preferably used wherever applicable instead of this Notify message. See Sections 5.10 and 5.11..",
    "Note: MIDI-CI ACK and NAK messages are generally more informative reporting mechanisms and aree",
    "messages or other information..",
    "This is an informative message which may be sent by either Initiator or Responder, to report some types of errorr",
    "Table 41 Reply to Process Inquiry Capabilities Message Formatt",
    "shall send Reply to Process Inquiry message to the Initiator..",
    "A Responder which supports Process Inquiry and which receives an Inquiry: Process Inquiry Capabilities messagee",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Table 40 Inquiry: Process Inquiry Capabilities Message Formatt",
    "The Process Inquiry (0x40) message allows the Initiator to detect the supported features from the Process Inquiryy",
    "• End of MIDI Message Reportt",
    "• Reply to MIDI Message Reportt",
    "• Inquiry: MIDI Message Reportt",
    "Properties are exchanged by the following Common Process Inquiry messages::",
    "• Note Data Messagess",
    "• Channel Controller Messagess",
    "• System Messagess",
    "discover the current state of supported MIDI Messages in a Responder including::",
    "message..",
    "4. The Responder declares the end of the MIDI Message Report by sending an End of MIDI Message Reportt",
    "sending the associated MIDI Messages with the current parameter values..",
    "supports and is about to return in reply to the MIDI Message Report request..",
    "(Begin) message. This message contains bitmaps indicating which of the requested messages the devicee",
    "2. The Responder's reply consists of multiple messages, starting with the Reply to MIDI Message Reportt",
    "fields in the message declare target parameters based on the type of MIDI message which control thosee",
    "1. An Initiator requests a MIDI Message Report using an Inquiry: MIDI Message Report request. Certainn",
    "The MIDI Message Report Transaction proceeds with 4 stages::",
    "• Query the current values of parameters which are settable by MIDI Controller messages..",
    "mechanism cannot be used to target any messages which are not stateful..",
    "state or values of those Responder's parameters which are currently controllable by MIDI Messages. Thiss",
    "The MIDI Message Report feature allows Initiators to request information from a Responder about the currentt",
    "9.4 MIDI Message Reportt",
    "D1..6 Reserved – No Messages Defined Yett",
    "D0 MIDI Message Reportt",
    "1 byte MIDI-CI Message Version\/Formatt",
    "1 byte Bitmap of requested Channel Controller Messagess",
    "1 byte Reserved for other System Messages, set to 0x000",
    "1 byte Bitmap of requested System Messagess",
    "1 byte Message Data Controll",
    "1 byte MIDI-CI Message Version\/Formatt",
    "42 Universal System Exclusive Sub-ID#2: Inquiry: MIDI Message Reportt",
    "1 byte Device ID: Source or Destination (depending on type of message)::",
    "Table 43 Inquiry: MIDI Message Report Message Formatt",
    "implements the requested message. As an example, a sound generator which supports MIDI notes and per-notee",
    "A Device may choose not to reply to all message requests in a MIDI Message Report, even if the Devicee",
    "• Note Data Messagess",
    "• Channel Controller Messagess",
    "• System Messagess",
    "Bitmaps in the message allow the Initiator to specify which message states are being requested::",
    "An Initiator sends an Inquiry: MIDI Message Report message to request a MIDI data report from a Responder..",
    "9.5 Inquiry: MIDI Message Reportt",
    "messages as commands if the Initiator needs them for a specific application (such as synchronizing the value(s))",
    "this application, MIDI Messages sent in reply by a Responder are not intended to be commands to the Initiator,,",
    "applications, MIDI Messages are usually sent as commands to set parameters in another receiving Device. But inn",
    "Note that stage 3 above of this mechanism uses MIDI Messages in an atypical manner. In other commonn",
    "full report of note data is requested, a Responder should report Note On \/ Off messages for all active and inactivee",
    "Setting the Message Data Control value to 0x7F requests a full report of all supported and requested messages. If aa",
    "Setting the Message Data Control value to 0x01 is intended to reduce the amount of data being sent by thee",
    "Setting the Message Data Control value to 0x00 is useful for Initiators to detect Responders MIDI Message Reportt",
    "which types of MIDI messages the Responder is capable of reporting by a MIDI Messagee",
    "Table 44 Message Data Control Valuess",
    "response to a MIDI Message Report request..",
    "An Initiator sets the Message Data Control field to configure the amount of data the Responder will return inn",
    "9.5.1 Message Data Controll",
    "The Responder shall return a MIDI-CI NAK Message if Device ID is set between 00-0F (channel 1-16) and thatt",
    "Device ID is 0x7F when Channel Controller and\/or Note Data Message types are requested, the Responder shalll",
    "Device ID field. An inquiry requesting System Messages shall have the Device ID set to 0x7F (Function Block). Iff",
    "In case of Channel Controller and Note Data Message types, an Initiator may specify a MIDI Channel in thee",
    "1 byte Bitmap of requested Note Data Messagess",
    "1 byte Bitmap of requested Note Data Messagess",
    "1 byte Bitmap of requested Channel Controller Messagess",
    "1 byte Reserved for other System Messages, set to 0x000",
    "1 byte Bitmap of requested System Messagess",
    "1 byte MIDI-CI Message Version\/Formatt",
    "43 Universal System Exclusive Sub-ID#2: Reply to MIDI Message Reportt",
    "1 byte Device ID: Source or Destination (depending on type of message)::",
    "Table 45 Inquiry: Reply to MIDI Message Report Message Formatt",
    "to MIDI Message Report (Begin) and End Messages for each individual supported channel..",
    "The Responder shall set the Device ID field to the same value as in the Inquiry: MIDI Message Report message itt",
    "The Responder shall not set any additional bits and shall not report messages that were not requested..",
    "types of messages it will be sending in its response..",
    "Inquiry: MIDI Message Report message. The Responder shall set values in the bitmaps to declare which of thee",
    "The Reply to MIDI Message Report message has fields which contain the same MIDI Message bitmaps as thee",
    "start its reply by sending a Reply to MIDI Message Report message..",
    "If a Responder which supports Process Inquiry receives an Inquiry: MIDI Message Report, then Responder shalll",
    "9.6 Reply to MIDI Message Reportt",
    "3. The Responder shall send only the Mode Messages for the current Mode (124, 125, 126 or 127) enabled..",
    "For each Control Change message recognized::",
    "The Responder shall send the complete set of eight quarter frame messages required to fully declare the currentt",
    "The following messages have unique rules for reporting that type..",
    "9.7.2 Reporting Rules for Specific Messagess",
    "and 2. above before sending messages on the next Group. Messages should be sent in ascending Groupp",
    "3. If the Device ID is set to 0x7F, messages should be sent for each Group according to the order defined in 1..",
    "messages on the next Channel. Channelized messages should be sent in ascending Channel number orderr",
    "2. If the Device ID is set to 0x7E, all the channelized messages on a Channel should be sent before sendingg",
    "Messages D0-D7 fields of the Inquiry: Reply to MIDI Message Report..",
    "D0-D7, Bitmap of requested Channel Controller Messages D0-D7, and Bitmap of requested Note Dataa",
    "1. Messages should be sent in the order of messages declared in the Bitmap of requested System Messagess",
    "Messages should be sent according to the following::",
    "9.7.1 Order of Message Reportingg",
    "message(s)..",
    "the Responder shall send the MIDI message(s) it has declared with the current value for each of the supportedd",
    "After the Responder declares the supported MIDI message(s) in Reply to MIDI Message Report (see Section 9.6))",
    "9.7 MIDI Message Reportingg",
    "1 byte MIDI-CI Message Version\/Formatt",
    "44 Universal System Exclusive Sub-ID#2: End of MIDI Message Reportt",
    "1 byte Device ID: Source or Destination (depending on type of message)::",
    "Table 46 End of MIDI Message Report Message Formatt",
    "MIDI Message Report message..",
    "After all requested messages have been reported, the Responder shall complete the reply by sending an End off",
    "9.8 End of MIDI Message Reportt",
    "to sending the End of MIDI Message Report..",
    "2. For every Note On message which has been sent, the Responder shall send a matching Note Off message priorr",
    "1b. In MIDI 2.0 Protocol: The Responder shall send Note On messages for each currently active note with thee",
    "1a. In MIDI 1.0 Protocol: The Responder shall send a Note On message for each currently active note with thee",
    "In MIDI 2.0 Protocol the Responder shall send a Program Change message with Bank Select fields set properly..",
    "message..",
    "reporting if they are in use as Bank Select, RPN and NRPN messages..",
    "(incorrectly) used as individual Controller Messages. These shall not be sent as part of Control Changee",
    "shall process all MIDI messages in the order received to avoid such problems..",
    "(comprised of Channel Voice Messages) with the messages described here (System Exclusive Messages). Devicess",
    "Messages in a MIDI Message stream. This could create problems when bracketing MIDI Message Reportss",
    "An incorrect MIDI implementation might change the ordering of System Exclusive messages and Channel Voicee",
    "of MIDI Message Report has not been received..",
    "receives a NAK, the Initiator shall assume that the MIDI Message Report Transaction has ended, even if an Endd",
    "If a Responder needs to abort a MIDI Message Report or has an error, the Responder shall send a MIDI-CI NAKK",
    "9.8.1 Incomplete MIDI Message Reportt",
    "Device MUID proxy, translating MUID in all messages to\/from the colliding Devices..",
    "1. An echo back of its own message (matching Product Instance Idd",
    "If a Device receives a MIDI-CI Discovery message with a MUID that matches its own MUID and Devicee",
    "defined in the last revision before the message was removed or deprecated, or declare which prior version of thee",
    "When a message is removed or deprecated, the specification shall either include the definition of the message, ass",
    "B.4 Removing and Deprecating Messagess",
    "added in this MIDI-CI message version as has been done for some messages in this version of specification..",
    "When a specification update extends an existing message, the specification shall clearly specify which fields weree",
    "Modifying existing messages should only add fields. Existing fields should not be modified..",
    "B.3 Modifying Existing Messagess",
    "specification text of an added category shall also specify the initial message version..",
    "message was introduced. This also applies to all messages that are added with a new MIDI-CI category. Thee",
    "The definition of every new message shall mention the initial MIDI-CI Message Format Version when thiss",
    "B.2 Adding New Messages or Categoriess",
    "In general, the MIDI-CI specification document version is independent from the Message Format Version..",
    "Increasing the MIDI-CI message version applies to all messages, regardless of whether they were changed or not..",
    "data to MIDI-CI messages..",
    "The goal is that for every given Message Format Version, the fields and the total length of every message are welll",
    "• deprecate or remove messages..",
    "• insert new fields between previously defined message fields..",
    "• change data format of previously defined message fields..",
    "• change definitions of previously defined message fields..",
    "• change mechanisms of previously defined messages..",
    "A new MIDI-CI Message Major Version shall be introduced whenever a MIDI-CI specification update does onee",
    "The MIDI-CI Message Format Version number may stay the same if an update only introduces editorial changes..",
    "• introduce a new MIDI-CI message category..",
    "The MIDI-CI Message Minor Format Version number may be increased whenever a MIDI-CI specification updatee",
    "The MIDI-CI Message Minor Format Version number should be increased whenever a MIDI-CI specificationn",
    "• deprecate messages..",
    "• extend existing messages..",
    "the new message does not change the function of other messages in the category..",
    "• add new messages in existing categories unless the existence of the new messages can be discovered, andd",
    "The MIDI-CI Message Minor Format Version number shall be increased whenever a MIDI-CI specificationn",
    "B.1 Increasing the Message Format Versionn",
    "specification contains the full message definition. The message version of when it was removed or deprecatedd",
    "Category 3: Property Exchange Messagess",
    "Category 2: Profile Configuration Messagess",
    "Category 1: Protocol Negotiation (all messages deprecated as of version 1.2 of MIDI-CI))",
    "Sub-ID#2 Message Type Message Source Addressess",
    "0x70-7F Management Messagess",
    "0x30-3F Property Exchange Messagess",
    "0x20-2F Profile Configuration Messagess",
    "Universal System Exclusive Sub-ID#2 declares the Category and Type of MIDI-CI Message::",
    "List of all MIDI-CI Messages sorted by Universal System Exclusive Sub-ID#2..",
    "Appendix D: List of all MIDI-CI Messagess",
    "Category 7: Management Messagess",
    "0x44 End of MIDI Message Report Responder 0x00-0F, 0x7E, 0x7FF",
    "0x43 Reply to MIDI Message Report Responder 0x00-0F, 0x7E, 0x7FF",
    "0x42 Inquiry: MIDI Message Report Initiator 0x00-0F, 0x7E, 0x7FF",
    "above is the ability to Respond to a MIDI-CI Discovery messages. A MIDI-CI Discovery Transaction informs thee",
    "Message, a MIDI-CI Device must be able to generate a new, different MUID (not the onlyy",
    "For example: To properly respond to MIDI-CI Discovery message, a MIDI-CI Device must generate itss",
    "• Be able to send a NAK message when appropriatee",
    "• Respond to Invalidate MUID Messagess",
    "• Respond to MIDI-CI Discovery messagess",
    "• Support System Exclusive message lengths of at least 128 bytes. Support System Exclusive messagee",
    "of Universal System Exclusive messages used for Profile Configuration (and muchh",
    "and Profile Removed Report messages. Added Function Blockk",
    "June 15, 2023 1.1 Added Profile Details Inquiry messages. Added Profile Added Reportt",
    "Step 4: Responder Sends Profile Enabled Message ......................................................... 211",
    "Step 3: Initiator Sends Set Profile On Message ............................................................... 200",
    "Step 2: Responder Sends Reply to Profile Details Inquiry Message ............................... 200",
    "Step 1: Initiator Sends Profile Details Inquiry Message .................................................. 199",
    "0x29 Reply to Profile Details Inquiry Message ............................................................... 188",
    "0x28 Profile Details Inquiry Message .............................................................................. 188",
    "2.4 Common Profile Configuration Messages (MIDI-CI Messages) ............................................... 155",
    "Appendix A: Defined Control Change Messages Common to All Profiles.......................................... 288",
    "3.7 Mode Messages .......................................................................................................................... 266",
    "3.6.1 Control Change (CC) Messages...................................................................................... 266",
    "Table 8 Reply to Profile Details Inquiry Message, Maximum Number of Channels .......................... 199",
    "Table 6 MIDI-CI Profile Configuration Messages ................................................................................. 155",
    "This version of the Common Rules for Profiles defines the use of messages defined in version 1.2 of the M2-101--",
    "advantage of the 2-way communication so that a sender can know that receiver will use MIDI messages in thee",
    "communication into account. There is a \"GM On\" message but no reply from the receiver. MIDI-CI Profiles takee",
    "control with increased predictability of the results that will come from sending related MIDI messages. MIDI-CII",
    "chosen set of MIDI messages..",
    "defining response to MIDI messages, a Profile may optionally also define other device functionality requirements..",
    "chosen set of MIDI messages to achieve a particular purpose or to suit a particular application. In addition too",
    "Configuration messages which are defined in the MIDI Capability Inquiry (MIDI-CI) specification [MA03]..",
    "MIDI messages to achieve a particular purpose or to suit a particular application. This specification defines ruless",
    "MIDI Out: A hardware or software MIDI connection used by a MIDI Device to transmit MIDI messages to aa",
    "MIDI In: A hardware or software MIDI connection used by a MIDI Device to receive MIDI messages from aa",
    "MIDI Endpoint: A Device which is an original source of MIDI messages or final consumer of MIDI messages..",
    "single message that satisfies the Inquiry, a set of multiple messages that satisfy the Inquiry, or an error message..",
    "MIDI-CI Transaction: A Transaction using a set of MIDI-CI messages that includes an Inquiry sent by ann",
    "MIDI 2.0 Protocol: Version 2.0 of the MIDI Protocol. The native format for MIDI 2.0 Protocol messages is UMPP",
    "MIDI 2.0 Protocol, MIDI 2.0 messages, and other extensions to MIDI as described in AMEI and MAA",
    "the MIDI 1.0 Protocol is a byte stream, but it has been adapted for many different Transports. MIDI 1.0 messagess",
    "AMEI with numerous additional MIDI message definitions and Recommended Practices. The native format forr",
    "Inquiry: A message sent by an Initiator to begin a Transaction..",
    "any given MIDI message) to one of 16 Groups. See the M2-104-UM Universal MIDI Packet (UMP) Format andd",
    "Group: A field in the UMP Format addressing some UMP Format MIDI messages (and some UMPs comprisingg",
    "Device: An entity, whether hardware or software, which can send and\/or receive MIDI messages..",
    "all MIDI 1.0 Protocol messages and all MIDI 2.0 Protocol messages. UMP is intended to be universallyy",
    "Such Devices may use UMP Message Types that extend the functionality beyond Non-UMP MIDI 1.0 Systems..",
    "UMP MIDI 1.0 Device: any Device that sends or receives MIDI 1.0 Protocol messages using the UMP [MA06]..",
    "UMP Format: Data format for fields and messages in the Universal MIDI Packet, see [MA06]..",
    "replies from a second MIDI Device. A Transaction may be a more complex set of message exchanges, started byy",
    "MIDI messages in a single Transaction are associated and work together to accomplish one function. The simplestt",
    "Transaction: An exchange of MIDI messages between two MIDI Devices with a bidirectional connection. All thee",
    "which is retransmitting messages which originated in another MIDI Device..",
    "Source: A Source is a Sender which originates or generates MIDI messages. A Source does not include a Senderr",
    "Sender: A MIDI Device which transmits MIDI messages to a MIDI Transport which is connected to its MIDI Outt",
    "RPNs have equivalent messages in the MIDI 2.0 Protocol, called Registered Controllers (see [MA06])..",
    "RPN: Registered Parameter Number, a type of controller message defined in the MIDI 1.0 Protocol [MA01]..",
    "based on negotiation messages managed by the Initiator Device. Also see Initiator..",
    "the Device that receives an Inquiry message from an Initiator Device as part of a MIDI-CI Transaction and actss",
    "data structure that defines the semantics for MIDI messages. See [MA01] and [MA06]..",
    "minimum set of mandatory messages and features, along with some optional or recommended messages andd",
    "messages. A Profile is controlled by MIDI-CI Profile Negotiation Transactions. A Profile may have a definedd",
    "Profile: An MA\/AMEI specification that includes a set of MIDI messages and defined responses to thosee",
    "[MA01]. NRPNs have equivalent messages in the MIDI 2.0 Protocol, called Assignable Controllers (see [MA06])..",
    "NRPN: Non-Registered Parameter Number, a type of controller message defined in the MIDI 1.0 Protocoll",
    "Device in MIDI-CI messages sent to or from that Device..",
    "messages to and\/or from another Device..",
    "Organ Profile. It would configure a different set of on-screen controls and MIDI messages if it found that thee",
    "associated MIDI messages that control parameters of any device that it discovers which conforms to the Drawbarr",
    "Message Reportt",
    "Messagee",
    "MDS messagess",
    "Send System Messagess",
    "Messagess",
    "This section defines device design for using Profiles, implementing MIDI-CI Profile Configuration messages forr",
    "See the MIDI-CI specification v1.2 [MA03] for more about addressing MIDI-CI messages..",
    "basis. Addressing is done using the Device ID of the Universal System Exclusive messages::",
    "MIDI-CI Profile Configuration messages can be addressed on a Channel, Group wide or Function Block widee",
    "Standardized Profiles and Manufacturers’ proprietary Profiles are identified in MIDI-CI Profile messages in a sett",
    "one or more Reply to Profile Inquiry messages to report supported Profiles. These inquiries and replies havee",
    "numbered Group in the series. MIDI-CI Profile Configuration messages are sent on the Manager Channel..",
    "sends Profile Enabled message or Profile Disabled message with the Device ID address of the Managerr",
    "Profile Disable message with the Device ID address of the target Manager Channel, 0x00-0x0F. Responderr",
    "0x00-0x0F. The Responder replies with the same Device ID. Initiator sends Profile Enable message orr",
    "with the Device ID address 0x7F. Responder sends Profile Enabled message or Profile Disabled messagee",
    "replies with the Device ID address 0x7F. Initiator sends Profile Enable message or Profile Disable messagee",
    "Disabled message with the Device ID address 0x7E..",
    "Disable message with the Device ID address 0x7E. Responder sends Profile Enabled message or Profilee",
    "Responder replies with the Device ID address 0x7E. Initiator sends Profile Enable message or Profilee",
    "Profile Enabled message or Profile Disabled message with the Device ID address of the MIDI Channell",
    "Disable message with the Device ID address of the target MIDI Channel 0x00-0x0F. Responder sendss",
    "0x0F. The Responder replies with the same Device ID. Initiator sends Profile Enable message or Profilee",
    "#1: MIDI-CIIMIDI-CI Message NumberrRequirementt",
    "Table 6 MIDI-CI Profile Configuration Messagess",
    "Also see the MIDI-CI Specification [MA03] for more details of MIDI-CI Profile Configuration messages..",
    "All Profiles Specifications and compatible Devices should support the Common Profile Messages that are definedd",
    "2.4 Common Profile Configuration Messages (MIDI-CI Messages))",
    "Manager Channel shall use Volume message (CC#7) as the volume of that one Channel and not use itt",
    "2. the Volume messages (CC#7) on Member Channels controls the volume of that one Channel, then thee",
    "Channels, then all the Member Channels shall ignore Volume messages (CC#7) on their ownn",
    "1. If the Volume message (CC#7) on the Manager Channel affects total output volume of all Memberr",
    "Functions other than MIDI-CI messages for Profile Configuration. The Profile specification shall clearly definee",
    "MIDI-CI Profile Configuration messages are sent on the Manager Channel (1 to 11), and it is known by thee",
    "whole Banjo and other similar messages are typically sent on the Manager Channel. Note related controll",
    "above the Manager Channel are used for messages related to the five strings. Main volume and tone of thee",
    "sends this Reply to Profile Inquiry message addressed with that Channel to report the Channel Profiles supportedd",
    "When a Responder receives the Profile Inquiry message on a specific Channel address 0x00-0x0F, the Responderr",
    "Profile Off and Profile Disabled messages..",
    "Profile On and Profile Enabled messages..",
    "message..",
    "the Profile Added Report message..",
    "inquiry messages to report a list of Profiles the Responder supports..",
    "When a Responder receives the Profile Inquiry message it shall reply with one or more Reply to Profilee",
    "structure (See Section 2.3), a Reply to Profile Inquiry message (below) addressed to 0x7F onlyy",
    "interoperability. The message may be addressed to::",
    "This is an informative message if an event local to the device enables a Profile..",
    "This is an acknowledgement upon receipt of a Set Profile On message..",
    "A device sends this message if it has enabled a Profile..",
    "Report message for that Profile before sending the Profile Removed Report message..",
    "The Profile Removed Report message shall be sent with the Destination MUID set to Broadcast (0x7F 7F 7F 7F)..",
    "in the previous Reply to Profile Inquiry message. See Table 7 Lists of Profiles Supported..",
    "should send a Profile Removed Report message to update the list of Currently Disabled Profile Supported declaredd",
    "Device has previously acted as a Responder by sending a Reply to Profile Inquiry message, then the Devicee",
    "message for that Profile immediately following the Profile Added Report..",
    "The Profile Added Report message shall be sent with the Destination MUID set to Broadcast (0x7F 7F 7F 7F)..",
    "the previous Reply to Profile Inquiry message. See Table 7 Lists of Profiles Supported..",
    "should send a Profile Added Report message to update the list of Currently Disabled Profile Supported declared inn",
    "Device has previously acted as a Responder by sending a Reply to Profile Inquiry message, then the Devicee",
    "3. As a final reply, the Responder shall send a Reply to Profile Inquiry message with address 0x7F too",
    "Inquiry messages with address 0x7E to report Group Profiles supported on each Group of thee",
    "messages on those Channels first..",
    "one or more Reply to Profile Inquiry messages in the following order::",
    "When a Responder receives the Profile Inquiry message on the Function Block address 0x7F, it shall reply withh",
    "this Reply to Profile Inquiry message addressed with that Group to report the Group Profiles supported on thee",
    "When a Responder receives the Profile Inquiry message on a specific Group address 0x7E, the Responder sendss",
    "A Profile specification shall define whether a Reply to Profile Details Inquiry Message may be also used as aa",
    "Profile Details Inquiry Message may also be used as a Notification for that Target Data..",
    "without prior receipt of a Profile Details Inquiry message. It is then used as a Notification message from a devicee",
    "If a Target Data definition allows it, the Reply to Profile Details message for that Target Data may also be sentt",
    "the Inquiry Target in the Profile Details Inquiry message..",
    "When a Responder receives the Profile Details Inquiry message it shall send this message with data appropriate too",
    "0x29 Reply to Profile Details Inquiry Messagee",
    "NAK message with a Status Code value 0x04..",
    "If a Responder which supports Profile Configuration receives a Profile Details Inquiry message addressed to aa",
    "This message may also be used to discover details about a Responder's Profile implementation while it is enabled..",
    "0x28 Profile Details Inquiry Messagee",
    "This is an informative message if an event local to the device disables a Profile..",
    "This is an acknowledgement upon receipt of a Set Profile Off message..",
    "A device sends this message if it has disabled a Profile..",
    "1 byte MIDI-CI Message Version\/Formatt",
    "0x28 Universal System Exclusive Sub-ID#2: Inquiry: Profile Details Inquiry Messagee",
    "1 byte Device ID: Source or Destination (depending on type of message)::",
    "Step 1: Initiator Sends Profile Details Inquiry Messagee",
    "Requested field in the Enable Profile message to a number higher than the Responder declared in the Maximumm",
    "Channels and when the Initiator sends an Enable Profile message. The Initiator shall not set the Number Channelss",
    "After the Initiator receives the Reply to Profile Details Inquiry Message with Maximum Number of MIDII",
    "Other defined MIDI-CI message fields here..",
    "Table 8 Reply to Profile Details Inquiry Message, Maximum Number of Channelss",
    "When the Responder receives a Profile Details Inquiry message with the Inquiry Target field set to 0x00, thee",
    "A Reply to Profile Details Inquiry Message with this Target Data shall not be sent as a Notification..",
    "Step 3: Initiator Sends Set Profile On Messagee",
    "1 byte MIDI-CI Message Version\/Formatt",
    "0x29 Universal System Exclusive Sub-ID#2: Inquiry: Reply to Profile Details Messagee",
    "1 byte Device ID: Source or Destination (depending on type of message)::",
    "Step 2: Responder Sends Reply to Profile Details Inquiry Messagee",
    "message..",
    "device has enabled the Profile, it shall reply with a Profile Enabled message..",
    "A device shall enable any Profile it supports after it receives the associated Set Profile On Message. After thee",
    "The following fields (except F7 End) were added in MIDI-CI Message Version 22",
    "0x02 MIDI-CI Message Version\/Formatt",
    "Step 4: Responder Sends Profile Enabled Messagee",
    "The following fields (except F7 End) were added in MIDI-CI Message Version 22",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Such a Device should reasonably limit Profile Configuration messages to those which match a user’s intendedd",
    "based on the choice of Programs, the Device should avoid sending Profile Configuration messages for everyy",
    "replies to the Profile On message::",
    "If a device has a Profile (Profile A) enabled and it receives a Profile On message for another Profile (Profile B))",
    "a MIDI-CI NAK Message..",
    "• If a device receives a Set Profile Off message for a Profile that it does not support, then it should reply withh",
    "• If a device receives a Set Profile Off message for a Profile that it supports but the device is unable to disablee",
    "the associated Profile Disabled message..",
    "If a device receives a Program Change message that causes a specific Profile to be disabled, the device shall sendd",
    "message..",
    "to disable a particular Profile, then it shall reply with a Profile Enabled message..",
    "the device has disabled the Profile, it shall reply with a Profile Disabled message. However, if a device is not ablee",
    "A device should disable a Profile after it receives the associated Set Profile Off Message from an Initiator. Afterr",
    "a MIDI-CI NAK Message..",
    "• If a device receives a Set Profile On message for a Profile that it does not support, then it should reply withh",
    "• If a device receives a Set Profile On message for a Profile that it supports but the device is unable to enablee",
    "the associated Profile Enabled message..",
    "If a device receives a Program Change message that causes a specific Profile to be enabled, the device shall sendd",
    "“Profile ID Byte 5, Profile Level” in the 6 Common Profile Messages of MIDI-CI. See the following table..",
    "Manufacturer-Specific Profiles should use Assignable Controllers (NRPN) messages to control any function thatt",
    "As a general rule (but not a hard requirement) new Profiles should define Registered Controller (RPN) messagess",
    "Control Change messages should not gain new definitions within a Profile but should be reserved for legacyy",
    "• Message response times or other performance standardss",
    "• Any Profile-specific System Exclusive messagess",
    "• Any applicable Universal System Exclusive messagess",
    "• Response to System messagess",
    "• Response to Bank Select and Program Change messagess",
    "• Response to specific Registered Controller (RPN) messagess",
    "• Response to Control Change messagess",
    "• Response to messages that influence note tuningg",
    "• Response to Note On\/Off messagess",
    "A Profile Specification defines the Receiver device implementation of specific MIDI messages including but nott",
    "Receiver receives a Set Profile On message with Highest Possible Level value set, the Receiver should enable alll",
    "A Sender uses the value 0x7F for the Profile Level Support field when sending a Set Profile On message. When aa",
    "messages to the Receiver as though the Receiver meets the Minimum Required. Sender or Receiver may choose too",
    "fields for those Note On and Note Off messages shall be defined by the Profile specification. This definition of thee",
    "Note Off messages..",
    "As much as practicably possible, Profile definitions should use the same message to control any function that iss",
    "commonality of the messages used by the Profiles..",
    "change messages might trigger All Notes Off while ignoring the rest of the default mechanisms (See Generall",
    "Controllers (CC#121). A Profile for any device that uses Note-On\/Off messages shall define the response to all off",
    "MIDI Mode Messages (CC#120-127) have special functionality. All Profiles shall define the response to Reset Alll",
    "3.7 Mode Messagess",
    "Registered Controller (RPN) messages may be controlled by Assignable Controllers (NRPN) messages withoutt",
    "Controller for parameters normally addressable by a Control Change where increased functionality of the messagee",
    "For new control parameters that are not already assigned by MIDI 1.0 to specific Control Change messages,,",
    "Refer to the latest MIDI specifications for any further updates to the list of Control Change Messages..",
    "observe those legacy assignments. A list of Control Change messages that Profiles should use if they have thee",
    "MIDI 1.0 has defined default assignment of Control Change messages to specific parameters. Profiles shalll",
    "3.6.1 Control Change (CC) Messagess",
    "messages as defined in Section 3.4.1. whether using MIDI 1.0 Protocol or MIDI 2.0 Protocol..",
    "messages. Standard Translator devices may not be able to perform that unique translation. But specializedd",
    "protocols. MIDI 2.0 has some messages and features that do not have equivalent messages and features in MIDII",
    "or devices that use Note On\/Off messages to represent musical notes. Typical Instrument Profiles might includee",
    "Profiles are not required to support all these messages..",
    "A list of Control Change messages that Profiles should use if they define the use of the associated parameter..",
    "Appendix A: Defined Control Change Messages Common to Alll",
    "127 01111111 7F [Channel Mode Message] Poly Mode On (+ mono off, +all notess",
    "126 01111110 7E [Channel Mode Message] Mono Mode On (+ poly off, + all notess",
    "125 01111101 7D [Channel Mode Message] Omni Mode On (+ all notes off))",
    "124 01111100 7C [Channel Mode Message] Omni Mode Off (+ all notes off))",
    "123 01111011 7B [Channel Mode Message] All Notes Offf",
    "122 01111010 7A [Channel Mode Message] Local Control On\/Offf",
    "121 01111001 79 [Channel Mode Message] Reset All Controllerss",
    "120 01111000 78 [Channel Mode Message] All Sound Offf",
    "Controller numbers 120-127 are reserved for Channel Mode Messages, which rather than controlling soundd",
    "of Universal System Exclusive messages used for Property Exchange. However, itt",
    "Message Format. Moved example device from prior Appendix A too",
    "2020-12-08 1.1 Fixed an error in field layout order in the message shown in PEE",
    "7.4.1 Table of status codes used in a Reply Message .............................................................. 299",
    "5 Property Exchange: MIDI-CI SysEx Messages .............................................................................. 211",
    "3.3 Property Exchange Message Format .......................................................................................... 166",
    "11.2 Replying to Subscription Messages ............................................................................................ 422",
    "Table 4 PE Message Format ..................................................................................................................... 166",
    "15.4 Sending a Retransmit MIDI-CI NAK Message .......................................................................... 722",
    "15.1 Flow Control MIDI-CI ACK Message ....................................................................................... 699",
    "14.2 Property Data for ResourceList Returned via a Reply to Get Property Data Message .............. 600",
    "Table 54 Responder Sends Subscription Message using a \"full\" command ....................................... 455",
    "Table 51 Initiator Sends Reply to Subscription Message ....................................................................... 444",
    "Table 50 Responder Sends Subscription Message using a \"full\" command ....................................... 444",
    "Table 49 Initiator Sends Reply to Subscription Message ....................................................................... 444",
    "Table 48 Responder Sends Subscription Message using a \"full\" command ....................................... 444",
    "Table 47 Responder Sends Reply toSubscription Message .................................................................... 433",
    "Table 46 Initiator Sends a Subscription Message ................................................................................... 433",
    "Table 43 Initiator Sends Reply to Subscription Message ....................................................................... 433",
    "Table 42 Step 2: Responder Sends Subscription Message using a \"full\" command ........................... 422",
    "Table 41 Responder Sends Reply toSubscription Message .................................................................... 422",
    "Table 40 Step 1: Initiator Sends a Subscription Message ...................................................................... 422",
    "Table 36 Responder Sends Reply to Set Property Data Message .......................................................... 399",
    "Table 35 Initiator Sends Inquiry: Set Property Data Message ............................................................. 399",
    "Table 34 Responder Sends Reply to Set Property Data Message .......................................................... 388",
    "Table 33 Initiator Sends Inquiry: Set Property Data Message ............................................................. 388",
    "Table 30 Responder Sends Reply to Set Property Data Message .......................................................... 388",
    "Table 29 Initiator Sends Inquiry: Set Property Data Message ............................................................. 377",
    "Table 11 All MIDI-CI Messages used for Property Exchange .............................................................. 211",
    "Table 97 Retransmit MIDI-CI NAK Message ........................................................................................ 722",
    "Table 96 Example of using Flow Control an Inquiry: Set Property Data Message ............................ 711",
    "Table 95 Example of using Flow Control an Inquiry: Get Property Data Message ............................ 700",
    "Table 94 MIDI-CI ACK Message used for Flow Control ...................................................................... 699",
    "Message ....................................................................................................................................................... 644",
    "Message ....................................................................................................................................................... 611",
    "Table 78 Initiator Sends an Inquiry: Get Property Data Message ...................................................... 600",
    "Table 77 Initiator Sends Reply to Subscription Message ....................................................................... 599",
    "Table 76 Initiator Sends an Inquiry: Set Property Data Message ....................................................... 599",
    "Table 74 Initiator Sends an Inquiry: Get Property Data Message ...................................................... 588",
    "Table 71 Initiator Sends Reply to Inquiry: Set Property Data Message .............................................. 555",
    "Table 70 Initiator Sends an Inquiry: Set Property Data Message ....................................................... 555",
    "Table 66 Initiator Sends an Inquiry: Get Property Data Message ....................................................... 522",
    "Table 63 Initiator Sends Notify Message ................................................................................................. 499",
    "Table 62 Responder Sends Notify Message ............................................................................................. 499",
    "Table 61 MIDI-CI ACK Message used for Flow Control ...................................................................... 488",
    "Table 60 Initiator or Responder Sends Notify Message ......................................................................... 477",
    "Table 58 Initiator Subscription Message ................................................................................................. 455",
    "Table 57 Initiator Sends Reply to Subscription Message ....................................................................... 455",
    "Table 56 Responder Sends Subscription Message using a \"full\" command ....................................... 455",
    "Table 55 Initiator Sends Reply to Subscription Message ....................................................................... 455",
    "Inquiry: A message sent by an Initiator to begin a Transaction..",
    "any given MIDI message) to one of 16 Groups. See the M2-104-UM Universal MIDI Packet (UMP) Format andd",
    "Group: A field in the UMP Format addressing some UMP Format MIDI messages (and some UMPs comprisingg",
    "ID in MIDI-CI messages is defined in the MIDI Capability Inquiry [MA03] specification. The use of “Device” inn",
    "Device ID: A one-byte field in Universal System Exclusive messages, as defined in the MIDI 1.0 Specificationn",
    "Device: An entity, whether hardware or software, which can send and\/or receive MIDI messages..",
    "Destination: A Receiver to which the Sender intends to send MIDI messages..",
    "Data Set: A complete Property Exchange message whether sent in one System Exclusive message in singlee",
    "Controller Message: Any MIDI Message from the following list::",
    "spans multiple System Exclusive messages..",
    "Chunk: A single System Exclusive message that is one segment of a complete Property Exchange message whichh",
    "Category: A collection of MIDI-CI messages grouped together because they function together or address similarr",
    "minimum set of mandatory messages and features, along with some optional or recommended messages andd",
    "messages. A Profile is controlled by MIDI-CI Profile Negotiation Transactions. A Profile may have a definedd",
    "Profile: An MA\/AMEI specification that includes a set of MIDI messages and defined responses to thosee",
    "supported MIDI Messages in another device..",
    "Device in MIDI-CI messages sent to or from that Device..",
    "messages to and\/or from another Device..",
    "MIDI In: A hardware or software MIDI connection used by a MIDI Device to receive MIDI messages from aa",
    "Supports only MIDI 1.0 or is switchable between MIDI 1.0 and MIDI 2.0 Protocol messages..",
    "MIDI Endpoint: A Device which is an original source of MIDI messages or final consumer of MIDI messages..",
    "single message that satisfies the Inquiry, a set of multiple messages that satisfy the Inquiry, or an error message..",
    "MIDI-CI Transaction: A Transaction using a set of MIDI-CI messages that includes an Inquiry sent by ann",
    "MIDI 2.0 Protocol: Version 2.0 of the MIDI Protocol. The native format for MIDI 2.0 Protocol messages is UMPP",
    "MIDI 2.0 Protocol, MIDI 2.0 messages, and other extensions to MIDI as described in AMEI and MAA",
    "the MIDI 1.0 Protocol is a byte stream, but it has been adapted for many different transports. MIDI 1.0 messagess",
    "AMEI with numerous additional MIDI message definitions and Recommended Practices. The native format forr",
    "all MIDI 1.0 Protocol messages and all MIDI 2.0 Protocol messages. UMP is intended to be universallyy",
    "Such Devices may use UMP Message Types that extend the functionality beyond Non-UMP MIDI 1.0 Systems..",
    "UMP MIDI 1.0 Device: any Device that sends or receives MIDI 1.0 Protocol messages using the UMP [MA06]..",
    "UMP Format: Data format for fields and messages in the Universal MIDI Packet, see [MA06]..",
    "replies from a second MIDI Device. A Transaction may be a more complex set of message exchanges, started byy",
    "MIDI messages in a single Transaction are associated and work together to accomplish one function. The simplestt",
    "Transaction: An exchange of MIDI messages between two MIDI Devices with a bidirectional connection. All thee",
    "which is retransmitting messages which originated in another MIDI Device..",
    "Source: A Source is a Sender which originates or generates MIDI messages. A Source does not include a Senderr",
    "Sender: A MIDI Device which transmits MIDI messages to a MIDI Transport which is connected to its MIDI Outt",
    "based on negotiation messages managed by the Initiator Device. Also see Initiator..",
    "the Device that receives an Inquiry message from an Initiator Device as part of a MIDI-CI Transaction and actss",
    "data structure that defines the semantics for MIDI messages. See [MA01] and [MA06]..",
    "Exchange messages. Further Property Exchange specifications define schemas and various data payloads that usee",
    "Property Exchange Transactions. The rules also define specific details for using the Property Exchange messagess",
    "System Exclusive determines the broad function of the message. The payload of the message includes a Headerr",
    "Property Exchange is sent via MIDI-CI Universal System Exclusive messages. System Exclusive SubID#2 of thee",
    "MIDI-CI also provides a NAK message that can be used with Property Exchange..",
    "informative error message via a Reply message..",
    "Property Exchange also defines a Notify message to report general errors when it is not possible to send a moree",
    "Property Exchange defines a set of informative error messages that are returned in an associated Reply message iff",
    "Error Messagess",
    "by a Subscription message. The subscription mechanism can also be used to keep the understanding of a Resourcee",
    "These inquiries are messages issued by the Initiator, with reply messages being returned by the Responder..",
    "of an attached device using an Inquiry: Get Property Data message and an Inquiry: Set Property Data message..",
    "3. An Initiator sends an Inquiry: Get Property Data message with a “ResourceList” request to discover whichh",
    "2. The two Devices use an Inquiry: Property Exchange Capabilities message and reply to discover basic Propertyy",
    "messages. These two Devices are the MIDI-CI Initiator and the MIDI-CI Responder..",
    "Property Exchange is a dialogue between two MIDI Devices using Inquiry messages and matching Replyy",
    "0x32–3F: Property Exchange Messagess",
    "1 byte Universal System Exclusive Sub-ID#2: Category and Type of MIDI-CI Message::",
    "1 byte Device ID: Source or Destination (depending on type of message)::",
    "Table 4 PE Message Formatt",
    "Property Exchange messages are in the following format::",
    "3.3 Property Exchange Message Formatt",
    "then the MIDI message method shall be used..",
    "accomplished by using a common MIDI message (such as a Program Change or Control Change message))",
    "Property Exchange has a \"MIDI messages first\" approach. If a method of changing a setting can bee",
    "Use MIDI Messages Whenever Possiblee",
    "Examples throughout the remainder of this specification do not include all the fields of the message as shownn",
    "These fields track the separate but associated Inquiry and Reply Messagess",
    "1 byte MIDI-CI Message Version\/Formatt",
    "Support from the effect pedal. The effect pedal returns a Reply to Property Exchange Capabilities message..",
    "The software sends an Inquiry: Property Exchange Capabilities message to request details of Property Exchangee",
    "Note: Tables in this example focus on the payload and omit other fields in the messages. See Section 3.4..",
    "with a preformed SysEx message fixed in ROM. The SysEx messages include the Property Data as described inn",
    "MIDI-CI Management Messagess",
    "messages..",
    "0x3F Notify Message Notify Messages informs an Initiator orr",
    "Message has been received..",
    "0x36 Inquiry: Set Property Data The Inquiry: Set Property Data message iss",
    "0x34 Inquiry: Get Property Data The Inquiry: Get Property Data message iss",
    "MIDI-CI Property Exchange Messagess",
    "Sub ID #2 Message Type Descriptionn",
    "Table 11 All MIDI-CI Messages used for Property Exchangee",
    "MIDI-CI defines several different types of Inquiry messages differentiated by the Universal System Exclusive Subb",
    "5 Property Exchange: MIDI-CI SysEx Messagess",
    "can be useful to prevent a larger PE message which is split over many chunks from blocking smaller requests..",
    "3. The Request ID also allows the Device to support multiple messages being sent and received at one time. Thiss",
    "message shall contain the Request ID that was sent in the inquiry..",
    "1. The Request ID is used to associate multiple Chunks of a single PE message. Every Chunk of a message shalll",
    "a message in multiple Chunks for its own design requirements..",
    "between the devices) the sender shall break the message into multiple Chunks. A Device may also choose to sendd",
    "“Receivable Maximum SysEx Message Size” of the other Device (discovered in the initial Discovery Transactionn",
    "When a complete Property Exchange SysEx message, with its payload Resource Data, exceeds the size of thee",
    "Any message that contains Header Data only and does not contain any Property Data may not use the Chunkingg",
    "multiple SysEx messages known as “Chunks”..",
    "A Device may choose to send the Data Set of a Property Exchange as a single SysEx message or as a set off",
    "Note: See MIDI-CI specification for a complete list of all MIDI-CI messagess",
    "Property Exchange SysEx messages have separate Header Data and Property Data fields..",
    "Non-JSON Property Data shall be encoded to fit in the 7-bit data format of System Exclusive messages. Non--",
    "4. Send each chunk via MIDI-CI Property Exchange message(s)..",
    "3. Break the output into individual chunks based on Receivable Maximum SysEx Message Size (See MIDI-CII",
    "The default format of the Property Data field in Property Exchange message is JSON data in ASCII text ass",
    "5. Send each chunk via MIDI-CI Property Exchange message(s)..",
    "4. Break the output into individual chunks based on Receivable Maximum SysEx Message Size (See MIDI-CII",
    "4. Send each chunk via a MIDI-CI Property Exchange message..",
    "3. Break the output into individual chunks based on Receivable Maximum SysEx Message Size (See MIDI-CII",
    "6. Send each chunk via MIDI-CI Property Exchange message(s)..",
    "5. Break the output into individual chunks based on Receivable Maximum SysEx Message Size (See MIDI-CII",
    "Inquiry: Set Property Data message..",
    "In the case of an Inquiry: Set Property Data message,,",
    "message from the Responder..",
    "In the case of an Inquiry: Get Property Data message,,",
    "subscription messages, the first Property shall be the command. In most cases no other data is needed..",
    "200-299 Success Messages – Do Not Retryy",
    "Note: The Notify message uses other status codes. See Section 12 for details..",
    "The following is a list of Property Exchange status codes. Reply messages shall only use the Status codes that aree",
    "7.4.1 Table of status codes used in a Reply Messagee",
    "{\"status\":400,\"message\":\"Inquiry Header does not specify the Resource.\"}}",
    "The message Header Data may be used to report an error code with an associated message..",
    "and responds to an Inquiry: Set Property Data message, the Responder shall confirm with a value of 200 in thee",
    "The message Header Data may be used to declare a successful Transaction. If a Responder successfully receivess",
    "The associated message is optional but recommended. If you include the message, you should use it to specifyy",
    "status is any value other than 200, an associated message should be included..",
    "Each MIDI-CI Property Exchange reply message shall include a status Property in the Header Data field. If thee",
    "Property in the Inquiry: Get Property Data message..",
    "message string (max 512 bytessThis is an optional explanatory text for the user too",
    "MIDI-CI also provides a NAK message that may be used with Property Exchange when it is not possible to returnn",
    "Terminate an Inquiry, perform a Timeout Wait, or report a Timeout condition by way of a Notify message. Forr",
    "In addition to the errors defined above for use in a Reply message, Property Exchange provides mechanisms too",
    "300-399 Redirection Messages – These Should Retryy",
    "201 Accepted – Inquiry: Set Property Data message is accepted but device doesn’t have the timee",
    "this Property Exchange message in the format(s) ass",
    "The Responder returns a reply message with the corresponding Property Data in the Property Data field..",
    "An Initiator sends an inquiry message with the Resource it wishes to retrieve declared in the Header Data field..",
    "The first Inquiry: Get Property Data message should request a list of entries starting from an offset of 0. Thee",
    "All Responder replies to an Inquiry: Get Property Data message with a List Resource, when the Resource hass",
    "device. This contains data similar to the Device Inquiry Universal SysEx message. However, it also includess",
    "An Initiator requests the ResourceList Resource in an Inquiry: Get Property Data message to retrieve a list of alll",
    "Table 29 Initiator Sends Inquiry: Set Property Data Messagee",
    "The Initiator decides to upload a whole new program. The Initiator uses an Inquiry: Set Property Data message::",
    "using an Inquiry: Get Property Data message::",
    "send an Inquiry: Set Property Data message. The Header Data field shall include \"setPartial\":true. In thee",
    "Responder in a Reply to Get Property Data message. This may be used only if the target Resource declares aa",
    "Data message. The Property Data field shall contain the whole Resource Data which would be sent by aa",
    "Table 34 Responder Sends Reply to Set Property Data Messagee",
    "Table 33 Initiator Sends Inquiry: Set Property Data Messagee",
    "The Initiator uses an Inquiry: Set Property Data message::",
    "using an Inquiry: Get Property Data message::",
    "Table 30 Responder Sends Reply to Set Property Data Messagee",
    "Table 36 Responder Sends Reply to Set Property Data Messagee",
    "Table 35 Initiator Sends Inquiry: Set Property Data Messagee",
    "Note: There may be a delay between the Initiator sending the Inquiry: Set Property Data message andd",
    "Each reply to a Subscription message shall be sent using a Reply to Subscription message..",
    "Each subscription update from the Responder shall be sent using a Subscription message..",
    "B. If the Initiator is not able to send a MIDI message to set the Property on the Responder, it shall send ann",
    "the Responder, then it shall send the MIDI message..",
    "A. If the Initiator is able to send a MIDI message (such as a MIDI Control Change) to set the Property onn",
    "• If an Inquiry: Set Property Data message changes a Property Value in the Responder, the Responderr",
    "• If a MIDI Control Change message changes a Property Value in the Responder, the Responder sendss",
    "inform the Initiator using a Subscription message with a \"partial\", \"full\", or \"notify\" command (See Sectionn",
    "2. The Initiator may subscribe to a subscribable Resource on the Responder using the Subscription message with aa",
    "There is no Property Data in this message..",
    "There is no body in this message..",
    "Inquiry: Set Property Data message..",
    "message. The Response does not return anyy",
    "Subscription MIDI-CI messagee",
    "for all update messages related to that Subscriptionn",
    "characters only))which messages are related to each Subscription aa",
    "Table 42 Step 2: Responder Sends Subscription Message using a \"full\" commandd",
    "Table 41 Responder Sends Reply toSubscription Messagee",
    "Table 40 Step 1: Initiator Sends a Subscription Messagee",
    "Partial Inquiry: Set Property message (See Section 8)..",
    "1. Return a Reply to Subscription message to report success in receiving the message..",
    "the sender may decide to retry or end the Subscription by sending a Subscription Message with the \"command\"\"",
    "Subscription message, so the original sender is aware of the success or failure of a command. If there is a failure,,",
    "A device that receives a Subscription message for any subscribed Resource Data shall reply with a Reply too",
    "11.2 Replying to Subscription Messagess",
    "single Property Exchange Message Chunk. If the Property Data spans multiple message Chunks, then the use off",
    "Table 47 Responder Sends Reply toSubscription Messagee",
    "Table 46 Initiator Sends a Subscription Messagee",
    "The Initiator subscribes by sending a Subscription message::",
    "using an Inquiry: Get Property Data message::",
    "The following shows messages exchanged between the two devices..",
    "Table 43 Initiator Sends Reply to Subscription Messagee",
    "Table 51 Initiator Sends Reply to Subscription Messagee",
    "Table 50 Responder Sends Subscription Message using a \"full\" commandd",
    "Table 49 Initiator Sends Reply to Subscription Messagee",
    "Table 48 Responder Sends Subscription Message using a \"full\" commandd",
    "Subscription message to inform the Initiator of the update::",
    "Table 58 Initiator Subscription Messagee",
    "Table 57 Initiator Sends Reply to Subscription Messagee",
    "Table 56 Responder Sends Subscription Message using a \"full\" commandd",
    "70. The Responder sends out a Subscription Message to the Initiator..",
    "The Responder receives a Control Change MIDI message that modifies the LFO Speed and sets it to the value off",
    "Table 55 Initiator Sends Reply to Subscription Messagee",
    "Table 54 Responder Sends Subscription Message using a \"full\" commandd",
    "the Responder, at which point all subscriptions are ended (without the use of an End Subscription message)..",
    "• An Invalidate MUID message is received with a Target MUID that matches the MUID of either the Initiator orr",
    "• The Responder ends a subscription by sending a Subscription message with the \"command\" Property set to \"end\"\"",
    "• The Initiator unsubscribes by sending a Subscription message with the \"command\" Property set to \"end\" to thee",
    "Table 60 Initiator or Responder Sends Notify Messagee",
    "currently running request by sending a Notify message with a \"status\" Property with a value of 144. Alll",
    "(Initiators and Responders) shall terminate the currently running request in response to a Notify message with aa",
    "The Notify: Terminate Inquiry message should not be sent. MIDI-CI NAK messages as defined in Sections 12.2.11",
    "NAK message with a Status Code is set to 0x20 and Status Data = 0x01..",
    "A Responder may terminate a currently running Transaction by sending a MIDI-CI NAK message with a Statuss",
    "specifications. Some requirements of the Notify message remain for backward compatibility, as defined below..",
    "MIDI-CI ACK and NAK messages replace the Notify message which was defined in prior Property Exchangee",
    "See MIDI Capability Inquiry v1.2 [MA03] on how to send MIDI-CI ACK and NAK messages and for the use off",
    "MIDI-CI ACK and NAK messages include the Request ID of the Transaction which is being addressed by thesee",
    "report a timeout condition by way of MIDI-CI ACK and NAK messages. These notifications may be sent by ann",
    "02 MIDI-CI Message Version\/Format v 1.22",
    "7D Universal System Exclusive Sub-ID#2: MIDI-CI ACK Messagee",
    "7F Device ID: Source or Destination (depending on type of message)::",
    "Table 61 MIDI-CI ACK Message used for Flow Controll",
    "next Chunk before the timeout period. The Responder sends a MIDI-CI ACK message with a Status Code ==",
    "Responder sends a MIDI-CI ACK message with a Status Code of 0x10 and Status Data of 0x3C (6 seconds)..",
    "3-second timeout, then it should send a MIDI-CI ACK message with the associated Request Id, a Status Codee",
    "message in multiple chunks, the time between consecutive chunks shall be under 3 seconds..",
    "MIDI-CI provides a mechanism for Property Exchange messages to be sent in multiple chunks. If a device sends aa",
    "Table 63 Initiator Sends Notify Messagee",
    "within the timeout period, it may terminate the inquiry by sending a Notify message with a \"status\" Propertyy",
    "If an Initiator does not receive an expected Reply, next message chunk, or a Notify: Timeout Wait messagee",
    "suitable reply or next chunk in a message within the timeout period, it may send a Notify message with aa",
    "handle a received Notify message with status 408 the same as the newer NAK Timeout Has Occurred message ass",
    "Use of the Notify: Timeout Has Occurred message has been deprecated, and future implementations shouldd",
    "If an Initiator does not receive an expected reply, a next Chunk, or a Timeout Wait message within the timeoutt",
    "Note: This message has been deprecated, and future implementations should use the MIDI-CI ACKK",
    "Table 62 Responder Sends Notify Messagee",
    "the Responder may send a Notify message with a \"status\" Property with a value of 100..",
    "Notify message with status 100 the same as the newer ACK Timeout Wait message as defined in section 12.2.11",
    "Use of the Notify: Timeout Wait message has been deprecated, and future implementations should instead use thee",
    "0x00 0x00 No message - Message length = 00",
    "Table 66 Initiator Sends an Inquiry: Get Property Data Messagee",
    "In order to use the first link in the data above, the Initiator sends an Inquiry: Get Property Data message using thee",
    "yesno - The message box contains two push buttons::",
    "\"okcancel\", \"yesno\"\"okcancel - The message box contains two pushh",
    "confirmMsg string An optional confirmation dialog message presented too",
    "schema**Property Data message when the Action occurs..",
    "The Header Data in the Reply to Set Property Data message may contain an optional \"msg\" Property which is aa",
    "An activated Action shall use an Inquiry: Set Property Data message. The Property Data used is the data containedd",
    "• Launch an internal function that cannot be triggered by Channel Voice Messagess",
    "not displayed any message..",
    "Header Data {\"status\":200,\"message\":\"Copy of Piano Program successful\"}}",
    "Table 71 Initiator Sends Reply to Inquiry: Set Property Data Messagee",
    "Table 70 Initiator Sends an Inquiry: Set Property Data Messagee",
    "Message::",
    "The Header Data in the Reply to Set Property Data message may contain an optional \"msg\" Property which is aa",
    "When a user selects a List Resource entry, the Initiator shall send an Inquiry: Set Property Data message to set thee",
    "Set Property Data message to declare to thee",
    "characters) (required))Property Data message. This List Resource shall bee",
    "Table 74 Initiator Sends an Inquiry: Get Property Data Messagee",
    "declared in the ChannelList Property Data above, are used in an Inquiry: Get Property Data message to requestt",
    "Header Data {\"status\":200,\"message\":\"The Output of Channel 1 is set to Left Alt.\"}}",
    "Table 77 Initiator Sends Reply to Subscription Messagee",
    "Table 76 Initiator Sends an Inquiry: Set Property Data Messagee",
    "an Inquiry: Set Property Data message with the \"resource\" and \"resId\" Properties from the \"actionResource\"\"",
    "\"partial\"))Data message on this Resource. When set too",
    "Inquiry: Get Property Data message. For example, aa",
    "sends a Reply to Inquiry: Get Property Data message with an array of objects in the Property Data field. Eachh",
    "When a Responder receives an Inquiry: Get Property Data message with a ResourceList request, the Responderr",
    "Messagee",
    "Table 78 Initiator Sends an Inquiry: Get Property Data Messagee",
    "An Initiator requests the ResourceList Resource using the MIDI-CI Inquiry: Get Property Data message..",
    "Inquiry: SET Property Data or Subscription messages. Resources defined by AMEI\/MMA specifications havee",
    "send a Reply to Get Property Data message with a list of all Resources it supports so the Initiator understands itss",
    "When a Responder receives an Inquiry: Get Property Data message with \"ResourceList\" the Responder shalll",
    "Data Messagee",
    "Control on an Inquiry: Set Property Data Messagee",
    "Data Messagee",
    "To retrieve a JSON Schema an Initiator may send an Inquiry: Get Property Data message with the Resource set too",
    "02 MIDI-CI Message Version\/Format v 1.22",
    "7D Universal System Exclusive Sub-ID#2: MIDI-CI ACK Messagee",
    "7F Device ID: Source or Destination (depending on type of message)::",
    "Table 94 MIDI-CI ACK Message used for Flow Controll",
    "A MIDI-CI ACK Message used for Flow Control is structured as follows::",
    "15.1 Flow Control MIDI-CI ACK Messagee",
    "A MIDI-CI ACK is required on the Last Chunk in an Inquiry: Get Property Data Message and is used too",
    "returned using a \"status\":406 in the Reply to Inquiry Get message..",
    "for the Initiator to send a MIDI-CI ACK message between Chunks..",
    "Table 95 Example of using Flow Control an Inquiry: Get Property Data Messagee",
    "indicates the Transaction should use Property Exchange Flow Control MIDI-CI ACK messages..",
    "0x00 0x00 No message - Message length = 00",
    "Data Message is used to acknowledge that all chunks have been received..",
    "A MIDI-CI ACK is not required on the Last Chunk in an Inquiry: Set Property Data Message as the Reply to Sett",
    "returned using a \"status\":406 in the Reply to Inquiry Get message..",
    "should be returned using a \"status\":407 in the Reply to Inquiry Get message..",
    "Table 96 Example of using Flow Control an Inquiry: Set Property Data Messagee",
    "indicates the Transaction should use Property Exchange Flow Control MIDI-CI ACK messages..",
    "02 MIDI-CI Message Version\/Format v 1.22",
    "7F Universal System Exclusive Sub-ID#2: MIDI-CI NAK Messagee",
    "7F Device ID: Source or Destination (depending on type of message)::",
    "Table 97 Retransmit MIDI-CI NAK Messagee",
    "last Chunk. It does this by sending the following MIDI-CI NAK message::",
    "15.4 Sending a Retransmit MIDI-CI NAK Messagee",
    "Message (see Section 12.1)..",
    "0x00 0x00 No message - Message length = 00",
    "messages in the MIDI 2.0 Protocol may be used by MIDI 1.0 devices whichh",
    "Protocol. This specification also defines messages in the MIDI 2.0 Protocol. Somee",
    "modern packet format for all MIDI messages, both MIDI 1.0 Protocol and MIDI 2.00",
    "messages including some required for Standard MIDI Files v2..",
    "May 11, 2023 1.1 Allowed Message Types to have no Group Field; implemented on MT==",
    "3.3.1 Message Types for MIDI 2.0 Protocol ........................................................................... 255",
    "3.2.1.2 Message Types to Extend MIDI 1.0 Functionality ........................................... 244",
    "3.2.1.1 Message Types for Traditional MIDI 1.0 Functionality ................................... 244",
    "3.2.1 Message Types for MIDI 1.0 Protocol ........................................................................... 244",
    "2.1.4 Message Type (MT) Allocation ...................................................................................... 222",
    "2.1 UMP Basic Packet and Message Format .................................................................................... 200",
    "1.8 Unicode in Message Fields ......................................................................................................... 199",
    "7.4.3 MIDI 2.0 Poly Pressure Message ................................................................................... 511",
    "7.4.2 MIDI 2.0 Note On Message ............................................................................................ 500",
    "7.4.1 MIDI 2.0 Note Off Message ........................................................................................... 500",
    "7.4 MIDI 2.0 Channel Voice Messages ............................................................................................ 499",
    "7.3.7 MIDI 1.0 Pitch Bend Message ........................................................................................ 499",
    "7.3.6 MIDI 1.0 Channel Pressure Message.............................................................................. 499",
    "7.3.5 MIDI 1.0 Program Change Message .............................................................................. 499",
    "7.3.4 MIDI 1.0 Control Change Message ................................................................................ 499",
    "7.3.3 MIDI 1.0 Poly Pressure Message ................................................................................... 488",
    "7.3.2 MIDI 1.0 Note On Message ............................................................................................ 488",
    "7.3.1 MIDI 1.0 Note Off Message ........................................................................................... 488",
    "7.3 MIDI 1.0 Channel Voice Messages ............................................................................................ 477",
    "7.2.2.2 JR Timestamp Message ..................................................................................... 444",
    "7.2.2.1 JR Clock Message ............................................................................................. 433",
    "7.2 Utility Messages ......................................................................................................................... 422",
    "7.1.11 End of Clip Message ....................................................................................................... 422",
    "7.1.10 Start of Clip Message ...................................................................................................... 422",
    "7.1.7 Function Block Discovery Message ............................................................................... 399",
    "7.1.6.3 Stream Configuration Notification Message ..................................................... 388",
    "7.1.5 Product Instance Id Notification Message ...................................................................... 355",
    "7.1.3 Device Identity Notification Message ............................................................................ 344",
    "7.1.2 Endpoint Info Notification Message ............................................................................... 333",
    "7.1.1 Endpoint Discovery Message ......................................................................................... 322",
    "7.1 UMP Stream Messages ............................................................................................................... 322",
    "7 MIDI Messages in UMP Format ....................................................................................................... 322",
    "7.6 System Common and System Real Time Messages ................................................................... 777",
    "7.5.13 Ruby Language Message ................................................................................................ 766",
    "7.5.12 Ruby Data Message ........................................................................................................ 755",
    "7.5.11 Lyric Language Message ................................................................................................ 744",
    "7.5.10 Lyric Data Message ........................................................................................................ 733",
    "7.5.9.1 Messages Which use the Text Common Format ............................................... 711",
    "7.5.9 Text Messages Common Format .................................................................................... 711",
    "7.5.8.1 Example Set Chord Name Messages ................................................................ 711",
    "7.5.8 Set Chord Name Message ............................................................................................... 677",
    "7.5.7 Set Key Signature Message ............................................................................................ 666",
    "7.5.6 Example Set Metronome Messages ................................................................................ 666",
    "7.5.5 Set Metronome Message ................................................................................................. 644",
    "7.5.4 Set Time Signature Message ........................................................................................... 633",
    "7.5.3 Set Tempo Message ........................................................................................................ 633",
    "7.5.2 Limitations of Interspersing Other Messages with Flex Data Messages ........................ 633",
    "7.5.1 Flex Data Messages General Format .............................................................................. 611",
    "7.5 Flex Data Messages .................................................................................................................... 611",
    "7.4.12 MIDI 2.0 Per-Note Pitch Bend Message ........................................................................ 577",
    "7.4.11 MIDI 2.0 Pitch Bend Message ........................................................................................ 566",
    "7.4.10 MIDI 2.0 Channel Pressure Message.............................................................................. 566",
    "7.4.9 MIDI 2.0 Program Change Message .............................................................................. 566",
    "Messages .................................................................................................................................... 555",
    "7.4.7 MIDI 2.0 Registered Controller (RPN) and Assignable Controller (NRPN) Messages . 533",
    "7.4.6 MIDI 2.0 Control Change Message ................................................................................ 522",
    "7.4.5 MIDI 2.0 Per-Note Management Message ..................................................................... 511",
    "7.4.4 MIDI 2.0 Registered Per-Note Controller and Assignable Per-Note Controller Messages511",
    "D.2.9 Messages That Cannot Be Translated to Non-UMP MIDI 1.0 Systems ........................ 1022",
    "D.2.8 Messages That Cannot Be Translated to MIDI 1.0 ........................................................ 1022",
    "D.2.6 System Messages............................................................................................................ 1011",
    "Appendix D: Translation: MIDI 1.0 and MIDI 2.0 Messages .............................................................. 944",
    "C.3 Using Note Number Rotation, Per-Note Pitch, and Per-Note Management Message for Independentt",
    "C.2 Using a MIDI 2.0 Per-Note Management Message Before Note On to Reallocate Per-Notee",
    "Appendix C: Using MIDI 2.0 Per-Note Messages .................................................................................. 899",
    "B.1 Channel Mode Messages: Applicable Channels ........................................................................... 888",
    "Appendix B: Special Control Change Messages .................................................................................... 888",
    "7.9 Mixed Data Set Message ............................................................................................................ 811",
    "7.8 System Exclusive 8 (8-Bit) Messages ........................................................................................ 799",
    "7.7.1 Limitations of Interspersing Other Messages with System Exclusive UMPs ................. 799",
    "7.7 System Exclusive (7-Bit) Messages ........................................................................................... 788",
    "Appendix G: All Defined Messages ....................................................................................................... 1177",
    "F.3.2 Message Type 0xF: UMP Stream Messages ................................................................... 1155",
    "F.3.1 Message Type 0xD: Flex Data Messages ....................................................................... 1144",
    "F.3.1 Message Type 0x5: 16-Byte Data Messages (System Exclusive 8 and Mixed Data Set)1144",
    "F.2.2 Message Type 0x4: MIDI 2.0 Channel Voice Messages ................................................ 1133",
    "F.2.1 Message Type 0x3: 8-Byte Data Messages .................................................................... 1133",
    "F.1.3 Message Type 0x2: MIDI 1.0 Channel Voice Messages ................................................ 1122",
    "F.1.2 Message Type 0x1: System Common & System Real Time .......................................... 1122",
    "F.1.1 Message Type 0x0: Utility .............................................................................................. 1122",
    "E.3 Table of System Exclusive 8 (8-Bit) Message UMPs................................................................. 1100",
    "E.2 Complete System Exclusive Message Examples ........................................................................ 1100",
    "E.1 Table of System Exclusive Message UMPs ............................................................................... 1099",
    "Appendix E: System Exclusive (7-Bit) and System Exclusive 8 (8-Bit) Message Examples ............ 1099",
    "D.3.7 System Messages............................................................................................................ 1077",
    "Control Change Messages for RPN\/NRPN .............................................................................. 1044",
    "MIDI 1.0 Increment and Decrement Message ......................................................................... 1044",
    "14 Bit Control Change Messages ............................................................................................. 1044",
    "Figure 48 MIDI 2.0 Poly Pressure Message ............................................................................................ 511",
    "Figure 47 MIDI 2.0 Note On Message ..................................................................................................... 500",
    "Figure 46 MIDI 2.0 Note Off Message ..................................................................................................... 500",
    "Figure 45 MIDI 2.0 Channel Voice Message General Format .............................................................. 499",
    "Figure 44 MIDI 1.0 Pitch Bend Message ................................................................................................. 499",
    "Figure 43 MIDI 1.0 Channel Pressure Message ..................................................................................... 499",
    "Figure 42 MIDI 1.0 Program Change Message ...................................................................................... 499",
    "Figure 41 MIDI 1.0 Control Change Message ........................................................................................ 499",
    "Figure 40 MIDI 1.0 Poly Pressure Message ............................................................................................ 499",
    "Figure 39 MIDI 1.0 Note On Message ..................................................................................................... 488",
    "Figure 38 MIDI 1.0 Note Off Message ..................................................................................................... 488",
    "Figure 37 MIDI 1.0 2-Byte Channel Voice Message General Format .................................................. 488",
    "Figure 36 MIDI 1.0 3-Byte Channel Voice Message General Format .................................................. 488",
    "Figure 35 Examples of MIDI Messages with Delta Clockstamp ........................................................... 477",
    "Figure 34 Delta Clockstamp Message Format ........................................................................................ 466",
    "Figure 33 Delta Clockstamp Ticks Per Quarter Note Message Format ............................................... 455",
    "Figure 32 Examples of MIDI Messages with JR Timestamps ............................................................... 455",
    "Figure 31 JR Timestamp Message Format ............................................................................................. 444",
    "Figure 30 Example Sequence of MIDI Messages with JR Timestamps Prepended ............................ 444",
    "Figure 29 JR Clock Message Format ....................................................................................................... 433",
    "Figure 28 Sequence of JR Clock Messages .............................................................................................. 433",
    "Figure 27 NOOP Message Format ........................................................................................................... 433",
    "Figure 26 Utility Message General Format ............................................................................................. 433",
    "Figure 25 End of Clip Message Format ................................................................................................... 422",
    "Figure 24 Start of Clip Message Format ................................................................................................. 422",
    "Figure 22 Function Block Info Notification Message Format ............................................................... 400",
    "Figure 20 Function Block Discovery Message Format ........................................................................... 399",
    "Figure 19 Stream Configuration Notification Message Format ............................................................ 388",
    "Figure 18 Stream Configuration Request Message Format .................................................................. 388",
    "Figure 16 Product Instance Id Notification Message Format ................................................................ 366",
    "Figure 15 Endpoint Name Notification Message Format ...................................................................... 355",
    "Figure 14 Device Identity Notification Message Format ........................................................................ 355",
    "Figure 13 Endpoint Info Notification Message Format ......................................................................... 344",
    "Figure 12 Endpoint Discovery Message Filter Bitmap Field ................................................................. 333",
    "Figure 11 Endpoint Discovery Message Format ..................................................................................... 333",
    "Figure 10 UMP Stream Message General Format ................................................................................. 322",
    "Figure 6 Device Discovery Messages on a UMP Endpoint .................................................................... 277",
    "Figure 5 Sequence of MIDI Messages with JR Timestamps Prepended .............................................. 266",
    "Figure 4 UMP Formats for Example Message Types ............................................................................. 233",
    "Figure 3 Status Field Size Varies with Message Type Value ................................................................. 222",
    "Figure 93 MIDI 2.0 Note On Message with Attribute #3 (Pitch 7.9) .................................................... 933",
    "Figure 92 MIDI 2.0 Registered Per-Note Controller Message with Controller #3 (Pitch 7.25) ......... 922",
    "Figure 90 D and S Fields in MIDI 2.0 Per-Note Management Message ............................................... 900",
    "Figure 89 Only the Note After the Per-Note Management Message has Per-Note Control ............... 900",
    "Figure 85 System Exclusive 8 (8-Bit) Message Format .......................................................................... 799",
    "Figure 84 System Exclusive (7-Bit) Message Format ............................................................................. 788",
    "Figure 83 System Message General Format ............................................................................................ 777",
    "Figure 82 Ruby Language Message Format ........................................................................................... 766",
    "Figure 81 Ruby Data Message Format .................................................................................................... 755",
    "Figure 80 Lyric Language Message Format ........................................................................................... 744",
    "Figure 79 Lyric Data Message Format .................................................................................................... 744",
    "Figure 78 Example Flex Data Text Messages .......................................................................................... 733",
    "Figure 77 Flex Data Text Messages Common Format ........................................................................... 711",
    "Figure 76 Example Set Chord Name Messages ...................................................................................... 711",
    "Figure 75 Set Chord Message Format ..................................................................................................... 677",
    "Figure 74 Set Key Signature Message Format ........................................................................................ 666",
    "Figure 73 Example Set Metronome Messages ......................................................................................... 666",
    "Figure 72 Set Metronome Message Format ............................................................................................ 644",
    "Figure 71 Set Time Signature Message Format ...................................................................................... 644",
    "Figure 70 Set Tempo Message Format .................................................................................................... 633",
    "Figure 69 Flex Data Messages General Format ...................................................................................... 611",
    "Figure 68 RC for Sensitivity of Per-Note Pitch Bend Message.............................................................. 577",
    "Figure 67 MIDI 2.0 Per-Note Pitch Bend Message ................................................................................. 577",
    "Figure 66 MIDI 2.0 Pitch Bend Message ................................................................................................. 566",
    "Figure 65 MIDI 2.0 Channel Pressure Message ..................................................................................... 566",
    "Figure 64 MIDI 2.0 Program Change Message ...................................................................................... 566",
    "Figure 63 MIDI 2.0 Relative Assignable Controller Message ............................................................... 555",
    "Figure 62 MIDI 2.0 Relative Registered Controller Message ................................................................ 555",
    "Figure 61 MIDI 2.0 MPE MCM Message ............................................................................................... 555",
    "Figure 60 MIDI 2.0 Tuning Bank Change Message ............................................................................... 555",
    "Figure 59 MIDI 2.0 Tuning Program Change Message ......................................................................... 544",
    "Figure 58 MIDI 2.0 Coarse Tuning Message .......................................................................................... 544",
    "Figure 57 MIDI 2.0 Pitch Bend Sensitivity Message .............................................................................. 544",
    "Figure 56 MIDI 2.0 Assignable Controller Message .............................................................................. 544",
    "Figure 55 MIDI 2.0 Registered Controller Message ............................................................................... 533",
    "Figure 54 MIDI 2.0 Omni-Off\/Mono Control Change Message ........................................................... 533",
    "Figure 53 MIDI 2.0 Portamento Control Change Message ................................................................... 533",
    "Figure 52 MIDI 2.0 Control Change Message ........................................................................................ 522",
    "Figure 51 MIDI 2.0 Per-Note Management Message ............................................................................. 511",
    "Figure 50 MIDI 2.0 Assignable Per-Note Controller Message .............................................................. 511",
    "Figure 49 MIDI 2.0 Registered Per-Note Controller Message .............................................................. 511",
    "Figure 114 MIDI 2.0 System Exclusive Message Example 3 ............................................................... 1100",
    "Figure 113 MIDI 2.0 System Exclusive Message Example 2 ............................................................... 1100",
    "Figure 112 MIDI 2.0 System Exclusive Message Example 1 ............................................................... 1100",
    "Figure 110 Translate MIDI 1.0 System Message to MIDI 2.0 ............................................................. 1077",
    "Figure 100 Translate MIDI 2.0 System Message to MIDI 1.0 ............................................................. 1011",
    "Table 34 All Defined Message Formats (in 5 parts) ............................................................................. 1177",
    "Table 33 128 bit UMP Formats for Message Type 0xF: UMP Stream Messages ............................. 1155",
    "Table 32 128 bit UMP Formats for Message Type 0xD: Flex Data Messages ................................... 1155",
    "Table 31 16-Byte UMP Formats for Message Type 0x5: System Exclusive 8 and Mixed Data Set 1144",
    "Table 30 8-Byte UMP Formats for Message Type 0x4: MIDI 2.0 Channel Voice Messages ............ 1133",
    "Table 29 8-Byte UMP Formats for Message Type 0x3: 8-Byte Data Messages ................................. 1133",
    "Table 28 4-Byte UMP Formats for Message Type 0x2: MIDI 1.0 Channel Voice Messages ............ 1133",
    "Table 27 4-Byte UMP Formats for Message Type 0x1: System Common & System Real Time ..... 1122",
    "Table 26 4-Byte UMP Formats for Message Type 0x0: Utility ............................................................ 1122",
    "Table 25 UMPs for System Exclusive 8 Messages ................................................................................ 1100",
    "Table 24 UMPs for System Exclusive (7-Bit) Messages ....................................................................... 1099",
    "Table 19 Status Field Values for System Exclusive 8 (8-Bit) Messages ................................................ 800",
    "Table 18 Status Field Values for System Exclusive (7-Bit) Messages ................................................... 788",
    "Table 17 Messages that use System Message General Format .............................................................. 777",
    "Table 16 Text Messages by Status ............................................................................................................ 711",
    "Table 10 Flex Data Message Address Field Values ................................................................................ 622",
    "Table 9 Flex Data Message Format Field Values ................................................................................... 611",
    "Table 4 Message Type (MT) Allocation ................................................................................................... 222",
    "Protocol System Exclusive message, but allowing use of all 8 data bits per byte) and Mixed Data Set Messagess",
    "A set of new Data Messages has been added, including System Exclusive 8 Messages (very similar to MIDI 1.00",
    "now implemented as a single, unified message..",
    "In addition, some functions that require the use of multiple MIDI Messages in the MIDI 1.0 Protocol (forr",
    "Messages have been added with greatly improved Per-Note control and much more musical expression..",
    "Voice Messages. New properties have been added to some Channel Voice Messages, and new Channel Voicee",
    "Compared to the MIDI 1.0 Protocol, MIDI 2.0 Protocol messages have extended data resolution for all Channell",
    "Messages, and 16 Channels that are equivalent to the MIDI 1.0 Protocol’s 16 MIDI Channels..",
    "UMP can contain all MIDI 1.0 Protocol messages and all MIDI 2.0 Protocol messages in a single, commonn",
    "MIDI messages, both MIDI 1.0 Protocol and MIDI 2.0 Protocol..",
    "• Added MIDI 2.0 Addressing Appendix to help clarify if messages are meant for a Channel, Group, Functionn",
    "• Clarified specific CC\/RPN Message translation between MIDI 1.0 and MIDI 2.0 Protocoll",
    "• Added a Registered Controller Message to set Per-Note Pitch Sensitivityy",
    "Request and Stream Configuration Notification Messages..",
    "• Added Delta Clockstamps Messages for use in the MIDI Clip File specification..",
    "Lyric and Text messages as well messages useful to the MIDI Clip Specification..",
    "• Flex Data Messages are used to send messages to a Channel or a Group. New Flex Data Messages includee",
    "• Added Flex Data Messages (Message Type 0xD))",
    "Max System Exclusive 8 Messages has been moved to these messages. These messages are Groupless..",
    "• These messages are used to discover details about a UMP Endpoint and its Function Blocks. Discovery off",
    "• Added UMP Endpoint Messages (Message Type 0xF))",
    "• Utility messages (Message Type 0x0) are now Groupless. The former Group field is changed to Reserved..",
    "messages are intended to be processed by the UMP Endpoint..",
    "• Added the notion of Groupless messages. Some UMP Message Types are not sent to a specific Group. Thesee",
    "messages to and\/or from another Device..",
    "MIDI Thru: A hardware or software MIDI connection used by a MIDI Device to retransmit MIDI messages thee",
    "MIDI Port: A hardware or software connector associated with a MIDI Endpoint using messages in MIDI 1.0 dataa",
    "MIDI Out: A hardware or software MIDI connection used by a MIDI Device to transmit MIDI messages to aa",
    "MIDI In: A hardware or software MIDI connection used by a MIDI Device to receive MIDI messages from aa",
    "MIDI Endpoint: A Device which is an original source of MIDI messages or final consumer of MIDI messages..",
    "MIDI 2.0 Protocol: Version 2.0 of the MIDI Protocol. The native format for MIDI 2.0 Protocol messages is UMPP",
    "MIDI 2.0 Protocol, MIDI 2.0 messages, and other extensions to MIDI as described in AMEI and MAA",
    "the MIDI 1.0 Protocol is a byte stream, but it has been adapted for many different transports. MIDI 1.0 messagess",
    "AMEI with numerous additional MIDI message definitions and Recommended Practices. The native format forr",
    "any given MIDI message) to one of 16 Groups. See the M2-104-UM Universal MIDI Packet (UMP) Format andd",
    "Group: A field in the UMP Format addressing some UMP Format MIDI message (and some UMP comprisingg",
    "Device: An entity, whether hardware or software, which can send and\/or receive MIDI messages..",
    "all MIDI 1.0 Protocol messages and all MIDI 2.0 Protocol messages. UMP is intended to be universallyy",
    "Such Devices may use UMP Message Types that extend the functionality beyond Non-UMP MIDI 1.0 Systems..",
    "UMP MIDI 1.0 Device: any Device that sends or receives MIDI 1.0 Protocol messages using the UMP [MA06]..",
    "UMP Format: Data format for fields and messages in the Universal MIDI Packet, see [MA06]..",
    "replies from a second MIDI Device. A Transaction may be a more complex set of message exchanges, started byy",
    "MIDI messages in a single Transaction are associated and work together to accomplish one function. The simplestt",
    "Transaction: An exchange of MIDI messages between two MIDI Devices with a bidirectional connection. All thee",
    "Sender: A MIDI Device which transmits MIDI messages to a MIDI Transport which is connected to its MIDI Outt",
    "data structure that defines the semantics for MIDI messages. See [MA01] and [MA06]..",
    "minimum set of mandatory messages and features, along with some optional or recommended messages andd",
    "messages. A Profile is controlled by MIDI-CI Profile Configuration Transactions. A Profile may have a definedd",
    "Profile: An MA\/AMEI specification that includes a set of MIDI messages and defined responses to thosee",
    "Unicode text in MIDI messages shall not include a Byte Order Mark..",
    "Note: Some messages may define a different encoding for a unique purpose. For example, MIDI-CI messagess",
    "MIDI messages only use normalized UTF-8 encoded Unicode characters, following the NFC (Normalizationn",
    "In many MIDI messages Unicode text can be exchanged. Often, these texts will have to be displayed on a devicee",
    "1.8 Unicode in Message Fieldss",
    "MIDI 2.0 Protocol (see also Appendix D: Translation: MIDI 1.0 and MIDI 2.0 Messages)..",
    "For critical information on understanding resolution of various fields in MIDI messages in the UMP Format, seee",
    "Example Diagram 4: 128-Bit Message in a Single 128-Bit UMPP",
    "Example Diagram 3: 96-Bit Message in a Single 96-Bit UMPP",
    "Example Diagram 2: 64-Bit Message in a Single 64-Bit UMPP",
    "Example Diagram 1: 32-Bit Message in a Single 32-Bit UMPP",
    "A MIDI Message that is longer than a single UMP allows will span multiple UMPs..",
    "part of one MIDI Message, and no additional data..",
    "Each UMP shall contain one entire MIDI Message, or (in the sole case of Data Messages longer than 128 bits))",
    "2.1 UMP Basic Packet and Message Formatt",
    "Data, Utility, and UMP Stream messages..",
    "• All MIDI 2.0 Protocol Channel Voice Messagess",
    "• All MIDI 1.0 Protocol Channel Voice Messagess",
    "upon the value of the Message Type..",
    "Status value. As detailed in the UMP Format for each MIDI Message, the size in bits of the Status field dependss",
    "Within each Message Type multiple messages are defined. Each message in the Message Type has its ownn",
    "Messages of Message Type = 0x0 and Message Type = 0xF do not have a Group field. Other Message Typess",
    "Messages without a Group Fieldd",
    "Data Messages) shall apply to, and shall affect, all MIDI Channels within that Group. Groups are treated in thee",
    "Within a given Group, MIDI Messages that do not support a MIDI Channel field (i.e., System Messages andd",
    "connection for Channel-based MIDI Messages. UMPs addressed to different Groups may be freely interleavedd",
    "Group field is 4-bit value to address a UMP MIDI Message to one of 16 Groups..",
    "Channel Voice Messages), as well as the UMP’s size, and the size of the Status field..",
    "field indicates the message’s general functional area (e.g., Utility, MIDI 1.0 Channel Voice Messages, MIDI 2.00",
    "The most significant 4 bits in every UMP shall contain the Message Type field, detailed in Section 2.1.4. Thiss",
    "Message Typee",
    "The following fields have common meanings across multiple Message Types..",
    "0x4 64 bits MIDI 2.0 Channel Voice Messagess",
    "0x3 64 bits Data Messages (including System Exclusive))",
    "0x2 32 bits MIDI 1.0 Channel Voice Messagess",
    "0x1 32 bits System Real Time and System Common Messages (except System Exclusive))",
    "0x0 32 bits Utility Messagess",
    "Table 4 Message Type (MT) Allocationn",
    "used as a classification of message functions. All messages within a Message Type have the samee",
    "The most significant 4 bits of every message contain the Message Type (MT). The Message Type iss",
    "2.1.4 Message Type (MT) Allocationn",
    "• Messages marked as Reserved shall not be used..",
    "Figure 3 Status Field Size Varies with Message Type Valuee",
    "particular message within that Message Type..",
    "Off, MIDI 1.0 Note On, MIDI 1.0 Program Change, and other related messages; the Status field selects onee",
    "For example, Message Type 0x2 is “MIDI 1.0 Channel Voice Messages” which contains the MIDI 1.0 Notee",
    "those Message Types, even though the data within the messages are not yet defined..",
    "These reserved Message Types provide extensibility for future standardization. They have predefined sizes so thatt",
    "Per Section 2.1.3, Message Types marked Reserved in Table 4 are reserved for future definition by MMA\/AMEII",
    "Reserved Message Typess",
    "Figure 4 UMP Formats for Example Message Typess",
    "0xF 128 bits UMP Stream Messagess",
    "0xD 128 bits Flex Data Messagess",
    "0x5 128 bits Data Messagess",
    "Voice Messages have additional properties which are not available in the corresponding MIDI 1.0 Protocoll",
    "by aggregating some combination of multiple messages into a single, unified message. Some MIDI 2.0 Channell",
    "2.0 Protocol increases the data resolution for all Channel Voice Messages, and makes some messages easier to usee",
    "those messages..",
    "by MMA\/AMEI. Whenever MMA\/AMEI do define new messages that use these currently Reserved Messagee",
    "Per Section 2.1.3 and Section 2.1.4, several Message Type values are reserved for future use, to be defined solelyy",
    "Messages..",
    "Note: UMP MIDI 1.0 Devices shall NOT use any messages from Message Type 0x4, MIDI 2.0 Channel Voicee",
    "• Message Type 0xF UMP Stream Messagess",
    "• Message Type 0xD Flex Data Messagess",
    "• Message Type 0x5 SysEx 8 and Mixed Data Set Messagess",
    "• Message Type 0x0 Utility Messagess",
    "UMP MIDI 1.0 Devices may also use the following Message Types to add extended functionality::",
    "3.2.1.2 Message Types to Extend MIDI 1.0 Functionalityy",
    "• Message Type 0x3 Data Messages (for System Exclusive))",
    "• Message Type 0x2 Channel Voice Messagess",
    "• Message Type 0x1 System Real Time and System Common Messagess",
    "The following Message Types encapsulate all traditional MIDI 1.0 Protocol messages::",
    "3.2.1.1 Message Types for Traditional MIDI 1.0 Functionalityy",
    "There are two categories of UMP Message Types for the MIDI 1.0 Protocol: those that simply support traditionall",
    "3.2.1 Message Types for MIDI 1.0 Protocoll",
    "Devices shall not use any messages from Message Type 0x4, MIDI 2.0 Channel Voice Messages..",
    "Message Types listed in Section 3.2.1.2 within the same Group to add new functionality. But UMP MIDI 1.00",
    "use any of the Message Types listed in Section 3.2.1.1. UMP MIDI 1.0 Devices may also use messages from thee",
    "MIDI 1.0 Protocol messages are carried in the UMP using several Message Types. UMP MIDI 1.0 Devices mayy",
    "Discovery message (see Section 7.1.1) is used to discover the Protocols available. Some devices, interfaces, APIs,,",
    "messages..",
    "by MMA\/AMEI. Whenever MMA\/AMEI do define new messages that use these currently Reserved Messagee",
    "Per Section 2.1.3 and Section 2.1.4,, several Message Type values are reserved for future use, to be defined solelyy",
    "Messages..",
    "MIDI 2.0 Protocol Devices shall not use any messages from Message Type 0x2, MIDI 1.0 Channel Voicee",
    "• Message Type 0xF UMP Stream Messagess",
    "• Message Type 0xD Flex Data Messagess",
    "• Message Type 0x5 Data Messagess",
    "• Message Type 0x0 Utility Messagess",
    "• Message Type 0x3 Data Messages (for System Exclusive))",
    "• Message Type 0x4 MIDI 2.0 Channel Voice Messagess",
    "• Message Type 0x1 System Real Time and System Common Messagess",
    "implemented using these Message Types::",
    "The following Message Types contain all of the core MIDI 2.0 Protocol messages. MIDI 2.0 functionality may bee",
    "3.3.1 Message Types for MIDI 2.0 Protocoll",
    "Devices may use any of these messages, and may also use messages from certain other defined Message Typess",
    "MIDI 2.0 Protocol messages are carried in the UMP Format using several Message Types. MIDI 2.0 Protocoll",
    "messages. Several new Channel Voice Messages are added to provide increased Per-Note control and musicall",
    "JR Timestamps, the Translator shall schedule the MIDI 1.0 Protocol messages according to the received JRR",
    "Translator to improve timing. If a Translator understand JR Timestamps and receives messages with JRR",
    "7.1.6.2) and Stream Configuration Notification message (see Section 7.1.6.3) are used to enable or disable JRR",
    "Devices negotiate whether JR Timestamps will be used. Endpoint Discovery message (see Section 7.1.1) is usedd",
    "Figure 5 Sequence of MIDI Messages with JR Timestamps Prependedd",
    "the Sender's notion of time. Therefore, the Sender also sends regular clock messages to declare its current time..",
    "All messages from a Sender can be transmitted with a Jitter Reduction Timestamp prepended. Time is based onn",
    "intended to help capture a performance with accurate timing. It may also be used for transmitting MIDI Messagess",
    "Figure 6 Device Discovery Messages on a UMP Endpointt",
    "These mechanisms use Groupless messages defined in Section 7.1..",
    "format of those messages, including the messages for these Device discovery transactions..",
    "* Note: The version of UMP Format can be used to determine which UMP messages may be used and thee",
    "3. Device Topology: including which Groups are currently valid for transmitting and receiving messages andd",
    "connect, communicate and address messages. Discoverable properties include::",
    "function from Group 1 to Group 3 so that the two Devices send and receive MIDI Messages on the samee",
    "Function Block that sends notes and sustain pedal from its keyboard and receives the same messages into itss",
    "A Device uses Function Block related messages to report topology information including the Group address(es) inn",
    "Upon changing its Function Block structure, a Device sends a Function Block Info Notification message (Seee",
    "Translation: MIDI 1.0 and MIDI 2.0 Messages) for backward compatibility for Function Blocks that representt",
    "MIDI 1.0 Protocol may optionally be used for messages to\/from that Function Block..",
    "7.1.1 Endpoint Discovery Messagee",
    "notifications. These UMP Stream Messages are used in bidirectional transactions between UMP Endpoints..",
    "In this version of the UMP Format and MIDI 2.0 Protocol, UMP Stream Messages allow discovery of UMPP",
    "0x3 - End of message which spans two or more UMPss",
    "single messagee",
    "0x2 - Continuing a message which spans three or more UMP. There might be multiple Continue UMPs in aa",
    "0x1 - Start of a message which spans two or more UMPss",
    "0x0 - Complete message in one UMPP",
    "Figure 10 UMP Stream Message General Formatt",
    "• 4 bits Message Type with value 0xFF",
    "Stream Messages are 128-bit messages containing the following fields::",
    "UMP Stream Messages are addressed to the UMP Endpoint, without a Group or Channel assignment. All UMPP",
    "7.1 UMP Stream Messagess",
    "• Appendix G: All Defined Messagess",
    "• Section 7.9 Mixed Data Set Messagee",
    "• Section 7.8 System Exclusive 8 (8-Bit) Messagess",
    "• Section 7.7 System Exclusive (7-Bit) Messagess",
    "• Section 7.6 System Common and System Real Time Messagess",
    "• Section 7.5 Flex Data Messagess",
    "• Section 7.4 MIDI 2.0 Channel Voice Messagess",
    "• Section 7.3 MIDI 1.0 Channel Voice Messagess",
    "• Section 7.2 Utility Messagess",
    "• Section 7.1 UMP Stream Messagess",
    "This Section defines or reserves all possible MIDI Message formats in the UMP Format::",
    "7 MIDI Messages in UMP Formatt",
    "message with the 'e' bit set in the Filter Bitmap field. A UMP Endpoint should send an Endpoint Info Notificationn",
    "7.1.2 Endpoint Info Notification Messagee",
    "• If the received message is of the same version as the Device, then no special considerations are necessary..",
    "When receiving an Endpoint Discovery message, the Device shall examine the received UMP Major and Minorr",
    "Figure 12 Endpoint Discovery Message Filter Bitmap Fieldd",
    "Figure 11 Endpoint Discovery Message Formatt",
    "message where the Filter field bitmap 'd' bit set..",
    "7.1.3 Device Identity Notification Messagee",
    "that can be discovered using the Discover Function Blocks message..",
    "Figure 13 Endpoint Info Notification Message Formatt",
    "when any property in this message has changed. This provides Information to the receiving UMP connection too",
    "7.1.5 Product Instance Id Notification Messagee",
    "The name shall not be any longer than 98 bytes in size, either in a Complete message (if less than 15 bytes))",
    "Figure 15 Endpoint Name Notification Message Formatt",
    "Discovery message with the Filter field bitmap 'n' bit set..",
    "A UMP Endpoint may send an Endpoint Name Notification message at any time, or when it receives an Endpointt",
    "Universal System Exclusive message (See MIDI 1.0 Detailed Specification [MA01]). The data is formatted ass",
    "Figure 14 Device Identity Notification Message Formatt",
    "messages used are defined in Section 7..",
    "JR Timestamps. Endpoint Discovery message (see Section 7.1.1) is used to discover the Protocols and JRR",
    "0x3) or Complete message (Form = 0x0)..",
    "0x00. This indicates the end of the Product Instance Id value. This shall only occur in an End message (Form ==",
    "If the Product Instance Id ends in the middle of a MIDI message, then the remaining data bytes shall be set too",
    "message (Form = 0x2) if needed, and an End message (Form = 0x3)..",
    "message (if less than 15 bytes) (Form = 0x0) or comprised of a Start message (Form = 0x1), a single Continuee",
    "Figure 16 Product Instance Id Notification Message Formatt",
    "message where the Filter field bitmap 'i' bit set..",
    "message (See Section 7.1.6.3) has been received as a reply from the connected Device (B)..",
    "for all messages sent and received..",
    "Once the Sender has received the Stream Configuration Notification message it is able to start sending messagess",
    "Notification message to confirm the requested configuration. If the Receiver is unable to change some or all partss",
    "If a Stream Configuration Request message was sent the Receiver replies with a Stream Configurationn",
    "Configuration Notification message in reply (See Figure 17)..",
    "message (see Section 7.1.6.2) with the desired Protocol and JR Timestamps configuration..",
    "If the Protocol and JR Timestamps information provided in the Stream Configuration Notification message do nott",
    "message (see Section 7.1.6.3) to declare the current Protocol and whether the UMP Endpoint is currentlyy",
    "Notification message (see Section 7.1.2) to declare the features supported for selection, including the list off",
    "A Sender sends an Endpoint Discovery message (see Section 7.1.1) with the Filter field set to retrieve the UMPP",
    "Figure 19 Stream Configuration Notification Message Formatt",
    "• As a notification when any property in this message has changed..",
    "• As a reply to a Stream Configuration Request message..",
    "• As a reply to an Endpoint Discovery message with the 's' bit set in the Filter Bitmap field..",
    "This message declares the current Protocol and JR Timestamps of messages the Device will send and receive..",
    "7.1.6.3 Stream Configuration Notification Messagee",
    "Timestamps until after a Stream Configuration Notification message (See Section 7.1.6.3) has been received ass",
    "(B)) shall prefix all messages with JR Timestamps..",
    "If the JR Timestamps Transmit value is set in this field, then the UMP Endpoint receiving this message (Devicee",
    "until after a Stream Configuration Notification message (See Section 7.1.6.3) has been received as a reply fromm",
    "(B)) can expect incoming messages to be prefixed with JR Timestamps..",
    "If the JR Timestamp Receive value is set in this field, then the UMP Endpoint receiving this message (Devicee",
    "using the declared Protocol and expects messages sent to it will also use the same..",
    "The Protocol value in this field indicates that the UMP Endpoint sending this message will send its messagess",
    "Figure 18 Stream Configuration Request Message Formatt",
    "Block represents (declares) a MIDI 1.0 connection, then MIDI 1.0 Protocol may optionally be used for messagess",
    "Function Block Discovery message can be sent with 0x00, 0x01, or 0x02 in the Function Block Numberr",
    "Example: If Number of Function Blocks = 3 (in the previous Endpoint Info Notification message), then thee",
    "Notification message declares the Number of Function Blocks (NFB) (See Section 7.1.2). Each Function Blockk",
    "Figure 20 Function Block Discovery Message Formatt",
    "This message requests details about the Function Block configuration available on the receiving UMP Endpoint..",
    "7.1.7 Function Block Discovery Messagee",
    "all messages with JR Timestamps..",
    "If the JR Timestamps Transmit value is set in this field, then the UMP Endpoint sending this message will sendd",
    "messages sent to it will include JR Timestamps..",
    "If the JR Timestamp Receive value is set in this field, then the UMP Endpoint sending this message is expectingg",
    "using the declared Protocol and expects messages sent to it will also use the same..",
    "The Protocol value in this field indicates that the UMP Endpoint sending this message will send its messagess",
    "0b10 – Output, Function Block transmits MIDI Messages onlyy",
    "0b01 – Input, Function Block receives MIDI Messages onlyy",
    "If the Endpoint Info Notification message has declared that its Function Blocks are static, then the UMPP",
    "Figure 22 Function Block Info Notification Message Formatt",
    "Notification when any property in this message has changed. This provides information to the receiving UMPP",
    "reply shall be one Function Block Info Notification message per Function Block..",
    "message. If the Function Block Discovery message has the Function Block Number field set to 0xFF, then thee",
    "If a UMP Endpoint has one or more Function Blocks and receives a Function Block Discovery message with the 'i''",
    "Notification message has not declared that its Function Blocks are static. This provides information to thee",
    "Number field set to 0xFF, then the reply shall be one Function Block Name Notification message per Functionn",
    "message where the Filter field bitmap 'n' bit set. If the Function Block Discovery message has the Function Blockk",
    "• 1 = Receiver does not support multiple, simultaneous System Exclusive 8 messages..",
    "• 0 = Receiver does not support any System Exclusive 8 messages..",
    "The version and message format of the MIDI-CI supported. 0x00 = none or unknown. Devices whichh",
    "MIDI-CI Message Version\/Formatt",
    "Function Block which declares that Direction is “Output, transmits MIDI Messages only” shall not set the Userr",
    "it can respond to a MIDI-CI Discovery message..",
    "0b11 – Function Block is both a Sender and Receiver of MIDI messagess",
    "0b10 – Function Block is primarily a Sender or source of MIDI messagess",
    "0b01 – Function Block is primarily a Receiver or destination for MIDI messagess",
    "messages..",
    "The UMP Format provides a set of Utility Messages. Utility Messages include but are not limited to NOOP andd",
    "7.2 Utility Messagess",
    "Figure 25 End of Clip Message Formatt",
    "The last event in the Clip Sequence Data of a MIDI Clip File (See [MA09]) shall be an End of Clip message withh",
    "7.1.11 End of Clip Messagee",
    "Figure 24 Start of Clip Message Formatt",
    "is used for musical content, then the timing of the Start of Clip message should be the start of the first bar off",
    "In a MIDI Clip File, the Start of Clip message shall have a preceding Delta Clockstamp. If the Clip Sequence Dataa",
    "The Start of Clip message is used in a MIDI Clip File (See [MA09]) as the first event in the Clip Sequence Data..",
    "7.1.10 Start of Clip Messagee",
    "comprised of a Start (Format = 0x1), up to five optional Continue messages (Format = 0x2) and an End messagee",
    "not be any longer than 91 bytes in size, either in a Complete message (if less than 14 bytes) (Form = 0x0) orr",
    "Figure 29 JR Clock Message Formatt",
    "Clock messages..",
    "calculate the current time. Because the Sender is not mandated to send messages at an exact period (only “at leastt",
    "A Sender may send additional JR Clock messages with a shorter period to help the Receiver analyze the jitter andd",
    "Figure 28 Sequence of JR Clock Messagess",
    "applied to effectively render messages with increased timing accuracy..",
    "message compared to reception time of the JR Clock message UMP to determine a steady JR Clock to renderr",
    "received with the same jitter as other messages, so the Receiver uses JR Clock messages to discover the jitterr",
    "The Sender shall send a JR Clock message at least once every 250 milliseconds. The JR Clock messages will bee",
    "related to any other message. JR Clock time is monotonically increasing except when it wraps around..",
    "close as possible to the time stated in the Time field. The Sender sends independent JR Clock messages, nott",
    "The JR Clock message defines the current time of the Sender. The Sender shall send the JR Clock message ass",
    "7.2.2.1 JR Clock Messagee",
    "The Stream Configuration Request message is used to enable or disable JR Timestamps. See Section 7.1.6.2..",
    "messages..",
    "The UMP Format provides a method of managing jitter for a UMP Stream. All messages from a Sender can bee",
    "Figure 27 NOOP Message Formatt",
    "A NOOP (no operation) message is provided in the Utility Messages Message Type, using opcode zero..",
    "Figure 26 Utility Message General Formatt",
    "Figure 31 JR Timestamp Message Formatt",
    "Receiver: JR Timestamped messages shall be rendered in the order in which they are received..",
    "Sender: JR Timestamped messages shall be sent in the order in which they are intended to be rendered..",
    "scheduling, the Receiver should convert the time for each message from the Sender’s time domain to thee",
    "JR Timestamps are specified in the Sender’s time domain as communicated via JR Clock Messages. For real-timee",
    "Figure 30 Example Sequence of MIDI Messages with JR Timestamps Prependedd",
    "Timestamp applies to the message..",
    "seconds). If a message does not have its own, immediately preceding JR Timestamp, the last received JRR",
    "messages. If two or more messages are intended to be rendered simultaneously then they can be preceded by aa",
    "A JR Timestamp shall be sent before every non-JR Timestamp message, except in the case of simultaneouss",
    "of another message. The timing of every non-JR Timestamp message is set by the most recent preceding JRR",
    "The JR Timestamp message defines the time of the following message(s). It is a complete message. It is not a partt",
    "7.2.2.2 JR Timestamp Messagee",
    "the Sender shall send a JR Clock message at least once every 250 milliseconds..",
    "To avoid ambiguity of the 2.09712 seconds wrap, and to provide sufficient JR Clock messages for the Receiver,,",
    "Figure 33 Delta Clockstamp Ticks Per Quarter Note Message Formatt",
    "most receivers will ignore this message..",
    "messages in a MIDI Clip File. If this message is used outside of a MIDI Clip File (is sent on a UMP transport),,",
    "The Delta Clockstamp Ticks Per Quarter Note message declares the unit of measure used by Delta Clockstampp",
    "messages declare the number of ticks since the last event. The timing of every non-Clockstamp message is set byy",
    "message as soon as possible and send a Stream Configuration Request message to switch the Sender to aa",
    "• If a Receiver that does not support JR Timestamps receives a JR Timestamp message, it should render thee",
    "Timestamps or not, the Receiver shall render those messages as soon as possible..",
    "• If a Receiver has not yet received any JR Clock messages but receives other messages, whether with JRR",
    "When a Sender first starts sending JR Clock messages, it could send many of them for a few seconds to help thee",
    "Figure 32 Examples of MIDI Messages with JR Timestampss",
    "next Delta Clockstamp in the file declares the ticks since the previous NOOP message..",
    "Clip File shall insert a Delta Clockstamp followed by a NOOP message to restart the delta time count. Then thee",
    "If no MIDI message has occurred during the previous 1,048,575 ticks, then the application which creates the MIDII",
    "Figure 34 Delta Clockstamp Message Formatt",
    "The timing of every message (other than Delta Clockstamps) in a MIDI Clip File is set by the most recentt",
    "receivers will ignore this message..",
    "Clockstamp message. If this message is used outside of a MIDI Clip File (is sent on a UMP transport), mostt",
    "The Delta Clockstamp message declares the time of all following messages which occur before the next Deltaa",
    "number of ticks per second and this message allows selection of accuracy required for the target application ass",
    "UMP, and byte 4 is filled with 0 bits. This applies to the Program Change and Channel Pressure messages..",
    "Per Figure 37 for 2-byte MIDI 1.0 Channel Voice Messages, the two bytes are copied into bytes 2 and 3 of thee",
    "the UMP. This applies to the Note Off, Note On, Poly Pressure, Control Change, and Pitch Bend messages..",
    "Per Figure 36, for 3-byte MIDI 1.0 Channel Voice Messages, all three bytes are copied into bytes 2 through 4 off",
    "• 24 bits of MIDI 1.0 Channel Voice Message data::",
    "• 4 bits Message Type with value 0x22",
    "In UMP, the MIDI 1.0 Channel Voice Messages are all 32-bit messages containing the following data::",
    "7.3 MIDI 1.0 Channel Voice Messagess",
    "Figure 35 Examples of MIDI Messages with Delta Clockstampp",
    "7.3.3 MIDI 1.0 Poly Pressure Messagee",
    "Figure 39 MIDI 1.0 Note On Messagee",
    "7.3.2 MIDI 1.0 Note On Messagee",
    "Figure 38 MIDI 1.0 Note Off Messagee",
    "7.3.1 MIDI 1.0 Note Off Messagee",
    "Figure 37 MIDI 1.0 2-Byte Channel Voice Message General Formatt",
    "MIDI 1.0 Channel Voice Messagee",
    "2-Byte MIDI 1.0 Channel Voice Message (per MIDI 1.0 Specification))",
    "Figure 36 MIDI 1.0 3-Byte Channel Voice Message General Formatt",
    "MIDI 1.0 Channel Voice Messagee",
    "3-Byte MIDI 1.0 Channel Voice Message (per MIDI 1.0 Specification))",
    "Figure 45 MIDI 2.0 Channel Voice Message General Formatt",
    "• 4 bits Message Type with value 0x44",
    "All MIDI 2.0 Channel Voice Messages are 64-bit messages containing the following fields::",
    "7.4 MIDI 2.0 Channel Voice Messagess",
    "Figure 44 MIDI 1.0 Pitch Bend Messagee",
    "7.3.7 MIDI 1.0 Pitch Bend Messagee",
    "Figure 43 MIDI 1.0 Channel Pressure Messagee",
    "7.3.6 MIDI 1.0 Channel Pressure Messagee",
    "Figure 42 MIDI 1.0 Program Change Messagee",
    "7.3.5 MIDI 1.0 Program Change Messagee",
    "Figure 41 MIDI 1.0 Control Change Messagee",
    "7.3.4 MIDI 1.0 Control Change Messagee",
    "Figure 40 MIDI 1.0 Poly Pressure Messagee",
    "message to the MIDI 1.0 Protocol, if the translated MIDI 1.0 value of the Velocity is zero, then the Translatorr",
    "On message, a velocity value of zero does not function as a Note Off. When translating a MIDI 2.0 Note Onn",
    "Figure 47 MIDI 2.0 Note On Messagee",
    "The MIDI 2.0 Protocol expands the Note On message with higher resolution Velocity, and with added Attributee",
    "7.4.2 MIDI 2.0 Note On Messagee",
    "Figure 46 MIDI 2.0 Note Off Messagee",
    "Section 7.4.2 MIDI 2.0 Note On Messagee",
    "The MIDI 2.0 Protocol expands the Note Off message with higher resolution Velocity, and with added Attributee",
    "7.4.1 MIDI 2.0 Note Off Messagee",
    "any of the MIDI 1.0 Channel Voice Messages from Message Type 0x2 within that same Group..",
    "Devices that use any of these MIDI 2.0 Channel Voice Messages from Message Type 0x4 in a Group shall not usee",
    "When a device receives a Per-Note Management message with D = 1 (Detach), all currently playing notes andd",
    "When bits are set high, specific functions of the Per-Note Management message are active::",
    "Figure 51 MIDI 2.0 Per-Note Management Messagee",
    "The MIDI 2.0 Protocol introduces a Per-Note Management message to enable independent control from Per-Notee",
    "7.4.5 MIDI 2.0 Per-Note Management Messagee",
    "Figure 50 MIDI 2.0 Assignable Per-Note Controller Messagee",
    "Figure 49 MIDI 2.0 Registered Per-Note Controller Messagee",
    "The MIDI 2.0 Protocol introduces these new messages with 256 Registered Per-Note Controllers and 2566",
    "Messagess",
    "Figure 48 MIDI 2.0 Poly Pressure Messagee",
    "The MIDI 2.0 Protocol expands the resolution of the Poly Pressure message from 7 bits to 32 bits..",
    "7.4.3 MIDI 2.0 Poly Pressure Messagee",
    "• Devices receiving the MIDI 2.0 Protocol should ignore Control Change messages with indexes of 0, 6, 32,,",
    "32. Instead they should transmit the new MIDI 2.0 Program Change message (see Section 7.4.9)..",
    "• Devices sending the MIDI 2.0 Protocol should not transmit Control Change messages with indexes of 0 andd",
    "Controller messages (see Section 7.4.7). These new messages are more friendly to send, to receive, and to editt",
    "99, 100, or 101. Instead, they should transmit the new Assignable Controller messages and Registeredd",
    "Devices sending the MIDI 2.0 Protocol should not transmit Control Change messages with indexes of 6, 38, 98,,",
    "compound sequences with unified messages, see Section 7.4.9 MIDI 2.0 Program Change Message..",
    "Bank Select associated with following Program Change messages. The MIDI 2.0 Protocol replaces thosee",
    "2.0 Registered Controller (RPN) and Assignable Controller (NRPN) Messages..",
    "The MIDI 2.0 Protocol replaces those compound sequences with unified messages, see Section 7.4.7 MIDII",
    "Number control messages. These set destinations for Control Change index 6\/38 (0x06\/0x26), Data Entry..",
    "Figure 52 MIDI 2.0 Control Change Messagee",
    "The MIDI 2.0 Protocol expands the resolution of the Control Change message from 7 bits to 32 bits..",
    "7.4.6 MIDI 2.0 Control Change Messagee",
    "See Appendix C: Using MIDI 2.0 Per-Note Messages for implementation guidelines..",
    "Note: The above defined responses to Per-Note Management messages apply by default to all Per Notee",
    "A Per-Note Management Message with D=0 and S=0 has no defined function..",
    "When a device receives a Per-Note Management message with D = 1 and S = 1, then the device should firstt",
    "When a device receives a Per-Note Management message with S = 1, all Per-Note Controllers on the referencedd",
    "Figure 55 MIDI 2.0 Registered Controller Messagee",
    "definitions as MMA\/AMEI approved RPN messages. Registered Controllers are organized in 128 Bankss",
    "Messagess",
    "Figure 54 MIDI 2.0 Omni-Off\/Mono Control Change Messagee",
    "functions of Omni-Off\/Mono Control Change message see the MIDI 1.0 Specification [MA01]..",
    "specifies the number of channels in which Monophonic Voice messages are to be sent. For fundamentall",
    "When Mono mode is selected, a single voice is assigned per MIDI Channel. The Omni-Off\/Mono Messagee",
    "CC 126 – Omni-Off\/Mono Messagee",
    "Figure 53 MIDI 2.0 Portamento Control Change Messagee",
    "note specified in the Portamento Control message to the new Note-On’s pitch. For fundamental functions off",
    "When a Note-On is received after a Portamento Control message, the voice’s pitch will glide from the pitch of aa",
    "Figure 59 MIDI 2.0 Tuning Program Change Messagee",
    "Program Change message see the MIDI 1.0 Specification [MA01]..",
    "Figure 58 MIDI 2.0 Coarse Tuning Messagee",
    "Coarse Tuning uses the RPN value to set the tuning. For fundamental functions Coarse Tuning message see thee",
    "Figure 57 MIDI 2.0 Pitch Bend Sensitivity Messagee",
    "and Assignable Controllers replace those compound messages with a single, unified message, making them muchh",
    "messages, which can be confusing for both developers and users. In the MIDI 2.0 Protocol, Registered Controllerss",
    "Figure 56 MIDI 2.0 Assignable Controller Messagee",
    "Figure 63 MIDI 2.0 Relative Assignable Controller Messagee",
    "Figure 62 MIDI 2.0 Relative Registered Controller Messagee",
    "These new messages act upon the same address space as the MIDI 2.0 Protocol’s Registered Controllers and MIDII",
    "Assignable Controller Messages, it is now also possible to make relative increases or decreases to the currentt",
    "Registered Controller Messages and Assignable Controller Messages (defined above in Section 7.4.7) directly sett",
    "Messagess",
    "Figure 61 MIDI 2.0 MPE MCM Messagee",
    "fundamental functions of MPE MCM message see the MPE Specification [MA07]..",
    "Figure 60 MIDI 2.0 Tuning Bank Change Messagee",
    "message see the MIDI 1.0 Specification [MA01]..",
    "Figure 66 MIDI 2.0 Pitch Bend Messagee",
    "The MIDI 2.0 Protocol expands the resolution of the Pitch Bend message from 14 bits to 32 bits. The data field iss",
    "7.4.11 MIDI 2.0 Pitch Bend Messagee",
    "Figure 65 MIDI 2.0 Channel Pressure Messagee",
    "The MIDI 2.0 Protocol expands the resolution of the Channel Pressure message from 7 bits to 32 bits..",
    "7.4.10 MIDI 2.0 Channel Pressure Messagee",
    "The MIDI 2.0 Program Change message always selects a Program. The Bank Select operation is optional,,",
    "Figure 64 MIDI 2.0 Program Change Messagee",
    "and Programs requires sending three MIDI separate 1.0 Messages. The MIDI 1.0 Protocol’s existing 16,3844",
    "Select messages into a single, unified message; by contrast, the MIDI 1.0 Protocol mechanism for selecting Bankss",
    "In the MIDI 2.0 Protocol, this message combines the MIDI 1.0 Protocol’s separate Program Change and Bankk",
    "7.4.9 MIDI 2.0 Program Change Messagee",
    "The data field in the MIDI 2.0 Relative Registered Controller and Relative Assignable Controller messagess",
    "Note: The data format of this value is consistent with the value of the Registered Per-Note Controller Messagee",
    "Figure 68 RC for Sensitivity of Per-Note Pitch Bend Messagee",
    "sensitivity which is set via this message. The selected sensitivity is shared by all Note Numbers..",
    "Note: \"Per-Note\" in the name of this message relates specifically to the \"Per-Note Pitch Bend\", not to thee",
    "down) from the current sounding pitch of a Note when using MIDI 2.0 Per-Note Pitch Bend messages. All Notess",
    "Figure 67 MIDI 2.0 Per-Note Pitch Bend Messagee",
    "The MIDI 2.0 Per-Note Pitch Bend message acts like Pitch Bend in every way, except that it applies to individuall",
    "7.4.12 MIDI 2.0 Per-Note Pitch Bend Messagee",
    "more properties than a MIDI 1.0 Protocol Note On or Note Off message. Those properties might be defined ass",
    "Attribute Type and Attribute Data fields enable a MIDI 2.0 Protocol Note On or Note Off message to addresss",
    "• Messages that Set Pitch (override Default) for One Note Only::",
    "• Messages that Set Pitch (override Default) with Persistent State for Subsequent Note Ons::",
    "• Messages that Set the Default Pitch as done in the MIDI 1.0 Protocol (pitch is only roughly defined)::",
    "Pitch of a Note is determined by any combination of the following message components, some of which overridee",
    "implementation details, including interaction with other messages that influence or determine pitch..",
    "In a Note On\/Off message with no attribute data, the Attribute Type shall be set to 0x00 and the Attribute Dataa",
    "messages for multiple Note Numbers can be used to define a complete tuning table for any and all 128 Notee",
    "the Note On message..",
    "MIDI Tuning Standard (MTS) messages. Controllers create persistent state, so all notes that follow this messagee",
    "Registered Per-Note Controller #3 is defined as Pitch 7.25. The message’s 32-bit data field contains::",
    "formatted as a System Exclusive message. For fundamental functions and details of MIDI Tuning Standard, seee",
    "MMA\/AMEI in the future that also determine pitch. Such messages or mechanisms might be defined in futuree",
    "Note: There might be other messages, from among the currently reserved messages, or mechanisms defined byy",
    "• Messages that Modify Pitch Relatively from Any Existing Pitch State::",
    "3 Flex Data Message End UMPP",
    "There might be multiple Continue UMPs in a single messagee",
    "2 Flex Data Message Continue UMPP",
    "1 Flex Data Message Start UMPP",
    "0 Complete Flex Data Message in one UMPP",
    "Table 9 Flex Data Message Format Field Valuess",
    "The 2-bit Format field determines the role of each UMP in a Flex Data Message::",
    "Figure 69 Flex Data Messages General Formatt",
    "The message format includes a large Status space for many messages to be defined in the future..",
    "a Group (like System Messages)..",
    "• An Address field is used to indicate if the message is addressed to a Channel (using the Channel field) or too",
    "• A Format field is used to optionally allow a message to have a variable size data, in multiples of 128 bits..",
    "the Message Type field set to 0xD::",
    "The Message Type 0xD format has standardized mechanisms which may be used by any message definitions withh",
    "7.5.1 Flex Data Messages General Formatt",
    "Data message is intended for real time application, the size of the message should be kept as small as possible..",
    "messages are intended for real time set commands, with priority similar to Channel Voice Messages. When a Flexx",
    "Messages have flexible addressing and may consist of multiple UMPs..",
    "This section defines the use of Message Type = 0xD in the Universal MIDI Packet data format. Flex Dataa",
    "7.5 Flex Data Messagess",
    "The Status Bank field provides up to 256 message classifications. The Status field provides up to 256 messagee",
    "This 4-bit field declares a destination for the Flex Data message..",
    "1 Message is sent to the Group (ignore Channel Field))",
    "0 Message is sent to the Channel set in the Channel Fieldd",
    "Address Field Value Message Addressingg",
    "Table 10 Flex Data Message Address Field Valuess",
    "The 2-bit Address field determines the address destination of each UMP in a Flex Data Message::",
    "A Flex Data Message shall not be larger than 32 UMPs. Therefore, the largest Flex Data message allowed wouldd",
    "Flex Data Message Continue UMP may be used between Start and End UMPs to provide sufficient payloadd",
    "• Begin with a Flex Data Message Start UMP and terminate with a Flex Data Message End UMP. Optionall",
    "• A Complete Flex Data Message in one UMPP",
    "Every Flex Data Message shall be in one of two formats::",
    "A short Flex Data Message might fit into one UMP. Other Flex Data Messages span multiple UMPs..",
    "• If a Device is sending MIDI Clock messages over a MIDI Transport, Set Time Signature messages shalll",
    "This message declares and sets a Time Signature for subsequent bars..",
    "7.5.4 Set Time Signature Messagee",
    "Format shall be set to 0 (Complete Flex Data Message in one UMP)..",
    "Figure 70 Set Tempo Message Formatt",
    "• In a Standard MIDI File, Set Tempo messages shall only occur at the timing of 1\/24 of a 1\/4 note..",
    "• If a Device is NOT sending MIDI Clock messages over a MIDI Transport, Set Tempo messages shouldd",
    "• If a Device is sending MIDI Clock messages over a MIDI Transport, Set Tempo messages shall only occurr",
    "alone, by allowing a calculation of forecasted time to subsequent MIDI Clock messages..",
    "This message sets musical tempo by declaring the number of 10 nanosecond units per quarter note. This may alsoo",
    "7.5.3 Set Tempo Messagee",
    "Message, to maintain timing synchronization..",
    "2. System Real Time Messages and JR Clock Messages may be inserted between the UMPs of a Flex Dataa",
    "Clock Messages..",
    "except for Flex Data Message Continue UMPs for the same message, System Real Time Messages, and JRR",
    "1. The Sender should not send any other Message or UMP between the Start and End of the Flex Data Message,,",
    "Data Messages within a Group::",
    "Senders should obey the following data rules that govern interspersing other messages and termination of Flexx",
    "7.5.2 Limitations of Interspersing Other Messages with Flex Data Messagess",
    "Format shall be set to 0 (Complete Flex Data Message in one UMP)..",
    "Figure 72 Set Metronome Message Formatt",
    "• This message may be sent to configure the metronome of a receiver..",
    "• This message may be used by a sequencer to configure its metronome..",
    "This message sets metronome functions..",
    "7.5.5 Set Metronome Messagee",
    "Format shall be set to 0 (Complete Flex Data Message in one UMP)..",
    "Figure 71 Set Time Signature Message Formatt",
    "• In a Standard MIDI File, Set Time Signature messages shall only occur when one bar ends (according too",
    "• If a Device is NOT sending MIDI Clock messages over a MIDI Transport, Set Time Signature messagess",
    "declared by a Set Tempo message..",
    "Figure 74 Set Key Signature Message Formatt",
    "This message sets the Key Signature for up to 7 sharps or up to 7 flats. A field is provided to declare which notee",
    "7.5.7 Set Key Signature Messagee",
    "Figure 73 Example Set Metronome Messagess",
    "7.5.6 Example Set Metronome Messagess",
    "Figure 75 Set Chord Message Formatt",
    "This message declares the name of a chord. The chord can have an optional, alternate bass note and an optionall",
    "7.5.8 Set Chord Name Messagee",
    "Status Bank Status Message Notess",
    "Table 16 Text Messages by Statuss",
    "The following table lists messages which conform to the Text Messages Common Format..",
    "7.5.9.1 Messages Which use the Text Common Formatt",
    "Figure 77 Flex Data Text Messages Common Formatt",
    "All Flex Data Messages with Status Bank field set to 0x01 or 0x02 shall contain text encoded in UTF-8 format,,",
    "7.5.9 Text Messages Common Formatt",
    "Figure 76 Example Set Chord Name Messagess",
    "7.5.8.1 Example Set Chord Name Messagess",
    "be separated by a comma. For example, a Composer Name message might include: “John Lennon, Paull",
    "multiple entities into a single message. When multiple entries are declared in a single message, the entries shouldd",
    "Performer Name messages. A device or system may choose to put each entity into a single message or putt",
    "Some data in messages which conform to the Text Messages Common Format might represent more than a singlee",
    "• a multi-packet message terminated with an End UMP (Format = 0x3)..",
    "Each message shall contain an individual syllable of a word (or a word if the word has only one syllable). Thee",
    "The Lyric Data message contains Lyrics as Unicode UTF-8 text..",
    "7.5.10 Lyric Data Messagee",
    "Recording\/Concert Date message shall also conform to ISO 8601 for the Date with an optional time..",
    "The Recording\/Concert Date message shall conform to the Text Messages Common Format. The data of thee",
    "Figure 78 Example Flex Data Text Messagess",
    "Following are two examples of the Copyright Notice message using this format..",
    "Figure 80 Lyric Language Message Formatt",
    "The Lyric Language message has a data field which is a BCP 47 language identifier..",
    "7.5.11 Lyric Language Messagee",
    "If the melisma is the end of a word, then another Lyric Data message with a Space character (0x20) shall followw",
    "previous Lyric Data message should continue to be sung..",
    "Figure 79 Lyric Data Message Formatt",
    "A Space character (0x20) at the end of the text shall indicate the end of a word. If a Lyric Data message does NOTT",
    "Data Message should be sent together. When placed in a MIDI Clip File, all parts of the Lyric Data Message shalll",
    "To best honor the design characteristics of Flex Data Messages and the rules in Section 7.5.2, all parts of a Lyricc",
    "If the melisma is the end of a word, then another Ruby Data message with a Space character (0x20) shall followw",
    "previous Ruby Data message should continue to be sung..",
    "Figure 81 Ruby Data Message Formatt",
    "Data Message should be sent together. When placed in a MIDI Clip File, all parts of the Ruby Data Message shalll",
    "To best honor the design characteristics of Flex Data Messages and the rules in Section 7.5.2, all parts of a Rubyy",
    "• a multi-packet message terminated with an End UMP (Form = 0x3)..",
    "Each message shall contain an individual syllable of a word (or a word if the word has only one syllable). Thee",
    "The Ruby Data message contains Ruby lyrics as Unicode UTF-8 text. The positioning of Ruby Data for display iss",
    "7.5.12 Ruby Data Messagee",
    "Language message needs to be sent per channel, before any Lyric Data messages are sent on thosee",
    "sequence, send a Lyric Language message preceding the language switch..",
    "declared language, until the next Lyric Language message is received at this address. If languages change during aa",
    "All Lyric messages that follow a Lyric Language message at the same address are to be interpreted as using thee",
    "sequence, send a Ruby Language message preceding the language switch..",
    "the declared language, until the next Ruby Language message is received at this address. If languages during aa",
    "All Ruby Data messages that follow a Ruby Language message at the same address are to be interpreted as usingg",
    "Figure 82 Ruby Language Message Formatt",
    "The Ruby Language message has a data field which is a BCP 47 language identifier,,",
    "7.5.13 Ruby Language Messagee",
    "Message Status MIDI 1.0 Byte 2 and 3 or Reservedd",
    "Table 17 Messages that use System Message General Formatt",
    "Table 6 indicates which System Common and System Real Time Messages use this UMP Format..",
    "Figure 83 System Message General Formatt",
    "0xF0 and 0xF7, which in Non-UMP MIDI 1.0 Systems are used with System Exclusive messages, are not used forr",
    "System Exclusive Messages are a unique type of System Message, and are specified in Section 7.7. Status valuess",
    "Messages shorter than 3 bytes in the MIDI 1.0 Protocol have unused bytes in the UMP. These unused bytes aree",
    "System Messages in the MIDI 1.0 Protocol are 1, 2, or 3 bytes long. The same messages in the UMP Format aree",
    "System Common and System Real Time messages contain the same data as the message definitions in the MIDII",
    "7.6 System Common and System Real Time Messagess",
    "1. A Complete System Exclusive Message in one UMPP",
    "Every System Exclusive Message shall be in one of two formats::",
    "A short System Exclusive message might fit into one UMP. Other System Exclusive messages might spann",
    "There might be multiple Continue UMPs in a single message..",
    "0x0 Complete System Exclusive Message in one UMPP",
    "Table 18 Status Field Values for System Exclusive (7-Bit) Messagess",
    "The 4-bit Status field determines the role of each UMP in a System Exclusive message::",
    "Figure 84 System Exclusive (7-Bit) Message Formatt",
    "System Exclusive Messages use Message Type 0x3..",
    "message equivalents..",
    "and can be translated directly to and from MIDI 1.0 Protocol System Exclusive Messages..",
    "UMP System Exclusive messages carry the same data payload as MIDI 1.0 Protocol System Exclusive messages,,",
    "7.7 System Exclusive (7-Bit) Messagess",
    "must select which Timing Clocks are sent on that output. This may come from Timing Clock messages receivedd",
    "Figure 85 System Exclusive 8 (8-Bit) Message Formatt",
    "identifier (MfrID, see Section 7.10) for System Exclusive 8 messages..",
    "The initial data bytes found in MIDI 1.0 Protocol System Exclusive messages are included in the bytes directlyy",
    "applications will continue to use traditional System Exclusive (7-bit) Messages (Section 7.7) for compatibilityy",
    "Note: System Exclusive 8 Messages cannot be translated to Non-UMP MIDI 1.0 Systems. Many MIDII",
    "A System Exclusive 8 Message is carried in one or more 128-bit UMPs with Message Type 0x5..",
    "messages, but with the added advantage of allowing all 8 bits of each data byte to be used. By contrast, MIDI 1.00",
    "System Exclusive 8 messages have many similarities to the MIDI 1.0 Protocol’s original System Exclusivee",
    "7.8 System Exclusive 8 (8-Bit) Messagess",
    "interspersed with System Exclusive Messages..",
    "Messages which are Groupless (MT = 0x0 and 0xF) and those which are sent to a different Group may bee",
    "UMP, then that UMP shall terminate the System Exclusive Message..",
    "Time Message, is sent after a System Exclusive Start UMP and before the associated System Exclusive Endd",
    "• If any Message or UMP on the same Group, other than a System Exclusive Continue UMP or a System Reall",
    "message, in order to maintain timing synchronization..",
    "• System Real Time Messages on the same Group may be inserted between the UMPs of a System Exclusivee",
    "System Exclusive Message, except for System Exclusive Continue UMPs, and System Real Time Messages..",
    "• The Sender shall not send any other Message or UMP on the same Group between the Start and End of thee",
    "MIDI 1.0 Protocol that govern interspersing other messages and termination of System Exclusive within a Group::",
    "Exclusive Messages in all MIDI protocols and all MIDI systems..",
    "A significant feature of UMP System Exclusive Messages is direct compatibility with MIDI 1.0 Protocol Systemm",
    "7.7.1 Limitations of Interspersing Other Messages with System Exclusive UMPss",
    "6 bytes does not signify a message end..",
    "messages merged from various sources, it shall first perform a Function Block Discovery message too",
    "Receiver does not support Function Block Discovery message to discover the Receiver’s support for moree",
    "• If a Sender wants to use more than one simultaneous stream, a Function Block Info Notification messagee",
    "Interleaving of multiple simultaneous System Exclusive 8 messages is enabled by use of an 8-bit Stream IDD",
    "than 14 bytes does not signify a message end..",
    "The special value 0xF is used in an End UMP to abort a System Exclusive 8 message (see Section 7.8.1)..",
    "1. A Complete System Exclusive 8 Message in one UMPP",
    "Every System Exclusive 8 Message shall be in one of two formats::",
    "A short System Exclusive 8 message might fit into one UMP. Other System Exclusive 8 messages span multiplee",
    "There might be multiple Continue UMPs in a single message..",
    "0x0 Complete System Exclusive 8 Message in one UMPP",
    "Table 19 Status Field Values for System Exclusive 8 (8-Bit) Messagess",
    "The 4-bit Status field determines the role of each UMP in a System Exclusive 8 message::",
    "Messagee",
    "Note: Total Mixed Data Set Message may be in multiple Chunkss",
    "Mixed Data Set Messages use Message Type 0x5..",
    "by MMA\/AMEI in the header. Devices can use Mixed Data Set messages to carry any proprietary data using thee",
    "Mixed Data Set messages can carry industry-standardized payloads using Universal System Exclusive IDs definedd",
    "Data Set Messages are only suitable for applications that use the UMP Format..",
    "Note: Mixed Data Set Messages cannot be translated to non-UMP MIDI 1.0 Systems. As a result, Mixedd",
    "Note: Small data sets should continue to use System Exclusive (7-Bit) Messages (Section 5.4) forr",
    "Mixed Data Set messages can carry any data payload, without the 7-bit restriction of the MIDI 1.0 Protocol. Thiss",
    "7.9 Mixed Data Set Messagee",
    "prohibitions against interspersing other message UMPs, as there are with the 7-bit System Exclusive Messagess",
    "Note: Since System Exclusive 8 Messages cannot be translated to Non-UMP MIDI 1.0 Systems, there are noo",
    "• 0xF if the previous data is an incomplete message, or if the resulting quality of previous data is unknown..",
    "• 0x1 if the Sender knows that the previous data in the SysEx8 message is valid. The value of 0x1 indicates thatt",
    "The end of the messages is reached when (Number of this Chunk = Number of Chunks in Mixed Data Set)..",
    "The Sender shall assign each Chunk of the message an incrementing Chunk count number, starting from 1..",
    "If Number of Valid Bytes in This Message Chunk is not an integer multiple of 16, then the Sender shall usee",
    "This Message Chunk field..",
    "Message Payload UMPs in this Chunk is calculated as required to deliver the full Number of Valid Bytes inn",
    "This field contains the size of this Mixed Data Set Message Chunk in bytes including the header. The number off",
    "Number of Valid Bytes in this Message Chunkk",
    "together. This also differentiates between up to 16 simultaneous Mixed Data Set messages within one Group..",
    "Each Mixed Data Set Message is assigned an MDS ID, included in every Chunk to clearly tie multiple partss",
    "Note: The total Mixed Data Set Message may require multiple Chunks..",
    "MMA\/AMEI might define other messages in the future which also use this format..",
    "The Manufacturer ID used in System Exclusive 8 and Mixed Data Set messages encodes the 7-bit and 21-bitt",
    "prohibitions against interspersing other message UMPs, as there are with the 7-bit System Exclusive Messagess",
    "Note: Mixed Data Set Messages cannot be translated to Non-UMP MIDI 1.0 Systems. Therefore, there are noo",
    "Sender should send one more Mixed Data Set Message Chunk with Number of Bytes in This Message Chunkk",
    "If the Sender runs out of payload data before sending a final Mixed Data Set Message Chunk as above, then thee",
    "• If the Sender does NOT know that the data already sent in this Mixed Data Set Message is valid, then for thiss",
    "declare a new value for the Number of Mixed Data Set Message Chunks in Mixed Data Set which matches thee",
    "• If the Sender knows that the data in this Mixed Data Set Message Chunk is valid, then this final Chunk shalll",
    "The following new Per-Note Controllers are NOT reset by the Reset All Controllers message::",
    "The MIDI 2.0 Protocol has newly defined controller types. The function of the Reset All Controllers messagee",
    "within a single Group. Functionality of Mode Messages received in one Group does not apply to Channels in anyy",
    "In UMP implementations, Channel Mode messages are defined the same as in the MIDI 1.0 Specification [MA01]]",
    "The MIDI 1.0 Specification [MA01] states: “These messages are recognized only when sent on the Basic Channell",
    "The UMP Format preserves the fundamental definition of these messages, with added clarifications forr",
    "MIDI has eight Channel Mode Messages. These are special purpose Control Change messages..",
    "B.1 Channel Mode Messages: Applicable Channelss",
    "Appendix B: Special Control Change Messagess",
    "Management message: Useful for multitouch devices that allow multiple simultaneous notes on the same pitch..",
    "• With Per-Note Management Message: Enables increased Per-Note expression capability..",
    "The Per-Note Messages of the MIDI 2.0 Protocol (Poly Aftertouch, MIDI 2.0 Per-Note Registered Controllers,,",
    "Appendix C: Using MIDI 2.0 Per-Note Messagess",
    "Figure 90 D and S Fields in MIDI 2.0 Per-Note Management Messagee",
    "Note B might optionally reset Per-Note Controller Values upon receiving the Per-Note Management message. Inn",
    "Note Management message..",
    "Following the Per-Note Management message, Per-Note controllers are used to set up the upcoming note or too",
    "Figure 89 Only the Note After the Per-Note Management Message has Per-Note Controll",
    "Management message to detach Per-Note Controllers from any current sounding Notes of the target Note Numberr",
    "message with Detach bit set before any new Note On message (see Figure 89). The Receiver uses the Per-Notee",
    "C.2 Using a MIDI 2.0 Per-Note Management Message Before Note On to Reallocatee",
    "Message for Independent Per-Note Expressionn",
    "independent expressive control over each note. The message sequence for two successive notes that both play aa",
    "Such devices can then use this pitch controller with Note Rotation and Per-Note Management messages to achievee",
    "Figure 92 MIDI 2.0 Registered Per-Note Controller Message with Controller #3 (Pitch 7.25))",
    "microtuning. Receivers shall also implement the Per-Note Management message..",
    "before sending every Note On message..",
    "from controllers previously addressed to that Note Number, the Sender sends Per-Note Management messagee",
    "In either case, a HCU field in the message sets a pitch as a Note Number of the same value might otherwise imply..",
    "The message sequence of two successive notes that play a Middle C might look like this::",
    "Figure 93 MIDI 2.0 Note On Message with Attribute #3 (Pitch 7.9))",
    "Note Controller #3: Pitch 7.25 (PNCC#3) as described above. Or such devices can use Note On messages withh",
    "or equivalent data as the original MIDI 1.0 Protocol message. Translating MIDI 2.0 Protocol messages to thee",
    "Protocol message to a MIDI 2.0 Protocol message and then back to the MIDI 1.0 Protocol should yield the samee",
    "resolutions when translating MIDI 1.0 Protocol messages to MIDI 2.0 Protocol messages and vice versa..",
    "This section explains how MIDI 1.0 Protocol messages are translated to MIDI 2.0 Protocol messages and vicee",
    "Appendix D: Translation: MIDI 1.0 and MIDI 2.0 Messagess",
    "translating to the MIDI 1.0 Protocol, each message generates a sequence of four MIDI 1.0 Protocol messages..",
    "Assignable Controllers and Registered Controllers are singular messages in the MIDI 2.0 Protocol. Whenn",
    "• If the value of the Bank Valid bit is 1, then translate to three MIDI 1.0 Protocol messages in the following order::",
    "Program Change message..",
    "Protocol they generate up to three messages::",
    "Program Change and Bank Select are one message in the MIDI 2.0 Protocol. When translating to the MIDI 1.00",
    "bytes from the whole message (often spanning multiple UMPs) are placed between a starting Status Byte of 0xF00",
    "When translating System Exclusive Messages from the MIDI 2.0 Protocol to the MIDI 1.0 Protocol, all the dataa",
    "Figure 100 Translate MIDI 2.0 System Message to MIDI 1.00",
    "D.2.6 System Messagess",
    "• Utility Messagess",
    "When not using the UMP Format, the following MIDI 2.0 Protocol messages shall not be used with MIDI 1.0::",
    "D.2.9 Messages That Cannot Be Translated to Non-UMP MIDI 1.0 Systemss",
    "these MIDI 2.0 Protocol Messages may be implemented using Alternate Translation Modes (see Section D.4)..",
    "As a result, the Default Translation does not address these MIDI 2.0 Protocol Messages. However, translations forr",
    "The following MIDI 2.0 Protocol messages have no equivalent messages in the MIDI 1.0 Protocol::",
    "D.2.8 Messages That Cannot Be Translated to MIDI 1.00",
    "MIDI 2.0 Protocol Note On and Note Off messages, the Attribute Type shall be set to 0x00 and the Attributee",
    "Attribute Type and Attribute Value: When MIDI 1.0 Protocol Note On and Note Off messages translate too",
    "translated to a MIDI 2.0 Protocol Note Off message with Velocity 0x8000. For Velocity values from 1-127, usee",
    "A MIDI 1.0 Protocol Note On message with a Velocity of 0x00 is special (i.e., is equal to Note Off), and shall bee",
    "message as follows::",
    "after receiving a CC 6. if any of the above triggers do not occur, to avoid loss of RPN.NRPN messages..",
    "• a CC 98, 99, 100, and 101 is received, indicating the last RPN\/NRPN message has ended and a new onee",
    "are properly formed RPN\/NRPN messages. The Default Translation shall hold the latest values for controllers CCC",
    "Control Change Messages for RPN\/NRPNN",
    "should not be translated to MIDI 2.0 Relative Registered Controller and Relative Assignable Controller Messages..",
    "messages in the MIDI 2.0 Protocol. They have no RPN\/NRPN related function in the MIDI 2.0 Protocol. Theyy",
    "MIDI 1.0 Protocol Increment (CC 96) and Decrement (CC 97) messages are translated to Control Changee",
    "MIDI 1.0 Increment and Decrement Messagee",
    "translated into one 32 bit value. These messages should remain as 2 independent messages..",
    "14 Bit Control Change Messages made up of a MSB (1-31) and an LSB (33-63) value should not be merged andd",
    "14 Bit Control Change Messagess",
    "value associated with the Program Change, then in the MIDI 2.0 Protocol message set the Bank Valid bit to 0 andd",
    "valid Bank Select values in the MIDI 2.0 Protocol Program Change message. If there is no current Bank Selectt",
    "When translating MIDI 1.0 Protocol Program Change Messages to the MIDI 2.0 Protocol, include the currentt",
    "MIDI 2.0 Protocol Program Change message with the Bank Valid bit set..",
    "of the MIDI 2.0 Protocol System Exclusive message. See example in Figure 111..",
    "When translating a System Exclusive Message from the MIDI 1.0 Protocol to the MIDI 2.0 Protocol, the startingg",
    "Figure 110 Translate MIDI 1.0 System Message to MIDI 2.00",
    "D.3.7 System Messagess",
    "For example, a MIDI 2.0 Protocol Device could receive a System Exclusive message that enables MPE mode, andd",
    "an indirect equivalent (perhaps via System Exclusive, a compound message, MPE, or some other mechanism) forr",
    "Some MIDI 2.0 Protocol messages or parameters that do not have a direct equivalent in the MIDI 1.0 Protocoll",
    "are only included in the table in case future MMA\/AMEI specifications define the use of short messages withoutt",
    "ID), which is true for all System Exclusive messages at the time of the drafting of this specification. These valuess",
    "* Some values for #bytes are not valid as long as messages are required to contain ID Number (Manufacturerr",
    "Message 1 2 3 4 5 6 7 88",
    "Table 24 UMPs for System Exclusive (7-Bit) Messagess",
    "E.1 Table of System Exclusive Message UMPss",
    "(8-Bit) Message Exampless",
    "Message 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 166",
    "Table 25 UMPs for System Exclusive 8 Messagess",
    "E.3 Table of System Exclusive 8 (8-Bit) Message UMPss",
    "Figure 114 MIDI 2.0 System Exclusive Message Example 33",
    "Figure 113 MIDI 2.0 System Exclusive Message Example 22",
    "Figure 112 MIDI 2.0 System Exclusive Message Example 11",
    "E.2 Complete System Exclusive Message Exampless",
    "** 0xF is not a valid size. This indicates that a System Exclusive 8 message is terminating unexpectedly with noo",
    "only included in the table in case future MMA\/AMEI specifications define the use of short messages without IDD",
    "ID), which is true for all System Exclusive 8 messages at the time of the drafting of this specification. They aree",
    "* Some values for #bytes are not valid as long as messages are required to contain ID Number (manufacturerr",
    "F.1.3 Message Type 0x2: MIDI 1.0 Channel Voice Messagess",
    "Message Byte 1 Byte 2 Byte 3 Byte 44",
    "Table 27 4-Byte UMP Formats for Message Type 0x1: System Common & System Real Timee",
    "F.1.2 Message Type 0x1: System Common & System Real Timee",
    "Message Byte 1 Byte 2 Byte 3 Byte 44",
    "Table 26 4-Byte UMP Formats for Message Type 0x0: Utilityy",
    "F.1.1 Message Type 0x0: Utilityy",
    "Message Byte 1 Byte 2 Byte 3 Byte 4 Byte 5 Byte 6 Byte 7 Byte 88",
    "Table 30 8-Byte UMP Formats for Message Type 0x4: MIDI 2.0 Channel Voice Messagess",
    "F.2.2 Message Type 0x4: MIDI 2.0 Channel Voice Messagess",
    "Messagee",
    "Table 29 8-Byte UMP Formats for Message Type 0x3: 8-Byte Data Messagess",
    "F.2.1 Message Type 0x3: 8-Byte Data Messagess",
    "Message Byte 1 Byte 2 Byte 3 Byte 44",
    "Table 28 4-Byte UMP Formats for Message Type 0x2: MIDI 1.0 Channel Voice Messagess",
    "F.3.1 Message Type 0xD: Flex Data Messagess",
    "Message Byte 1 Byte 2 Byte 3 Byte 4-166",
    "Table 31 16-Byte UMP Formats for Message Type 0x5::",
    "F.3.1 Message Type 0x5: 16-Byte Data Messages (System Exclusive 8 and Mixed Dataa",
    "Message MT Form Status Dataa",
    "UMP Stream Messagess",
    "Table 33 128 bit UMP Formats for Message Type 0xF::",
    "F.3.2 Message Type 0xF: UMP Stream Messagess",
    "Messagee--sssss",
    "Messageeunits Per Quarter Notee",
    "Message MT Grp Form Addr Ch. SB St Dataa",
    "Flex Data Messagess",
    "Table 32 128 bit UMP Formats for Message Type 0xD::",
    "Message Type MIDI MessageeByte 3 Byte 4 Byte 5 Byte 6 Byte 7 Byte 889-166",
    "Table 34 All Defined Message Formats (in 5 parts))",
    "Appendix G: All Defined Messagess",
    "Message Type MIDI MessageeByte 3 Byte 4 Byte 5 Byte 6 Byte 7 Byte 889-166",
    "Message Type MIDI MessageeByte 3 Byte 4 Byte 5 Byte 6 Byte 7 Byte 889-166",
    "Flex Data Text Message Commonn0xD 0xg 0-3 0xa 0xn 0x01-0x02 0xvv dataa",
    "Message Type MIDI Message Byte 1 Byte 2 Byte 33Byte 44Byte 5 Byte 6 Byte 7 Byte 8 Bytess",
    "Message Type MIDI MessageeByte 3 Byte 4 Byte 5 Byte 6 Byte 7 Byte 889-166",
    "UMP MIDI 2.0 CVMMAll Messagess",
    "UMP MIDI 1.0 CVMMAll Messagess",
    "Flex Data MessagessBased on AddresssBased on Address andd",
    "Messagess",
    "UMP SystemmAll Messagess",
    "Exclusive Messagess",
    "• MIDI Message Reportt",
    "Exclusive Messagessfield = 0x7F::Destination field ==0x00-0x0F::",
    "Utility Messagess• NOOPP",
    "(MT 0xF))Messagess",
    "Messagess",
    "UMP Streamm• UMP Endpoint Messagess",
    "Messagee",
    "• Utility Messages (MT=0x0) may only be received on Group 1..",
    "• UMP Stream Messages (MT=0xF) may not be received by the UMP Endpoint..",
    "MIDI 2 host drivers but at the same time allows the use of the new UMP 1.1 (stream) messages..",
    "Block Descriptor, select a Protocol descriptor that supports 128 bit messages..",
    "• New Message Type: Flex Data Messages – real time messages with limited variability of size..",
    "• Adds Per-Note Pitch Bend Messagee",
    "• Increases Resolution of Channel Pressure messages to 32 bitss",
    "• Program Change and Bank Select are combined into a single, unified messagee",
    "• RPN and NRPN are now unified messages, and as a result are easier to use plus their resolution has beenn",
    "• Increases Resolution of Control Change messages to 32 bitss",
    "• New Message: Per-Note Management Messagee",
    "• New Message: Assignable Per-Note Controllerss",
    "• New Message: Registered Per-Note Controllerss",
    "• Increases Resolution of Poly Pressure messages to 32 bitss",
    "• New Message Type: UMP Stream Messages – Messages sent to the whole UMP Endpoint..",
    "existing messages to include more properties..",
    "in the future by MMA\/AMEI. The Message Type field also allows future definition of longer versions off",
    "• The Message Type field allows future extensibility. Many opcodes are available for new messages to be definedd",
    "• Adds new Mixed Data Set Message for carrying large data setss",
    "• Adds new System Exclusive 8 Message without the 7-bit limitation of System Exclusivee",
    "• Adds a NOOP (no operation) messagee",
    "• Messages expanded to 32, 64, 96, or 128-bit message UMPss",
    "• 16 Groups. Each Group has a set of System Messages and 16 Channelss",
    "sequence of Universal MIDI Packet messages. This MIDI Clip File Specification has a complementaryy",
    "original MIDI 1.0 Protocol messages as well as all MIDI 2.0 Protocol messages. The MIDI Clip Filee",
    "Appendix B: MIDI Messages Useful for MIDI Clip Files. .................................................................... 222",
    "7.3 End of Clip Message ................................................................................................................... 200",
    "7.1.2 Set Time Signature Message ........................................................................................... 199",
    "7.1.1 Set Tempo Message ........................................................................................................ 199",
    "7.1 Start of Clip Message ................................................................................................................. 199",
    "6.3 Receiver Configuration by Other MIDI Messages ..................................................................... 188",
    "6.1.2 Set Time Signature Message in Clip Configuration Header ........................................... 177",
    "6.1.1 Set Tempo Message in Clip Configuration Header ........................................................ 177",
    "3.3 Messages Replace the Former \"Meta Events\" in SMF v1 .......................................................... 133",
    "messages that can be sent over MIDI transports. These new messages can be found in the Universal MIDI Packett",
    "MIDI 2.0 provides more space to define new messages, so these Meta Events have been replaced by new MIDII",
    "UMP Message Type..",
    "The MIDI Clip File also prompted the definition of many new MIDI messages in the UMP Format and a neww",
    "Universal MIDI Packet messages..",
    "as new MIDI messages in the Universal MIDI Packet Format. These new messages can be found in thee",
    "Standard MIDI File Type 0, with all data in a single sequence of Universal MIDI Packet messages..",
    "the newly defined MIDI 2.0 Protocol messages. The file format serves a role which is similar to thee",
    "format. The Universal MIDI Packet supports all the original MIDI 1.0 Protocol messages as well as alll",
    "Sender: A MIDI Device which transmits MIDI messages to a MIDI Transport which is connected to its MIDI Outt",
    "to recognize or act upon any specific MIDI messages that it receives in order to be defined as a Receiver..",
    "data structure that defines the semantics for MIDI messages. See [MA01] and [MA06]..",
    "minimum set of mandatory messages and features, along with some optional or recommended messages andd",
    "messages. A Profile is controlled by MIDI-CI Profile Negotiation Transactions. A Profile may have a definedd",
    "Profile: An MA\/AMEI specification that includes a set of MIDI messages and defined responses to thosee",
    "Device in MIDI-CI messages sent to or from that Device..",
    "MIDI 2.0 Protocol: Version 2.0 of the MIDI Protocol. The native format for MIDI 2.0 Protocol messages is UMPP",
    "MIDI 2.0 Protocol, MIDI 2.0 messages, and other extensions to MIDI as described in AMEI and MAA",
    "the MIDI 1.0 Protocol is a byte stream, but it has been adapted for many different transports. MIDI 1.0 messagess",
    "AMEI with numerous additional MIDI message definitions and Recommended Practices. The native format forr",
    "MIDI message) to one of 16 Groups. See the M2-104-UM Universal MIDI Packet (UMP) Format and MIDI 2.00",
    "Group: A field in the UMP Format addressing some UMP Format MIDI messages (and some UMPs comprising aa",
    "Device: An entity, whether hardware or software, which can send and\/or receive MIDI messages..",
    "all MIDI 1.0 Protocol messages and all MIDI 2.0 Protocol messages. UMP is intended to be universallyy",
    "UMP Message: A MIDI message in the Universal MIDI Packet Format, see [MA06]..",
    "UMP Format: Data format for fields and messages in the Universal MIDI Packet, see [MA06]..",
    "replies from a second MIDI Device. A Transaction may be a more complex set of message exchanges, started byy",
    "MIDI messages in a single Transaction are associated and work together to accomplish one function. The simplestt",
    "Transaction: An exchange of MIDI messages between two MIDI Devices with a bidirectional connection. All thee",
    "as new MIDI messages in the Universal MIDI Packet Format..",
    "Protocol Messages and all MIDI 2.0 Protocol Messages..",
    "The MIDI Clip File is a file format for MIDI data in a single sequence of Universal MIDI Packet messages..",
    "Delta Clockstamp in the file declares the ticks since the previous Null message..",
    "Clip File shall insert a Delta Clockstamp followed by a Null message to restart the delta time count. Then the nextt",
    "If no MIDI message has occurred during the previous 1,048,575 ticks, then the application which creates the MIDII",
    "The timing of every message (other than Delta Clockstamps) in a MIDI Clip File shall be set by the most recentt",
    "Clockstamp message..",
    "The Delta Clockstamp message declares the time of all following messages which occur before the next Deltaa",
    "A MIDI Clip File shall contain one DCTPQ message as the first message following the File Header and anyy",
    "messages in a MIDI Clip File..",
    "The Delta Clockstamp Ticks Per Quarter Note message declares the unit of measure used by Delta Clockstampp",
    "For detailed definitions of these two messages, see Universal MIDI Packet (UMP) Format and MIDI 2.0 Protocoll",
    "Two messages in the UMP format together form a mechanism for precise timing of events stored in a MIDI Clipp",
    "The UMP Format is a data format for MIDI 1.0 Protocol and MIDI 2.0 Protocol messages. The UMP Format iss",
    "Only the 8-byte File Header is not expressed as a UMP message. See Section 5..",
    "precedes every UMP to define the timing of each message..",
    "2.0 Protocol messages in a MIDI Clip File are expressed in the UMP Format. A Delta Clockstamp messagee",
    "The UMP Format is the data format for the payload of a MIDI Clip File. MIDI 1.0 Protocol messages and MIDII",
    "specification [MA06] defines many of those messages as Message Type D, Flex Data messages..",
    "MIDI messages in the UMP Format. The Universal MIDI Packet (UMP) Format and MIDI 2.0 Protocoll",
    "Events\". MIDI 2.0 has a lot more space to define new MIDI messages, so these events have been replaced by neww",
    "3.3 Messages Replace the Former \"Meta Events\" in SMF v11",
    "3. Clip Sequence Data – A set of MIDI Messages in Universal MIDI Packet Format, presented in the mainn",
    "Header, shall be the first byte in the first UMP message in the Clip Configuration Header. See Section 6..",
    "All data following the File Header are UMP messages. The ninth byte in the file, immediately following the Filee",
    "than one Set Time Signature message..",
    "The Clip Configuration Header shall not include more than one Set Tempo message and shall not include moree",
    "the first event following the Set Tempo message..",
    "If the Clip Configuration Header includes a Set Time Signature message, the Set Time Signature message shall bee",
    "of all Delta Clockstamp up to and including the Delta Clockstamp for the Start of Clip Message determines thee",
    "including optional Set Tempo (See Section 6.1.1) and Set Time Signature (See Section 6.1.2) messages in thee",
    "process Set Profile On messages is determined by the sequencer (see Section 6.2). Subsequent UMP messages inn",
    "A Receiver might require some time to process certain configuration related messages. The time required too",
    "Clockstamp (DCS) for the Start of Clip Message (See Section 7.1)..",
    "UMP messages in the Clip Configuration Header shall have a prepended Delta Clockstamp (DCS) (see Sectionn",
    "the Receiver might properly execute UMP messages contained in the MIDI Clip Sequence Data. All these otherr",
    "The Clip Configuration Header may contain other UMP messages as necessary to configure a Receiver such thatt",
    "Header if there are no Set Profile On messages. The DCTPQ shall have a preceding Delta Clockstamp (DCS) withh",
    "Section 3.2.1) immediately following any optional Set Profile On messages or immediately following the Filee",
    "A Clip Configuration Header shall have a Delta Clockstamp Ticks Per Quarter Note message (DCTPQ, seee",
    "Section 6.2), they shall be the first UMP messages in the Clip Configuration Header. Set Profile On messagess",
    "If the MIDI Clip File includes Set Profile On messages (to indicate target Profiles for the sequence data, seee",
    "All data in the Clip Configuration Header shall be UMP messages..",
    "3. Send a Set Profile On message to the MUID of the Receiverr",
    "Therefore, the sequencer should read the Set Profile On message out of the Clip Configuration Header andd",
    "If any sequence data is intended for a particular MIDI-CI Profile, a Set Profile On message should be included inn",
    "Sequence Data, Set Time Signature messages should only occur at the same timing as the beginning of a bar..",
    "The Clip Sequence Data (see Section 7) may contain multiple Set Time Signature messages. When in a Clipp",
    "The Clip Configuration Header shall not contain more than one Set Time Signature message..",
    "This Set Time Signature shall use the Delta Clockstamp which precedes the DCTPQ message or shall have aa",
    "A Clip Configuration Header may contain a Set Time Signature immediately following the Set Tempo message..",
    "6.1.2 Set Time Signature Message in Clip Configuration Headerr",
    "Set Tempo messages should only occur at the same timing where MIDI Clock messages would be located..",
    "The Clip Sequence Data (see Section 7) may contain multiple Set Tempo messages. When in Clip Sequence Data,,",
    "The Clip Configuration Header shall not contain more than one Set Tempo message..",
    "precedes the DCTPQ message or shall have a preceding Delta Clockstamp with Number of Ticks Since Lastt",
    "message. This Set Tempo message in the Clip Configuration Header shall use the Delta Clockstamp whichh",
    "The Clip Configuration Header may contain a Set Tempo message as the first event following the DCTPQQ",
    "6.1.1 Set Tempo Message in Clip Configuration Headerr",
    "Program Change, Control Changes to set Volume and Pan, Profile specific messages, and System Exclusive..",
    "The Clip Configuration Header may contain other MIDI messages in UMP Format to prepare the Receiver too",
    "6.3 Receiver Configuration by Other MIDI Messagess",
    "Any subsequent Set Time Signature messages in the Clip Sequence Data should only occur at the time when onee",
    "should use the Delta Clockstamp which precedes the Start of Clip message..",
    "following the Start of Clip and Set Tempo messages. This first Time Signature message in the Clip Sequence Dataa",
    "A MIDI Clip File should contain a Set Time Signature message for the first bar of the sequence, immediatelyy",
    "7.1.2 Set Time Signature Messagee",
    "the start of the first bar of music. Any subsequent Set Tempo messages in the Clip Sequence Data should onlyy",
    "If the Clip Sequence Data is used for musical content, then the timing of the first Set Tempo message should bee",
    "as the value in the Delta Clockstamp which precedes the Start of Clip Message..",
    "Clockstamp which precedes the Start of Clip message or have its own Delta Clockstamp which has the same valuee",
    "the Start of Clip message. This first Set Tempo message in the Clip Sequence Data should use the Deltaa",
    "The Clip Sequence Data should contain a Set Tempo message at the start of the sequence, immediately followingg",
    "7.1.1 Set Tempo Messagee",
    "(DCS). If the Clip Sequence Data is used for musical content, then the timing of the Start of Clip message shouldd",
    "The first event in the Clip Sequence Data shall be a Start of Clip message with a preceding Delta Clockstampp",
    "7.1 Start of Clip Messagee",
    "A Clip Sequence Data shall include one End of Clip message as the last UMP message (See Section 7.3) with aa",
    "Clockstamp as the first UMP message..",
    "A Clip Sequence Data shall include one Start of Clip message (see Section 7.1) with a preceding Deltaa",
    "All data in the Clip Sequence Data shall be UMP messages with associated Delta Clockstamps..",
    "MIDI Clip File shall not have any data following the End of Clip message..",
    "The last event in the Clip Sequence Data shall be an End of Clip message with a preceding Delta Clockstamp. AA",
    "7.3 End of Clip Messagee",
    "However, MIDI messages which are part of a bi-directional negotiation, such as MIDI-CI messages, might not bee",
    "The Clip Sequence Data may contain any MIDI messages in UMP Format, except Property Exchange messages..",
    "The subsequent bar should start with a new Set Time Signature message..",
    "have a Set Time Signature message which accurately reflects the length of the pickup before the subsequent bar..",
    "These messages are defined in the Universal MIDI Packet (UMP) Format and MIDI 2.0 Protocol [MA06]]",
    "Following are some MIDI messages from the UMP & MIDI 2.0 Protocol Specification [MA06] which aree",
    "Appendix B: MIDI Messages Useful for MIDI Clip Files.."
  ],
  "ranges" : [
    "• Define method for Getting and Setting a wide range of Device properties..",
    "Devices could work on a wide range of systems such as desktop operating systems, mobile devices, and webb",
    "6. Define method for Discovering, Getting, and Setting a wide range of Device Properties..",
    "• The Note Range supported by the Responder for the Profile..",
    "The value of the MUID shall be in the range 0x00000000 to 0x0FFFFFFF..",
    "*Note: Sub-ID#2 Range 0x10-0x1F was defined for Protocol Negotiation in previous versions of MIDI-CI [MA03]..",
    "Category Sub-ID#2 Range Descriptionn",
    "field value which is within the range of the Function Block. When a Receiver receives a message with MIDI-CII",
    "Rangee",
    "Product Instance Id shall be ASCII Text in the ordinal range 32-126..",
    "• Use the low bits of a high frequency timer (megahertz range), e.g., CPU clock cycles..",
    "Some Feature Profiles define features and MIDI implementation requirements that apply across a wide range off",
    "Property Exchange is a set of MIDI-CI messages used to access a wide range of properties in MIDI devices. Thee",
    "The core functions of Property Exchange are Getting and Setting a wide range of properties or values of propertiess",
    "\"family\": \"Example Range\",,",
    "\"family\": \"Example Range\",,",
    "\"family\":\"Example Range\",,",
    "\"family\": \"Test Range\",,",
    "may be used on the Device. Many of those Properties define a default value within the range of allowed Propertyy",
    "7.4.13.4 Implementing a Unique Per-Note Range Amount for Each Note Number ....... 588",
    "7.4.13.3 Supported Range ............................................................................................... 588",
    "Product Instance Id shall be ASCII Text in the ordinal range 32-126. The Product Instance Id may be containedd",
    "a value in the range of 0 (0x00) to 31 (0x1F)..",
    "This declares the number (NFB) of the Function Block this reply is describing. The value is in the range of 00",
    "The count of Groups for members of the Function Block. The value is in the range of 1 (0x01) to 16 (0x10)..",
    "The allowable Velocity range for a MIDI 2.0 Note On message is 0x0000-0xFFFF. Unlike the MIDI 1.0 Notee",
    "There are several Control Change Messages that do not describe a range and instead declare a value..",
    "bit Velocity value has a higher range than the MIDI 1.0 High Resolution Velocity controller and Note Onn",
    "Pitch Bend Range message see the MIDI 1.0 Specification [MA01]..",
    "Pitch Bend Range uses the RPN value to set the pitch sensitivity in HCUs and cents. For fundamental functionss",
    "RPN 0x0000 – Pitch Bend Rangee",
    "There are several RPN's that do not describe a range and instead declare one or more values..",
    "of integer precision, subject to the supported range (see Section 7.4.13.3)..",
    "Bend value from 0x80000000 to 0x00000000) and an equal range of pitch bend up (Per-Note Pitch Bend valuee",
    "Registered Controller for Sensitivity of Per-Note Pitch Bend sets the range of pitch bend down (Per-Note Pitchh",
    "which follow this message should respond to Per-Note Pitch Bend messages within the pitch range set by thee",
    "The Registered Controller for Sensitivity of Per-Note Pitch Bend #00\/07 sets the controllable pitch range (up andd",
    "controllable by subsequent Per-Note Pitch Bend messages. The selected amount of controllable pitch bend rangee",
    "range of the total available values..",
    "messages with only a subset of the values from the whole range of available values. The 32 bit value of Per--",
    "required by the Note Number with the widest Pitch Bend range requirement..",
    "7.4.13.4 Implementing a Unique Per-Note Range Amount for Each Note Numberr",
    "more than needed or supportable by many Devices. Devices may support a subset of the whole range of sensitivityy",
    "The Registered Controller for Sensitivity of Per-Note Pitch Bend provides up to almost +\/- 12800 Cents of range,,",
    "7.4.13.3 Supported Rangee",
    "The Flex Data Messages Type has a large index of status values for a wide range of applications. Some of thee",
    "0x01 0x07 Arranger Namee",
    "across a wide range of MIDI devices. System Exclusive 8 is suitable for applications that only apply to devicess",
    "compatibility across a wide range of MIDI devices, or use System Exclusive 8 (8-Bit) Messages (Sectionn",
    "survives data scaling (as long as the number of sections does not exceed the data range)..",
    "Default translation of data values shall always scale the value to the full range. For example, this ensures thatt",
    "• Use an expanded bit-repeat scheme for the range from center to maximum. This causes the values to smoothlyy",
    "• When upscaling, smoothly distribute low resolution values on the range of the high resolution..",
    "The allowable Velocity range for a MIDI 2.0 Note On message is 0x0000-0xFFFF. However, depending on thee",
    "more MIDI Clip Files, arranged in one or more tracks..",
    "MIDI Packet data format by containing one or more MIDI Clip Files, arranged in one or more tracks. Thiss",
    "Packet data format by containing one or more MIDI Clip Files, arranged in one or more tracks. Thee",
    "• Arranger Namee"
  ]
}