//
// StemmingAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class StemmingAPI {

    /**
     Retrieve a stemming dictionary
     
     - parameter dictionaryId: (path) The ID of the dictionary to retrieve 
     - parameter apiConfiguration: The configuration for the http request.
     - returns: StemmingDictionary
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getStemmingDictionary(dictionaryId: String, apiConfiguration: TypesenseClientAPIConfiguration = TypesenseClientAPIConfiguration.shared) async throws(ErrorResponse) -> StemmingDictionary {
        return try await getStemmingDictionaryWithRequestBuilder(dictionaryId: dictionaryId, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Retrieve a stemming dictionary
     - GET /stemming/dictionaries/{dictionaryId}
     - Fetch details of a specific stemming dictionary.
     - API Key:
       - type: apiKey X-TYPESENSE-API-KEY (HEADER)
       - name: api_key_header
     - parameter dictionaryId: (path) The ID of the dictionary to retrieve 
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<StemmingDictionary> 
     */
    open class func getStemmingDictionaryWithRequestBuilder(dictionaryId: String, apiConfiguration: TypesenseClientAPIConfiguration = TypesenseClientAPIConfiguration.shared) -> RequestBuilder<StemmingDictionary> {
        var localVariablePath = "/stemming/dictionaries/{dictionaryId}"
        let dictionaryIdPreEscape = "\(APIHelper.mapValueToPathItem(dictionaryId))"
        let dictionaryIdPostEscape = dictionaryIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{dictionaryId}", with: dictionaryIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StemmingDictionary>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**
     Import a stemming dictionary
     
     - parameter id: (query) The ID to assign to the dictionary 
     - parameter body: (body) The JSONL file containing word mappings 
     - parameter apiConfiguration: The configuration for the http request.
     - returns: String
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func importStemmingDictionary(id: String, body: String, apiConfiguration: TypesenseClientAPIConfiguration = TypesenseClientAPIConfiguration.shared) async throws(ErrorResponse) -> String {
        return try await importStemmingDictionaryWithRequestBuilder(id: id, body: body, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     Import a stemming dictionary
     - POST /stemming/dictionaries/import
     - Upload a JSONL file containing word mappings to create or update a stemming dictionary.
     - API Key:
       - type: apiKey X-TYPESENSE-API-KEY (HEADER)
       - name: api_key_header
     - parameter id: (query) The ID to assign to the dictionary 
     - parameter body: (body) The JSONL file containing word mappings 
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<String> 
     */
    open class func importStemmingDictionaryWithRequestBuilder(id: String, body: String, apiConfiguration: TypesenseClientAPIConfiguration = TypesenseClientAPIConfiguration.shared) -> RequestBuilder<String> {
        let localVariablePath = "/stemming/dictionaries/import"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body, codableHelper: apiConfiguration.codableHelper)

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "id": (wrappedValue: id.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<String>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }

    /**
     List all stemming dictionaries
     
     - parameter apiConfiguration: The configuration for the http request.
     - returns: ListStemmingDictionaries200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func listStemmingDictionaries(apiConfiguration: TypesenseClientAPIConfiguration = TypesenseClientAPIConfiguration.shared) async throws(ErrorResponse) -> ListStemmingDictionaries200Response {
        return try await listStemmingDictionariesWithRequestBuilder(apiConfiguration: apiConfiguration).execute().body
    }

    /**
     List all stemming dictionaries
     - GET /stemming/dictionaries
     - Retrieve a list of all available stemming dictionaries.
     - API Key:
       - type: apiKey X-TYPESENSE-API-KEY (HEADER)
       - name: api_key_header
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<ListStemmingDictionaries200Response> 
     */
    open class func listStemmingDictionariesWithRequestBuilder(apiConfiguration: TypesenseClientAPIConfiguration = TypesenseClientAPIConfiguration.shared) -> RequestBuilder<ListStemmingDictionaries200Response> {
        let localVariablePath = "/stemming/dictionaries"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ListStemmingDictionaries200Response>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true, apiConfiguration: apiConfiguration)
    }
}
