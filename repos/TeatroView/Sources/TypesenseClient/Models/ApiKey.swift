//
// ApiKey.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ApiKey: Sendable, Codable, ParameterConvertible, Hashable {

    public var value: String?
    public var description: String
    public var actions: [String]
    public var collections: [String]
    public var expiresAt: Int64?
    public var id: Int64?
    public var valuePrefix: String?

    public init(value: String? = nil, description: String, actions: [String], collections: [String], expiresAt: Int64? = nil, id: Int64? = nil, valuePrefix: String? = nil) {
        self.value = value
        self.description = description
        self.actions = actions
        self.collections = collections
        self.expiresAt = expiresAt
        self.id = id
        self.valuePrefix = valuePrefix
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case value
        case description
        case actions
        case collections
        case expiresAt = "expires_at"
        case id
        case valuePrefix = "value_prefix"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(value, forKey: .value)
        try container.encode(description, forKey: .description)
        try container.encode(actions, forKey: .actions)
        try container.encode(collections, forKey: .collections)
        try container.encodeIfPresent(expiresAt, forKey: .expiresAt)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(valuePrefix, forKey: .valuePrefix)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ApiKey: Identifiable {}
