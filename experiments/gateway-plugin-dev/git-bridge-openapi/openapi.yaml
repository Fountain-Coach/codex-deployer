openapi: 3.0.3
info:
  title: Git Bridge API
  version: 1.0.0
  description: |
    REST wrapper over Git functionalities. Exposes core client/server
    commands such as repository management, commit handling, branching,
    pushing/pulling, diff, and tag operations.
servers:
  - url: https://api.example.com/git
    description: Main API server
tags:
  - name: Repositories
  - name: Files
  - name: Commits
  - name: Branches
  - name: Tags
  - name: Remote operations
paths:
  /repos:
    get:
      tags: [Repositories]
      summary: List repositories
      responses:
        "200":
          description: Array of repositories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Repository'
    post:
      tags: [Repositories]
      summary: Create new repository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                bare:
                  type: boolean
                  default: false
      responses:
        "201":
          description: Repository created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'

  /repos/{repo}:
    parameters:
      - $ref: '#/components/parameters/repo'
    get:
      tags: [Repositories]
      summary: Get repository info
      responses:
        "200":
          description: Repository info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
    delete:
      tags: [Repositories]
      summary: Delete repository
      responses:
        "204":
          description: Repository deleted

  /repos/{repo}/clone:
    parameters:
      - $ref: '#/components/parameters/repo'
    post:
      tags: [Repositories]
      summary: Clone remote repository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [remote_url]
              properties:
                remote_url:
                  type: string
      responses:
        "202":
          description: Clone started

  /repos/{repo}/status:
    parameters:
      - $ref: '#/components/parameters/repo'
    get:
      tags: [Repositories]
      summary: Repository status
      responses:
        "200":
          description: Status information
          content:
            application/json:
              schema:
                type: object
                properties:
                  branch:
                    type: string
                  ahead:
                    type: integer
                  behind:
                    type: integer
                  changes:
                    type: array
                    items:
                      $ref: '#/components/schemas/FileChange'

  /repos/{repo}/files/{path}:
    parameters:
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/path'
    get:
      tags: [Files]
      summary: Retrieve file contents
      responses:
        "200":
          description: File contents
          content:
            text/plain:
              schema:
                type: string
    put:
      tags: [Files]
      summary: Create or update a file
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        "200":
          description: File written
    delete:
      tags: [Files]
      summary: Delete file
      responses:
        "204":
          description: File deleted

  /repos/{repo}/commits:
    parameters:
      - $ref: '#/components/parameters/repo'
    get:
      tags: [Commits]
      summary: List commits
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: List of commits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Commit'
    post:
      tags: [Commits]
      summary: Commit changes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [message, files]
              properties:
                message:
                  type: string
                author_name:
                  type: string
                author_email:
                  type: string
                files:
                  type: array
                  items:
                    $ref: '#/components/schemas/FileChange'
      responses:
        "200":
          description: Commit created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commit'

  /repos/{repo}/commits/{sha}:
    parameters:
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/sha'
    get:
      tags: [Commits]
      summary: Get commit details
      responses:
        "200":
          description: Commit details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commit'

  /repos/{repo}/branches:
    parameters:
      - $ref: '#/components/parameters/repo'
    get:
      tags: [Branches]
      summary: List branches
      responses:
        "200":
          description: List of branches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Branch'
    post:
      tags: [Branches]
      summary: Create branch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, from]
              properties:
                name:
                  type: string
                from:
                  type: string
      responses:
        "201":
          description: Branch created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'

  /repos/{repo}/branches/{branch}:
    parameters:
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
    get:
      tags: [Branches]
      summary: Get branch details
      responses:
        "200":
          description: Branch details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
    delete:
      tags: [Branches]
      summary: Delete branch
      responses:
        "204":
          description: Branch deleted

  /repos/{repo}/branches/{branch}/checkout:
    parameters:
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
    post:
      tags: [Branches]
      summary: Checkout branch
      responses:
        "200":
          description: Branch checked out

  /repos/{repo}/branches/{branch}/merge:
    parameters:
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
    post:
      tags: [Branches]
      summary: Merge branch into current HEAD
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [from]
              properties:
                from:
                  type: string
                message:
                  type: string
      responses:
        "200":
          description: Merge result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  conflicts:
                    type: array
                    items:
                      $ref: '#/components/schemas/FileChange'

  /repos/{repo}/tags:
    parameters:
      - $ref: '#/components/parameters/repo'
    get:
      tags: [Tags]
      summary: List tags
      responses:
        "200":
          description: Array of tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
    post:
      tags: [Tags]
      summary: Create tag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, target]
              properties:
                name:
                  type: string
                target:
                  type: string
                message:
                  type: string
      responses:
        "201":
          description: Tag created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'

  /repos/{repo}/tags/{tag}:
    parameters:
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/tag'
    delete:
      tags: [Tags]
      summary: Delete tag
      responses:
        "204":
          description: Tag deleted

  /repos/{repo}/pull:
    parameters:
      - $ref: '#/components/parameters/repo'
    post:
      tags: [Remote operations]
      summary: Pull from remote
      responses:
        "200":
          description: Pull completed

  /repos/{repo}/push:
    parameters:
      - $ref: '#/components/parameters/repo'
    post:
      tags: [Remote operations]
      summary: Push to remote
      responses:
        "200":
          description: Push completed

  /repos/{repo}/remote:
    parameters:
      - $ref: '#/components/parameters/repo'
    get:
      tags: [Remote operations]
      summary: List configured remotes
      responses:
        "200":
          description: Array of remotes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Remote'
    post:
      tags: [Remote operations]
      summary: Add remote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, url]
              properties:
                name:
                  type: string
                url:
                  type: string
      responses:
        "201":
          description: Remote added

  /repos/{repo}/remote/{remote}:
    parameters:
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/remote'
    delete:
      tags: [Remote operations]
      summary: Remove remote
      responses:
        "204":
          description: Remote removed

  /repos/{repo}/diff:
    parameters:
      - $ref: '#/components/parameters/repo'
    get:
      tags: [Repositories]
      summary: Show diff of working tree
      parameters:
        - name: from
          in: query
          schema:
            type: string
        - name: to
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Diff result
          content:
            text/plain:
              schema:
                type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  parameters:
    repo:
      name: repo
      in: path
      required: true
      schema:
        type: string
    path:
      name: path
      in: path
      required: true
      schema:
        type: string
        description: File path relative to repository root
    sha:
      name: sha
      in: path
      required: true
      schema:
        type: string
    branch:
      name: branch
      in: path
      required: true
      schema:
        type: string
    tag:
      name: tag
      in: path
      required: true
      schema:
        type: string
    remote:
      name: remote
      in: path
      required: true
      schema:
        type: string

  schemas:
    Repository:
      type: object
      properties:
        name:
          type: string
        bare:
          type: boolean
        default_branch:
          type: string
        created_at:
          type: string
          format: date-time

    FileChange:
      type: object
      properties:
        path:
          type: string
        status:
          type: string
          enum: [added, modified, deleted]
        content:
          type: string
          description: |
            Required for added/modified files when committing or merging

    Commit:
      type: object
      properties:
        sha:
          type: string
        message:
          type: string
        author:
          type: string
        email:
          type: string
        date:
          type: string
          format: date-time
        parents:
          type: array
          items:
            type: string

    Branch:
      type: object
      properties:
        name:
          type: string
        commit:
          type: string

    Tag:
      type: object
      properties:
        name:
          type: string
        target:
          type: string
        message:
          type: string

    Remote:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
