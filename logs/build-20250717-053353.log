[2025-07-17T05:33:53.835282] === New Cycle ===
Building for debugging...
[0/14] Write swift-version-24593BA9C3E375BF.txt
[2/28] Emitting module PlannerServer
[3/28] Compiling PlannerServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/planner/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
   |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[4/28] Compiling LLMGatewayServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/llm-gateway/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
   |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 

[2025-07-17T05:33:53.836442] Starting swift build...
[2025-07-17T05:33:55.128649] swift build failed with exit code 1
[2025-07-17T05:33:55.209553] [dispatcher] Updated git remote to use token-based authentication.
[2025-07-17T05:33:57.663585] [dispatcher] Running Docker build...
[2025-07-17T05:33:57.664928] [dispatcher] Running tests...
Compose now can delegate build to bake for better performances
Just set COMPOSE_BAKE=true
#0 building with "default" instance using docker driver

#1 [llm-gateway internal] load build definition from Dockerfile
#1 transferring dockerfile: 278B done
#1 DONE 0.0s

#2 [baseline-awareness internal] load build definition from Dockerfile
#2 transferring dockerfile: 299B done
#2 DONE 0.0s

#3 [tools-factory internal] load build definition from Dockerfile
#3 transferring dockerfile: 284B done
#3 DONE 0.0s

#4 [function-caller internal] load build definition from Dockerfile
#4 transferring dockerfile: 290B done
#4 DONE 0.0s

#5 [bootstrap internal] load build definition from Dockerfile
#5 transferring dockerfile: 272B done
#5 DONE 0.0s

#6 [persist internal] load build definition from Dockerfile
#6 transferring dockerfile: 266B done
#6 DONE 0.0s

#7 [planner internal] load build definition from Dockerfile
#7 transferring dockerfile: 266B done
#7 DONE 0.0s

#8 [persist internal] load metadata for docker.io/library/swift:6.1-jammy
#8 DONE 0.5s

#9 [persist internal] load metadata for docker.io/library/ubuntu:22.04
#9 DONE 0.9s

#10 [function-caller internal] load .dockerignore
#10 transferring context: 2B done
#10 DONE 0.0s

#11 [llm-gateway internal] load .dockerignore
#11 transferring context: 2B done
#11 DONE 0.0s

#12 [persist internal] load .dockerignore
#12 transferring context: 2B done
#12 DONE 0.0s

#13 [baseline-awareness internal] load .dockerignore
#13 transferring context: 2B done
#13 DONE 0.0s

#14 [planner build 1/4] FROM docker.io/library/swift:6.1-jammy@sha256:512716edb447938962d96627ff0b9f00d5701bfa61d97a5b5654f07a1482c342
#14 DONE 0.0s

#15 [planner stage-1 1/2] FROM docker.io/library/ubuntu:22.04@sha256:59ccd419c0dc0edf9e3bff1a3b2b073ea15a2ce4bc45ce7c989278b225b09af3
#15 DONE 0.0s

#16 [bootstrap internal] load .dockerignore
#16 transferring context: 2B done
#16 DONE 0.0s

#17 [tools-factory internal] load .dockerignore
#17 transferring context: 2B done
#17 DONE 0.0s

#18 [planner internal] load .dockerignore
#18 transferring context: 2B done
#18 DONE 0.0s

#19 [tools-factory internal] load build context
#19 transferring context: 6.87MB 5.1s
#19 ...

#20 [llm-gateway internal] load build context
#20 ...

#19 [tools-factory internal] load build context
#19 transferring context: 7.51MB 8.1s done
#19 ...

#21 [function-caller internal] load build context
#21 transferring context: 7.51MB 7.8s done
#21 DONE 8.3s

#22 [persist internal] load build context
#22 transferring context: 7.51MB 8.0s done
#22 DONE 8.3s

#23 [planner internal] load build context
#23 transferring context: 7.51MB 7.9s done
#23 DONE 8.3s

#19 [tools-factory internal] load build context
#19 DONE 8.3s

#24 [bootstrap internal] load build context
#24 transferring context: 7.51MB 8.1s done
#24 DONE 8.3s

#25 [baseline-awareness internal] load build context
#25 transferring context: 7.51MB 8.0s done
#25 DONE 8.3s

#20 [llm-gateway internal] load build context
#20 transferring context: 7.51MB 8.1s done
#20 DONE 8.3s

#26 [llm-gateway build 2/4] WORKDIR /src
#26 CACHED

#27 [function-caller build 3/4] COPY . .
#27 DONE 9.7s

#28 [persist build 3/4] COPY . .
#28 CACHED

#29 [bootstrap build 3/4] COPY . .
#29 CACHED

#30 [baseline-awareness build 3/4] COPY . .
#30 CACHED

#31 [tools-factory build 3/4] COPY . .
#31 CACHED

#32 [planner build 3/4] COPY . .
#32 CACHED

#33 [llm-gateway build 3/4] COPY . .
#33 CACHED

#34 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#34 ...

#35 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#35 ...

#36 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#36 ...

#37 [persist build 4/4] RUN swift build -c release --product persist-server
#37 ...

#38 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#38 ...

#39 [planner build 4/4] RUN swift build -c release --product planner-server
#39 ...

#40 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#40 ...

#34 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#34 17.80 Building for production...
#34 17.85 [0/6] Write sources
#34 18.14 [3/6] Write swift-version-24593BA9C3E375BF.txt
#34 ...

#36 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#36 17.91 Building for production...
#36 17.96 [0/14] Write sources
#36 18.31 [5/14] Compiling writer.c
#36 18.36 [6/14] Compiling reader.c
#36 18.40 [7/14] Write swift-version-24593BA9C3E375BF.txt
#36 18.47 [8/14] Compiling parser.c
#36 18.56 [9/15] Compiling api.c
#36 19.11 [10/15] Compiling emitter.c
#36 19.31 [11/15] Compiling scanner.c
#36 24.90 [13/16] Compiling ServiceShared Models.swift
#36 ...

#34 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#34 24.82 [5/7] Compiling ServiceShared Models.swift
#34 26.27 [6/8] Compiling LLMGatewayService HTTPKernel.swift
#34 26.66 [7/9] Compiling LLMGatewayServer main.swift
#34 26.66 /src/Generated/Server/llm-gateway/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#34 26.66 21 | 
#34 26.66 22 |     func start() throws {
#34 26.66 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
#34 26.66    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#34 26.66 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
#34 26.66 25 |         var opt: Int32 = 1
#34 26.66 
#34 26.66 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
#34 26.66 1 | protocol FixedWidthInteger {
#34 26.66 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
#34 26.66   |                   `- note: where 'T' = '__socket_type'
#34 26.66 3 | 
#34 ERROR: process "/bin/sh -c swift build -c release --product llm-gateway-server" did not complete successfully: exit code: 1

#38 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#38 17.85 Building for production...
#38 17.88 [0/14] Write sources
#38 18.33 [5/14] Compiling writer.c
#38 18.37 [6/14] Compiling reader.c
#38 18.56 [7/14] Compiling api.c
#38 18.68 [8/14] Compiling parser.c
#38 19.03 [9/14] Compiling emitter.c
#38 19.32 [10/14] Write swift-version-24593BA9C3E375BF.txt
#38 19.32 [11/14] Compiling scanner.c
#38 25.22 [13/16] Compiling ServiceShared Models.swift
#38 ...

#37 [persist build 4/4] RUN swift build -c release --product persist-server
#37 18.19 Building for production...
#37 18.22 [0/6] Write sources
#37 18.51 [3/6] Write swift-version-24593BA9C3E375BF.txt
#37 24.84 [5/7] Compiling ServiceShared Models.swift
#37 26.50 [6/8] Compiling PersistService HTTPKernel.swift
#37 27.05 [7/9] Compiling PersistServer main.swift
#37 27.05 /src/Generated/Server/persist/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#37 27.05 21 | 
#37 27.05 22 |     func start() throws {
#37 27.05 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
#37 27.05    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#37 27.05 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
#37 27.05 25 |         var opt: Int32 = 1
#37 27.05 
#37 27.05 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
#37 27.05 1 | protocol FixedWidthInteger {
#37 27.05 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
#37 27.05   |                   `- note: where 'T' = '__socket_type'
#37 27.05 3 | 
#37 ERROR: process "/bin/sh -c swift build -c release --product persist-server" did not complete successfully: exit code: 1

#40 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#40 18.25 Building for production...
#40 18.31 [0/6] Write sources
#40 18.57 [3/6] Write swift-version-24593BA9C3E375BF.txt
#40 24.82 [5/7] Compiling ServiceShared Models.swift
#40 27.17 [6/8] Compiling BaselineAwarenessService BaselineStore.swift
#40 CANCELED

#35 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#35 18.06 Building for production...
#35 18.12 [0/7] Write sources
#35 18.38 [4/7] Write swift-version-24593BA9C3E375BF.txt
#35 24.82 [6/8] Compiling ServiceShared Models.swift
#35 27.02 [7/9] Compiling BaselineAwarenessService BaselineStore.swift
#35 CANCELED

#39 [planner build 4/4] RUN swift build -c release --product planner-server
#39 17.99 Building for production...
#39 18.03 [0/6] Write sources
#39 18.24 [3/6] Write swift-version-24593BA9C3E375BF.txt
#39 24.82 [5/7] Compiling ServiceShared Models.swift
#39 27.14 [6/8] Compiling PlannerService HTTPKernel.swift
#39 CANCELED

#36 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#36 CANCELED

#38 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#38 CANCELED
------
 > [persist build 4/4] RUN swift build -c release --product persist-server:
27.05 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
27.05    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
27.05 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
27.05 25 |         var opt: Int32 = 1
27.05 
27.05 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
27.05 1 | protocol FixedWidthInteger {
27.05 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
27.05   |                   `- note: where 'T' = '__socket_type'
27.05 3 | 
------
------
 > [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server:
26.66 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
26.66    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
26.66 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
26.66 25 |         var opt: Int32 = 1
26.66 
26.66 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
26.66 1 | protocol FixedWidthInteger {
26.66 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
26.66   |                   `- note: where 'T' = '__socket_type'
26.66 3 | 
------
failed to solve: process "/bin/sh -c swift build -c release --product llm-gateway-server" did not complete successfully: exit code: 1
 Network kong-codex_default  Creating
 Network kong-codex_default  Created
 Container kong-codex-typesense-1  Creating
 Container kong-codex-kong-1  Creating
 Container kong-codex-typesense-1  Created
 Container kong-codex-kong-1  Created
Attaching to kong-1, typesense-1
Gracefully stopping... (press Ctrl+C again to force)
Error response from daemon: mounts denied: 
The path /srv/deploy/repos/kong-codex/kong.conf is not shared from the host and is not known to Docker.
You can configure shared paths from Docker -> Preferences... -> Resources -> File Sharing.
See https://docs.docker.com/desktop/settings/mac/#file-sharing for more info.
 Container kong-codex-kong-1  Stopping
 Container kong-codex-typesense-1  Stopping
 Container kong-codex-kong-1  Stopped
 Container kong-codex-kong-1  Removing
 Container kong-codex-kong-1  Removed
 Container kong-codex-typesense-1  Stopped
 Container kong-codex-typesense-1  Removing
 Container kong-codex-typesense-1  Removed
 Network kong-codex_default  Removing
 Network kong-codex_default  Removed

[2025-07-17T05:33:57.665192] Running integration tests for fountainai...
[2025-07-17T05:34:44.873884] Integration tests for fountainai failed with exit code 1

[2025-07-17T05:34:44.874073] Running integration tests for kong-codex...
[2025-07-17T05:34:46.782998] Integration tests for kong-codex failed with exit code 1
