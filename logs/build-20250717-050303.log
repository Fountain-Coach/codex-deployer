[2025-07-17T05:03:03.572593] Dispatcher started successfully ðŸŸ¢
[2025-07-17T05:03:03.572870] === New Cycle ===
[0/1] Planning build
Building for debugging...
[0/14] Write swift-version-24593BA9C3E375BF.txt
Build complete! (8.14s)
[0/1] Planning build
Building for debugging...
[0/17] Write sources
[2/17] Write swift-version-24593BA9C3E375BF.txt
[3/6] Copying APIClient.swift
[4/22] Wrapping AST for IntegrationRuntime for debugging
[4/22] Wrapping AST for ToolsFactoryClient for debugging
[4/22] Wrapping AST for PersistClient for debugging
[6/22] Wrapping AST for FunctionCallerClient for debugging
[6/22] Wrapping AST for LLMGatewayClientSDK for debugging
[9/22] Copying HTTPServer.swift
[10/22] Wrapping AST for PlannerClient for debugging
[11/22] Wrapping AST for BaselineAwarenessClient for debugging
[12/22] Wrapping AST for BootstrapClient for debugging
[14/33] Emitting module GeneratorTests
[15/33] Compiling GeneratorTests GeneratorTests.swift
/srv/deploy/repos/fountainai/Tests/GeneratorTests/GeneratorTests.swift:21:33: warning: 'init(contentsOf:)' is deprecated: Use `init(contentsOf:encoding:)` instead
19 |                 .appendingPathComponent("Generated")
20 |                 .appendingPathComponent(fixtureName ?? relative)
21 |             let generated = try String(contentsOf: generatedURL)
   |                                 `- warning: 'init(contentsOf:)' is deprecated: Use `init(contentsOf:encoding:)` instead
22 |             let expected = try String(contentsOf: fixtureURL)
23 |             XCTAssertEqual(generated, expected, "Mismatch for \(relative)")

/srv/deploy/repos/fountainai/Tests/GeneratorTests/GeneratorTests.swift:22:32: warning: 'init(contentsOf:)' is deprecated: Use `init(contentsOf:encoding:)` instead
20 |                 .appendingPathComponent(fixtureName ?? relative)
21 |             let generated = try String(contentsOf: generatedURL)
22 |             let expected = try String(contentsOf: fixtureURL)
   |                                `- warning: 'init(contentsOf:)' is deprecated: Use `init(contentsOf:encoding:)` instead
23 |             XCTAssertEqual(generated, expected, "Mismatch for \(relative)")
24 |         }
[16/34] Emitting module ServerTests
[17/34] Compiling ServerTests ServerTests.swift
/srv/deploy/repos/fountainai/Tests/ServerTests/ServerTests.swift:57:9: warning: no 'async' operations occur within 'await' expression
55 |     func testHTTPServerViaURLSession() async throws {
56 |         let kernel = HTTPKernel()
57 |         await HTTPServer.register(kernel: kernel)
   |         `- warning: no 'async' operations occur within 'await' expression
58 |         let config = URLSessionConfiguration.ephemeral
59 |         config.protocolClasses = [HTTPServer.self]
[18/34] Compiling ServerTests HTTPServer.swift
/srv/deploy/repos/fountainai/Tests/ServerTests/HTTPServer.swift:11:21: warning: result of call to 'registerClass' is unused
 9 |     public static func register(kernel: HTTPKernel) {
10 |         self.kernel = kernel
11 |         URLProtocol.registerClass(HTTPServer.self)
   |                     `- warning: result of call to 'registerClass' is unused
12 |     }
13 | 

/srv/deploy/repos/fountainai/Tests/ServerTests/HTTPServer.swift:30:38: error: capture of 'kernel' with non-sendable type 'HTTPKernel' in a '@Sendable' closure
28 |         Task { @Sendable in
29 |             do {
30 |                 let resp = try await kernel.handle(req)
   |                                      `- error: capture of 'kernel' with non-sendable type 'HTTPKernel' in a '@Sendable' closure
31 |                 let httpResponse = HTTPURLResponse(url: url, statusCode: resp.status, httpVersion: "HTTP/1.1", headerFields: resp.headers)!
32 |                 client?.urlProtocol(strongSelf, didReceive: httpResponse, cacheStoragePolicy: .notAllowed)

/srv/deploy/repos/fountainai/Tests/ServerTests/HTTPKernel.swift:3:15: note: consider making struct 'HTTPKernel' conform to the 'Sendable' protocol
 1 | import Foundation
 2 | 
 3 | public struct HTTPKernel {
   |               `- note: consider making struct 'HTTPKernel' conform to the 'Sendable' protocol
 4 |     let router: Router
 5 | 

/srv/deploy/repos/fountainai/Tests/ServerTests/HTTPServer.swift:30:52: error: capture of 'req' with non-sendable type 'HTTPRequest' in a '@Sendable' closure
28 |         Task { @Sendable in
29 |             do {
30 |                 let resp = try await kernel.handle(req)
   |                                                    `- error: capture of 'req' with non-sendable type 'HTTPRequest' in a '@Sendable' closure
31 |                 let httpResponse = HTTPURLResponse(url: url, statusCode: resp.status, httpVersion: "HTTP/1.1", headerFields: resp.headers)!
32 |                 client?.urlProtocol(strongSelf, didReceive: httpResponse, cacheStoragePolicy: .notAllowed)

/srv/deploy/repos/fountainai/Tests/ServerTests/HTTPRequest.swift:5:15: note: consider making struct 'HTTPRequest' conform to the 'Sendable' protocol
 3 | public struct NoBody: Codable {}
 4 | 
 5 | public struct HTTPRequest {
   |               `- note: consider making struct 'HTTPRequest' conform to the 'Sendable' protocol
 6 |     public let method: String
 7 |     public let path: String
error: fatalError

[2025-07-17T05:03:03.573236] Starting swift build...
[2025-07-17T05:03:15.763055] swift build succeeded
[2025-07-17T05:03:15.764052] running swift test...
[2025-07-17T05:03:19.807896] swift test failed with exit code 1
