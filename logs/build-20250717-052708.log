[2025-07-17T05:27:08.099496] === New Cycle ===
[0/1] Planning build
Building for debugging...
[0/21] Write sources
[7/21] Write swift-version-24593BA9C3E375BF.txt
[9/35] Emitting module BaselineAwarenessServer
[10/35] Emitting module PersistServer
[11/35] Compiling PersistServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/persist/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
   |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[12/35] Compiling BaselineAwarenessServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/baseline-awareness/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
 21 | 
 22 |     func start() throws {
 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
 25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[13/35] Emitting module BootstrapServer
[14/35] Compiling BootstrapServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/bootstrap/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
   |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[15/35] Emitting module FunctionCallerServer
[16/35] Emitting module LLMGatewayServer
/srv/deploy/repos/fountainai/Generated/Server/function-caller/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
   |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[17/35] Emitting module ToolsFactoryServer
[18/35] Emitting module PlannerServer
/srv/deploy/repos/fountainai/Generated/Server/planner/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
   |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 

[2025-07-17T05:27:08.100436] Starting swift build...
[2025-07-17T05:27:12.941952] swift build failed with exit code 1
[2025-07-17T05:27:13.160398] [dispatcher] Updated git remote to use token-based authentication.
[2025-07-17T05:27:14.489001] [dispatcher] Running Docker build...
[2025-07-17T05:27:14.490917] [dispatcher] Running tests...
Compose now can delegate build to bake for better performances
Just set COMPOSE_BAKE=true
#0 building with "default" instance using docker driver

#1 [llm-gateway internal] load build definition from Dockerfile
#1 transferring dockerfile: 278B done
#1 DONE 0.0s

#2 [baseline-awareness internal] load build definition from Dockerfile
#2 transferring dockerfile: 299B done
#2 DONE 0.0s

#3 [function-caller internal] load build definition from Dockerfile
#3 transferring dockerfile: 290B done
#3 DONE 0.0s

#4 [planner internal] load build definition from Dockerfile
#4 transferring dockerfile: 266B 0.0s done
#4 DONE 0.0s

#5 [persist internal] load build definition from Dockerfile
#5 transferring dockerfile: 266B done
#5 DONE 0.0s

#6 [tools-factory internal] load build definition from Dockerfile
#6 transferring dockerfile: 284B done
#6 DONE 0.0s

#7 [bootstrap internal] load build definition from Dockerfile
#7 transferring dockerfile: 272B done
#7 DONE 0.0s

#8 [bootstrap internal] load metadata for docker.io/library/swift:6.1-jammy
#8 DONE 0.7s

#9 [bootstrap internal] load metadata for docker.io/library/ubuntu:22.04
#9 DONE 1.1s

#10 [tools-factory internal] load .dockerignore
#10 transferring context: 2B done
#10 DONE 0.0s

#11 [baseline-awareness internal] load .dockerignore
#11 transferring context: 2B done
#11 DONE 0.0s

#12 [planner internal] load .dockerignore
#12 transferring context: 2B done
#12 DONE 0.0s

#13 [persist internal] load .dockerignore
#13 transferring context: 2B done
#13 DONE 0.0s

#14 [function-caller internal] load .dockerignore
#14 transferring context: 2B done
#14 DONE 0.0s

#15 [llm-gateway build 1/4] FROM docker.io/library/swift:6.1-jammy@sha256:512716edb447938962d96627ff0b9f00d5701bfa61d97a5b5654f07a1482c342
#15 DONE 0.0s

#16 [llm-gateway stage-1 1/2] FROM docker.io/library/ubuntu:22.04@sha256:59ccd419c0dc0edf9e3bff1a3b2b073ea15a2ce4bc45ce7c989278b225b09af3
#16 DONE 0.0s

#17 [llm-gateway internal] load .dockerignore
#17 transferring context: 2B done
#17 DONE 0.0s

#18 [bootstrap internal] load .dockerignore
#18 transferring context: 2B done
#18 DONE 0.0s

#19 [llm-gateway internal] load build context
#19 transferring context: 7.87MB 4.8s
#19 ...

#20 [bootstrap internal] load build context
#20 ...

#21 [persist internal] load build context
#21 transferring context: 19.26MB 9.9s done
#21 ...

#22 [baseline-awareness internal] load build context
#22 transferring context: 19.26MB 9.9s done
#22 ...

#23 [function-caller internal] load build context
#23 transferring context: 19.26MB 9.9s done
#23 DONE 10.5s

#24 [planner internal] load build context
#24 transferring context: 19.26MB 9.9s done
#24 DONE 10.5s

#21 [persist internal] load build context
#21 DONE 10.5s

#22 [baseline-awareness internal] load build context
#22 DONE 10.5s

#19 [llm-gateway internal] load build context
#19 transferring context: 19.26MB 9.9s done
#19 DONE 10.5s

#25 [tools-factory internal] load build context
#25 transferring context: 19.26MB 9.8s done
#25 DONE 10.5s

#20 [bootstrap internal] load build context
#20 transferring context: 19.26MB 9.9s done
#20 DONE 10.5s

#26 [tools-factory build 2/4] WORKDIR /src
#26 CACHED

#27 [bootstrap build 3/4] COPY . .
#27 DONE 11.1s

#28 [tools-factory build 3/4] COPY . .
#28 CACHED

#29 [baseline-awareness build 3/4] COPY . .
#29 CACHED

#30 [bootstrap build 3/4] COPY . .
#30 CACHED

#31 [llm-gateway build 3/4] COPY . .
#31 CACHED

#32 [persist build 3/4] COPY . .
#32 CACHED

#33 [planner build 3/4] COPY . .
#33 CACHED

#34 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#34 ...

#35 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#35 ...

#36 [persist build 4/4] RUN swift build -c release --product persist-server
#36 ...

#37 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#37 ...

#38 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#38 ...

#39 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#39 ...

#40 [planner build 4/4] RUN swift build -c release --product planner-server
#40 ...

#35 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#35 22.62 Building for production...
#35 22.88 [0/6] Write sources
#35 23.28 [3/6] Write swift-version-24593BA9C3E375BF.txt
#35 ...

#39 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#39 23.21 Building for production...
#39 23.29 [0/14] Write sources
#39 24.14 [5/14] Compiling writer.c
#39 24.42 [6/14] Write swift-version-24593BA9C3E375BF.txt
#39 24.80 [7/14] Compiling reader.c
#39 25.83 [8/15] Compiling parser.c
#39 26.07 [9/15] Compiling api.c
#39 26.42 [10/15] Compiling scanner.c
#39 26.61 [11/15] Compiling emitter.c
#39 ...

#38 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#38 22.77 Building for production...
#38 22.89 [0/14] Write sources
#38 23.97 [5/14] Compiling writer.c
#38 23.98 [5/14] Write swift-version-24593BA9C3E375BF.txt
#38 24.06 [7/14] Compiling reader.c
#38 24.79 [8/15] Compiling parser.c
#38 25.71 [9/15] Compiling emitter.c
#38 25.80 [10/15] Compiling api.c
#38 27.34 [11/15] Compiling scanner.c
#38 ...

#40 [planner build 4/4] RUN swift build -c release --product planner-server
#40 22.89 Building for production...
#40 23.02 [0/6] Write sources
#40 23.34 [3/6] Write swift-version-24593BA9C3E375BF.txt
#40 ...

#34 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#34 23.04 Building for production...
#34 23.15 [0/7] Write sources
#34 23.47 [4/7] Write swift-version-24593BA9C3E375BF.txt
#34 ...

#37 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#37 22.67 Building for production...
#37 22.91 [0/6] Write sources
#37 23.34 [3/6] Write swift-version-24593BA9C3E375BF.txt
#37 ...

#36 [persist build 4/4] RUN swift build -c release --product persist-server
#36 23.37 Building for production...
#36 23.48 [0/6] Write sources
#36 23.81 [3/6] Write swift-version-24593BA9C3E375BF.txt
#36 ...

#34 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#34 36.43 [6/8] Compiling ServiceShared Models.swift
#34 38.73 [7/9] Compiling BaselineAwarenessService BaselineStore.swift
#34 ...

#35 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#35 36.96 [5/7] Compiling ServiceShared Models.swift
#35 38.25 [6/8] Compiling LLMGatewayService HTTPKernel.swift
#35 38.65 [7/9] Compiling LLMGatewayServer main.swift
#35 38.65 /src/Generated/Server/llm-gateway/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#35 38.65 21 | 
#35 38.65 22 |     func start() throws {
#35 38.65 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
#35 38.65    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#35 38.65 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
#35 38.65 25 |         var opt: Int32 = 1
#35 38.65 
#35 38.65 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
#35 38.65 1 | protocol FixedWidthInteger {
#35 38.65 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
#35 38.65   |                   `- note: where 'T' = '__socket_type'
#35 38.65 3 | 
#35 ERROR: process "/bin/sh -c swift build -c release --product llm-gateway-server" did not complete successfully: exit code: 1

#36 [persist build 4/4] RUN swift build -c release --product persist-server
#36 36.87 [5/7] Compiling ServiceShared Models.swift
#36 38.45 [6/8] Compiling PersistService HTTPKernel.swift
#36 39.02 [7/9] Compiling PersistServer main.swift
#36 39.02 /src/Generated/Server/persist/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#36 39.02 21 | 
#36 39.02 22 |     func start() throws {
#36 39.02 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
#36 39.02    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#36 39.02 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
#36 39.02 25 |         var opt: Int32 = 1
#36 39.02 
#36 39.02 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
#36 39.02 1 | protocol FixedWidthInteger {
#36 39.02 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
#36 39.02   |                   `- note: where 'T' = '__socket_type'
#36 39.02 3 | 
#36 ERROR: process "/bin/sh -c swift build -c release --product persist-server" did not complete successfully: exit code: 1

#39 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#39 38.42 [13/16] Compiling ServiceShared Models.swift
#39 ...

#34 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#34 CANCELED

#37 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#37 37.04 [5/7] Compiling ServiceShared Models.swift
#37 CANCELED

#40 [planner build 4/4] RUN swift build -c release --product planner-server
#40 36.44 [5/7] Compiling ServiceShared Models.swift
#40 39.15 [6/8] Compiling PlannerService HTTPKernel.swift
#40 CANCELED

#38 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#38 CANCELED

#39 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#39 CANCELED
------
 > [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server:
38.65 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
38.65    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
38.65 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
38.65 25 |         var opt: Int32 = 1
38.65 
38.65 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
38.65 1 | protocol FixedWidthInteger {
38.65 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
38.65   |                   `- note: where 'T' = '__socket_type'
38.65 3 | 
------
------
 > [persist build 4/4] RUN swift build -c release --product persist-server:
39.02 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
39.02    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
39.02 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
39.02 25 |         var opt: Int32 = 1
39.02 
39.02 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
39.02 1 | protocol FixedWidthInteger {
39.02 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
39.02   |                   `- note: where 'T' = '__socket_type'
39.02 3 | 
------
failed to solve: process "/bin/sh -c swift build -c release --product llm-gateway-server" did not complete successfully: exit code: 1
 Network kong-codex_default  Creating
 Network kong-codex_default  Created
 Container kong-codex-kong-1  Creating
 Container kong-codex-typesense-1  Creating
 Container kong-codex-typesense-1  Created
 Container kong-codex-kong-1  Created
Attaching to kong-1, typesense-1
Gracefully stopping... (press Ctrl+C again to force)
Error response from daemon: mounts denied: 
The path /srv/deploy/repos/kong-codex/kong.conf is not shared from the host and is not known to Docker.
You can configure shared paths from Docker -> Preferences... -> Resources -> File Sharing.
See https://docs.docker.com/desktop/settings/mac/#file-sharing for more info.
 Container kong-codex-typesense-1  Stopping
 Container kong-codex-kong-1  Stopping
 Container kong-codex-kong-1  Stopped
 Container kong-codex-kong-1  Removing
 Container kong-codex-kong-1  Removed
 Container kong-codex-typesense-1  Stopped
 Container kong-codex-typesense-1  Removing
 Container kong-codex-typesense-1  Removed
 Network kong-codex_default  Removing
 Network kong-codex_default  Removed

[2025-07-17T05:27:14.491671] Running integration tests for fountainai...
[2025-07-17T05:28:17.305886] Integration tests for fountainai failed with exit code 1

[2025-07-17T05:28:17.306198] Running integration tests for kong-codex...
[2025-07-17T05:28:28.470404] Integration tests for kong-codex failed with exit code 1
