[2025-07-17T10:17:02.084239] === New Cycle ===
Building for debugging...
[0/307] Compiling aesv8-armv8-win.S
[0/307] Compiling aesv8-armv8-apple.S
[2/307] Compiling aesv8-armv8-linux.S
[3/307] Compiling aesni-x86_64-linux.S
[4/307] Compiling aesni-x86_64-apple.S
[5/307] Compiling aesni-x86-linux.S
[6/307] Compiling aesv8-armv7-linux.S
[7/307] Write swift-version-24593BA9C3E375BF.txt
[8/302] Compiling aesni-x86-apple.S
[9/302] Compiling aesni-gcm-x86_64-apple.S
[10/302] Compiling aesni-gcm-x86_64-linux.S
[12/309] Emitting module PlannerServer
[13/309] Compiling PlannerServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/planner/main.swift:23:43: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(Int32(AF_INET), Int32(SOCK_STREAM), 0)
   |                                           `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[14/309] Emitting module PersistServer
[15/309] Compiling PersistServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/persist/main.swift:23:43: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(Int32(AF_INET), Int32(SOCK_STREAM), 0)
   |                                           `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[16/309] Emitting module Parser
[16/309] Compiling d1_both.cc
[16/309] Compiling d1_srtp.cc
[16/309] Compiling d1_pkt.cc
[16/309] Compiling d1_lib.cc
[16/309] Compiling dtls_method.cc

[2025-07-17T10:17:02.085438] Starting swift build...
[2025-07-17T10:17:04.405398] swift build failed with exit code 1
[2025-07-17T10:17:04.582727] [dispatcher] Updated git remote to use token-based authentication.
[2025-07-17T10:17:06.154555] [dispatcher] Running Docker build...
[2025-07-17T10:17:06.156910] [dispatcher] Running tests...
Compose now can delegate build to bake for better performances
Just set COMPOSE_BAKE=true
#0 building with "default" instance using docker driver

#1 [llm-gateway internal] load build definition from Dockerfile
#1 transferring dockerfile: 278B done
#1 DONE 0.0s

#2 [function-caller internal] load build definition from Dockerfile
#2 transferring dockerfile: 290B 0.0s done
#2 DONE 0.0s

#3 [persist internal] load build definition from Dockerfile
#3 transferring dockerfile: 266B done
#3 DONE 0.0s

#4 [bootstrap internal] load build definition from Dockerfile
#4 transferring dockerfile: 272B done
#4 DONE 0.0s

#5 [baseline-awareness internal] load build definition from Dockerfile
#5 transferring dockerfile: 299B done
#5 DONE 0.0s

#6 [tools-factory internal] load build definition from Dockerfile
#6 transferring dockerfile: 284B done
#6 DONE 0.0s

#7 [planner internal] load build definition from Dockerfile
#7 transferring dockerfile: 266B 0.0s done
#7 DONE 0.1s

#8 [baseline-awareness internal] load metadata for docker.io/library/ubuntu:22.04
#8 DONE 0.6s

#9 [llm-gateway internal] load metadata for docker.io/library/swift:6.1-jammy
#9 DONE 0.7s

#10 [bootstrap internal] load .dockerignore
#10 transferring context: 2B done
#10 DONE 0.0s

#11 [persist internal] load .dockerignore
#11 transferring context: 2B done
#11 DONE 0.0s

#12 [baseline-awareness internal] load .dockerignore
#12 transferring context: 2B done
#12 DONE 0.0s

#13 [planner internal] load .dockerignore
#13 transferring context: 2B done
#13 DONE 0.0s

#14 [llm-gateway internal] load .dockerignore
#14 transferring context: 2B done
#14 DONE 0.0s

#15 [planner build 1/4] FROM docker.io/library/swift:6.1-jammy@sha256:512716edb447938962d96627ff0b9f00d5701bfa61d97a5b5654f07a1482c342
#15 DONE 0.0s

#16 [planner stage-1 1/2] FROM docker.io/library/ubuntu:22.04@sha256:59ccd419c0dc0edf9e3bff1a3b2b073ea15a2ce4bc45ce7c989278b225b09af3
#16 DONE 0.0s

#17 [function-caller internal] load .dockerignore
#17 transferring context: 2B done
#17 DONE 0.0s

#18 [bootstrap internal] load build context
#18 ...

#15 [tools-factory build 1/4] FROM docker.io/library/swift:6.1-jammy@sha256:512716edb447938962d96627ff0b9f00d5701bfa61d97a5b5654f07a1482c342
#15 DONE 0.0s

#16 [tools-factory stage-1 1/2] FROM docker.io/library/ubuntu:22.04@sha256:59ccd419c0dc0edf9e3bff1a3b2b073ea15a2ce4bc45ce7c989278b225b09af3
#16 DONE 0.0s

#19 [tools-factory internal] load .dockerignore
#19 transferring context: 2B done
#19 DONE 0.1s

#18 [bootstrap internal] load build context
#18 transferring context: 1.31MB 5.1s
#18 ...

#20 [llm-gateway internal] load build context
#20 ...

#18 [bootstrap internal] load build context
#18 transferring context: 7.71MB 10.0s done
#18 ...

#21 [persist internal] load build context
#21 transferring context: 7.71MB 10.0s done
#21 ...

#22 [planner internal] load build context
#22 transferring context: 7.71MB 9.4s done
#22 DONE 10.3s

#23 [baseline-awareness internal] load build context
#23 transferring context: 7.71MB 10.0s done
#23 DONE 10.3s

#24 [tools-factory internal] load build context
#24 transferring context: 7.71MB 10.0s done
#24 DONE 10.2s

#21 [persist internal] load build context
#21 DONE 10.3s

#18 [bootstrap internal] load build context
#18 DONE 10.3s

#25 [function-caller internal] load build context
#25 transferring context: 7.71MB 10.0s done
#25 DONE 10.3s

#20 [llm-gateway internal] load build context
#20 transferring context: 7.71MB 10.0s done
#20 DONE 10.3s

#26 [bootstrap build 2/4] WORKDIR /src
#26 CACHED

#27 [bootstrap build 3/4] COPY . .
#27 DONE 10.9s

#28 [baseline-awareness build 3/4] COPY . .
#28 CACHED

#29 [bootstrap build 3/4] COPY . .
#29 CACHED

#30 [persist build 3/4] COPY . .
#30 CACHED

#31 [llm-gateway build 3/4] COPY . .
#31 CACHED

#32 [function-caller build 3/4] COPY . .
#32 CACHED

#33 [planner build 3/4] COPY . .
#33 CACHED

#34 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#34 ...

#35 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#35 ...

#36 [persist build 4/4] RUN swift build -c release --product persist-server
#36 ...

#37 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#37 ...

#38 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#38 ...

#39 [planner build 4/4] RUN swift build -c release --product planner-server
#39 ...

#40 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#40 ...

#39 [planner build 4/4] RUN swift build -c release --product planner-server
#39 17.19 Building for production...
#39 17.33 [0/6] Write sources
#39 17.87 [3/6] Write swift-version-24593BA9C3E375BF.txt
#39 ...

#40 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#40 17.27 Building for production...
#40 17.49 [0/14] Write sources
#40 18.20 [5/14] Compiling reader.c
#40 18.22 [6/14] Compiling writer.c
#40 18.44 [7/14] Compiling api.c
#40 18.58 [8/14] Compiling parser.c
#40 19.21 [9/14] Compiling emitter.c
#40 19.49 [10/14] Compiling scanner.c
#40 19.49 [11/14] Write swift-version-24593BA9C3E375BF.txt
#40 ...

#39 [planner build 4/4] RUN swift build -c release --product planner-server
#39 26.46 [5/7] Compiling ServiceShared Models.swift
#39 ...

#36 [persist build 4/4] RUN swift build -c release --product persist-server
#36 17.19 Building for production...
#36 17.45 [0/6] Write sources
#36 17.89 [3/6] Write swift-version-24593BA9C3E375BF.txt
#36 26.18 [5/7] Compiling ServiceShared Models.swift
#36 ...

#38 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#38 17.20 Building for production...
#38 17.49 [0/6] Write sources
#38 17.95 [3/6] Write swift-version-24593BA9C3E375BF.txt
#38 25.95 [5/7] Compiling ServiceShared Models.swift
#38 ...

#37 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#37 17.23 Building for production...
#37 17.43 [0/14] Write sources
#37 18.21 [5/14] Compiling writer.c
#37 18.32 [6/14] Compiling reader.c
#37 18.55 [7/14] Compiling api.c
#37 18.57 [8/14] Compiling parser.c
#37 18.57 [9/14] Write swift-version-24593BA9C3E375BF.txt
#37 19.29 [10/15] Compiling emitter.c
#37 19.53 [11/15] Compiling scanner.c
#37 26.95 [13/16] Compiling ServiceShared Models.swift
#37 ...

#34 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#34 17.22 Building for production...
#34 17.48 [0/6] Write sources
#34 17.95 [3/6] Write swift-version-24593BA9C3E375BF.txt
#34 25.93 [5/7] Compiling ServiceShared Models.swift
#34 ...

#35 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#35 17.26 Building for production...
#35 17.48 [0/7] Write sources
#35 17.89 [4/7] Write swift-version-24593BA9C3E375BF.txt
#35 25.97 [6/8] Compiling ServiceShared Models.swift
#35 ...

#40 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#40 28.26 [13/16] Compiling ServiceShared Models.swift
#40 ...

#34 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#34 28.27 [6/8] Compiling LLMGatewayService HTTPKernel.swift
#34 28.87 [7/9] Compiling LLMGatewayServer main.swift
#34 28.87 /src/Generated/Server/llm-gateway/main.swift:23:43: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#34 28.87 21 | 
#34 28.87 22 |     func start() throws {
#34 28.87 23 |         serverFD = socket(Int32(AF_INET), Int32(SOCK_STREAM), 0)
#34 28.87    |                                           `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#34 28.87 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
#34 28.87 25 |         var opt: Int32 = 1
#34 28.87 
#34 28.87 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
#34 28.87 1 | protocol FixedWidthInteger {
#34 28.87 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
#34 28.87   |                   `- note: where 'T' = '__socket_type'
#34 28.87 3 | 
#34 ERROR: process "/bin/sh -c swift build -c release --product llm-gateway-server" did not complete successfully: exit code: 1

#36 [persist build 4/4] RUN swift build -c release --product persist-server
#36 28.56 [6/8] Compiling PersistService HTTPKernel.swift
#36 28.99 [7/9] Compiling PersistServer main.swift
#36 29.00 /src/Generated/Server/persist/main.swift:23:43: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#36 29.00 21 | 
#36 29.00 22 |     func start() throws {
#36 29.00 23 |         serverFD = socket(Int32(AF_INET), Int32(SOCK_STREAM), 0)
#36 29.00    |                                           `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#36 29.00 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
#36 29.00 25 |         var opt: Int32 = 1
#36 29.00 
#36 29.00 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
#36 29.00 1 | protocol FixedWidthInteger {
#36 29.00 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
#36 29.00   |                   `- note: where 'T' = '__socket_type'
#36 29.00 3 | 
#36 ERROR: process "/bin/sh -c swift build -c release --product persist-server" did not complete successfully: exit code: 1

#39 [planner build 4/4] RUN swift build -c release --product planner-server
#39 29.35 [6/8] Compiling PlannerService HTTPKernel.swift
#39 ...

#35 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#35 CANCELED

#37 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#37 CANCELED

#39 [planner build 4/4] RUN swift build -c release --product planner-server
#39 CANCELED

#38 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#38 CANCELED

#40 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#40 CANCELED
------
 > [persist build 4/4] RUN swift build -c release --product persist-server:
29.00 23 |         serverFD = socket(Int32(AF_INET), Int32(SOCK_STREAM), 0)
29.00    |                                           `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
29.00 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
29.00 25 |         var opt: Int32 = 1
29.00 
29.00 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
29.00 1 | protocol FixedWidthInteger {
29.00 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
29.00   |                   `- note: where 'T' = '__socket_type'
29.00 3 | 
------
------
 > [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server:
28.87 23 |         serverFD = socket(Int32(AF_INET), Int32(SOCK_STREAM), 0)
28.87    |                                           `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
28.87 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
28.87 25 |         var opt: Int32 = 1
28.87 
28.87 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
28.87 1 | protocol FixedWidthInteger {
28.87 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
28.87   |                   `- note: where 'T' = '__socket_type'
28.87 3 | 
------
failed to solve: process "/bin/sh -c swift build -c release --product llm-gateway-server" did not complete successfully: exit code: 1
 Network kong-codex_default  Creating
 Network kong-codex_default  Created
 Container kong-codex-kong-1  Creating
 Container kong-codex-typesense-1  Creating
 Container kong-codex-kong-1  Created
 Container kong-codex-typesense-1  Created
Attaching to kong-1, typesense-1
Gracefully stopping... (press Ctrl+C again to force)
Error response from daemon: mounts denied: 
The path /srv/deploy/repos/kong-codex/kong.conf is not shared from the host and is not known to Docker.
You can configure shared paths from Docker -> Preferences... -> Resources -> File Sharing.
See https://docs.docker.com/desktop/settings/mac/#file-sharing for more info.
 Container kong-codex-kong-1  Stopping
 Container kong-codex-typesense-1  Stopping
 Container kong-codex-kong-1  Stopped
 Container kong-codex-kong-1  Removing
 Container kong-codex-kong-1  Removed
 Container kong-codex-typesense-1  Stopped
 Container kong-codex-typesense-1  Removing
 Container kong-codex-typesense-1  Removed
 Network kong-codex_default  Removing
 Network kong-codex_default  Removed

[2025-07-17T10:17:06.157275] Running integration tests for fountainai...
[2025-07-17T10:17:58.814500] Integration tests for fountainai failed with exit code 1

[2025-07-17T10:17:58.814963] Running integration tests for kong-codex...
[2025-07-17T10:18:09.904760] Integration tests for kong-codex failed with exit code 1
