[2025-07-17T09:49:44.555233] === New Cycle ===
Building for debugging...
[0/437] Compiling ssl_transcript.cc
[0/437] Compiling ssl_stat.cc
[2/437] Compiling ssl_versions.cc
[3/437] Compiling ssl_file.cc
[4/437] Compiling ssl_privkey.cc
[5/437] Write swift-version-24593BA9C3E375BF.txt
[6/432] Compiling ssl_key_share.cc
[7/432] Compiling ssl_session.cc
[8/434] Compiling ssl_lib.cc
[10/436] Emitting module PlannerServer
[11/436] Compiling PlannerServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/planner/main.swift:23:43: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(Int32(AF_INET), Int32(SOCK_STREAM), 0)
   |                                           `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[12/436] Emitting module PersistServer
[12/436] Compiling ssl_asn1.cc
[12/436] Compiling ssl_buffer.cc
[12/436] Compiling ssl_aead_ctx.cc
[12/436] Compiling ssl_credential.cc
/srv/deploy/repos/fountainai/Generated/Server/persist/main.swift:23:43: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(Int32(AF_INET), Int32(SOCK_STREAM), 0)
   |                                           `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[12/436] Compiling ssl_cert.cc
[12/436] Compiling ssl_cipher.cc

[2025-07-17T09:49:44.556264] Starting swift build...
[2025-07-17T09:49:48.181182] swift build failed with exit code 1
[2025-07-17T09:49:48.352224] [dispatcher] Updated git remote to use token-based authentication.
[2025-07-17T09:49:50.469960] [dispatcher] Running Docker build...
[2025-07-17T09:49:50.471502] [dispatcher] Running tests...
Compose now can delegate build to bake for better performances
Just set COMPOSE_BAKE=true
#0 building with "default" instance using docker driver

#1 [llm-gateway internal] load build definition from Dockerfile
#1 transferring dockerfile: 278B done
#1 DONE 0.0s

#2 [persist internal] load build definition from Dockerfile
#2 transferring dockerfile: 266B done
#2 DONE 0.0s

#3 [baseline-awareness internal] load build definition from Dockerfile
#3 transferring dockerfile: 299B done
#3 DONE 0.0s

#4 [bootstrap internal] load build definition from Dockerfile
#4 transferring dockerfile: 272B done
#4 DONE 0.0s

#5 [tools-factory internal] load build definition from Dockerfile
#5 transferring dockerfile: 284B done
#5 DONE 0.0s

#6 [planner internal] load build definition from Dockerfile
#6 transferring dockerfile: 266B done
#6 DONE 0.0s

#7 [function-caller internal] load build definition from Dockerfile
#7 transferring dockerfile: 290B done
#7 DONE 0.0s

#8 [function-caller internal] load metadata for docker.io/library/swift:6.1-jammy
#8 DONE 1.4s

#9 [llm-gateway internal] load metadata for docker.io/library/ubuntu:22.04
#9 DONE 1.4s

#10 [bootstrap internal] load .dockerignore
#10 transferring context: 2B done
#10 DONE 0.0s

#11 [function-caller internal] load .dockerignore
#11 transferring context: 2B done
#11 DONE 0.0s

#12 [baseline-awareness internal] load .dockerignore
#12 transferring context: 2B done
#12 DONE 0.0s

#13 [persist internal] load .dockerignore
#13 transferring context: 2B done
#13 DONE 0.0s

#14 [planner build 1/4] FROM docker.io/library/swift:6.1-jammy@sha256:512716edb447938962d96627ff0b9f00d5701bfa61d97a5b5654f07a1482c342
#14 DONE 0.0s

#15 [planner stage-1 1/2] FROM docker.io/library/ubuntu:22.04@sha256:59ccd419c0dc0edf9e3bff1a3b2b073ea15a2ce4bc45ce7c989278b225b09af3
#15 DONE 0.0s

#16 [planner internal] load .dockerignore
#16 transferring context: 2B done
#16 DONE 0.0s

#17 [llm-gateway internal] load .dockerignore
#17 transferring context: 2B done
#17 DONE 0.0s

#18 [tools-factory internal] load .dockerignore
#18 transferring context: 2B done
#18 DONE 0.0s

#19 [baseline-awareness internal] load build context
#19 transferring context: 4.23MB 5.0s
#19 ...

#20 [planner internal] load build context
#20 ...

#19 [baseline-awareness internal] load build context
#19 transferring context: 10.62MB 9.9s done
#19 ...

#21 [llm-gateway internal] load build context
#21 transferring context: 10.62MB 10.0s done
#21 ...

#22 [bootstrap internal] load build context
#22 transferring context: 10.62MB 9.9s done
#22 ...

#23 [tools-factory internal] load build context
#23 transferring context: 10.62MB 9.2s done
#23 DONE 10.2s

#24 [function-caller internal] load build context
#24 transferring context: 10.62MB 9.9s done
#24 DONE 10.2s

#19 [baseline-awareness internal] load build context
#19 DONE 10.2s

#25 [persist internal] load build context
#25 transferring context: 10.62MB 9.9s done
#25 DONE 10.2s

#20 [planner internal] load build context
#20 transferring context: 10.62MB 9.9s done
#20 DONE 10.2s

#22 [bootstrap internal] load build context
#22 DONE 10.2s

#21 [llm-gateway internal] load build context
#21 DONE 10.2s

#26 [llm-gateway build 2/4] WORKDIR /src
#26 CACHED

#27 [persist build 3/4] COPY . .
#27 DONE 15.8s

#28 [persist build 3/4] COPY . .
#28 CACHED

#29 [llm-gateway build 3/4] COPY . .
#29 CACHED

#30 [function-caller build 3/4] COPY . .
#30 CACHED

#31 [planner build 3/4] COPY . .
#31 CACHED

#32 [baseline-awareness build 3/4] COPY . .
#32 CACHED

#33 [bootstrap build 3/4] COPY . .
#33 CACHED

#34 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#34 ...

#35 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#35 ...

#36 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#36 ...

#37 [persist build 4/4] RUN swift build -c release --product persist-server
#37 ...

#38 [planner build 4/4] RUN swift build -c release --product planner-server
#38 ...

#39 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#39 ...

#40 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#40 ...

#37 [persist build 4/4] RUN swift build -c release --product persist-server
#37 19.37 Building for production...
#37 19.46 [0/6] Write sources
#37 20.00 [3/6] Write swift-version-24593BA9C3E375BF.txt
#37 ...

#39 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#39 19.56 Building for production...
#39 19.63 [0/14] Write sources
#39 19.90 [5/14] Compiling writer.c
#39 20.09 [6/14] Compiling reader.c
#39 20.44 [7/14] Compiling parser.c
#39 20.45 [8/14] Compiling api.c
#39 20.45 [9/14] Write swift-version-24593BA9C3E375BF.txt
#39 21.11 [10/15] Compiling scanner.c
#39 21.11 [11/15] Compiling emitter.c
#39 ...

#37 [persist build 4/4] RUN swift build -c release --product persist-server
#37 27.43 [5/7] Compiling ServiceShared Models.swift
#37 28.93 [6/8] Compiling PersistService HTTPKernel.swift
#37 29.36 [7/9] Compiling PersistServer main.swift
#37 29.36 /src/Generated/Server/persist/main.swift:23:43: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#37 29.36 21 | 
#37 29.36 22 |     func start() throws {
#37 29.36 23 |         serverFD = socket(Int32(AF_INET), Int32(SOCK_STREAM), 0)
#37 29.36    |                                           `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#37 29.36 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
#37 29.36 25 |         var opt: Int32 = 1
#37 29.36 
#37 29.36 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
#37 29.36 1 | protocol FixedWidthInteger {
#37 29.36 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
#37 29.36   |                   `- note: where 'T' = '__socket_type'
#37 29.36 3 | 
#37 ...

#36 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#36 19.48 Building for production...
#36 19.54 [0/6] Write sources
#36 20.00 [3/6] Write swift-version-24593BA9C3E375BF.txt
#36 27.54 [5/7] Compiling ServiceShared Models.swift
#36 ...

#35 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#35 19.65 Building for production...
#35 19.72 [0/6] Write sources
#35 19.98 [3/6] Write swift-version-24593BA9C3E375BF.txt
#35 27.13 [5/7] Compiling ServiceShared Models.swift
#35 28.73 [6/8] Compiling LLMGatewayService HTTPKernel.swift
#35 29.14 [7/9] Compiling LLMGatewayServer main.swift
#35 29.14 /src/Generated/Server/llm-gateway/main.swift:23:43: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#35 29.14 21 | 
#35 29.14 22 |     func start() throws {
#35 29.14 23 |         serverFD = socket(Int32(AF_INET), Int32(SOCK_STREAM), 0)
#35 29.14    |                                           `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#35 29.14 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
#35 29.14 25 |         var opt: Int32 = 1
#35 29.14 
#35 29.14 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
#35 29.14 1 | protocol FixedWidthInteger {
#35 29.14 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
#35 29.14   |                   `- note: where 'T' = '__socket_type'
#35 29.14 3 | 
#35 ...

#40 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#40 19.42 Building for production...
#40 19.51 [0/14] Write sources
#40 19.81 [5/14] Compiling writer.c
#40 19.95 [6/14] Compiling reader.c
#40 20.05 [7/14] Write swift-version-24593BA9C3E375BF.txt
#40 20.22 [8/14] Compiling parser.c
#40 20.39 [9/15] Compiling api.c
#40 21.11 [10/15] Compiling emitter.c
#40 21.21 [11/15] Compiling scanner.c
#40 27.95 [13/16] Compiling ServiceShared Models.swift
#40 ...

#38 [planner build 4/4] RUN swift build -c release --product planner-server
#38 19.69 Building for production...
#38 19.80 [0/6] Write sources
#38 20.10 [3/6] Write swift-version-24593BA9C3E375BF.txt
#38 27.14 [5/7] Compiling ServiceShared Models.swift
#38 ...

#35 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#35 ERROR: process "/bin/sh -c swift build -c release --product llm-gateway-server" did not complete successfully: exit code: 1

#34 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#34 19.67 Building for production...
#34 19.76 [0/7] Write sources
#34 20.10 [4/7] Write swift-version-24593BA9C3E375BF.txt
#34 27.56 [6/8] Compiling ServiceShared Models.swift
#34 ...

#37 [persist build 4/4] RUN swift build -c release --product persist-server
#37 ERROR: process "/bin/sh -c swift build -c release --product persist-server" did not complete successfully: exit code: 1

#38 [planner build 4/4] RUN swift build -c release --product planner-server
#38 30.00 [6/8] Compiling PlannerService HTTPKernel.swift
#38 ...

#36 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#36 CANCELED

#38 [planner build 4/4] RUN swift build -c release --product planner-server
#38 CANCELED

#40 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#40 CANCELED

#34 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#34 CANCELED

#39 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#39 27.80 [13/16] Compiling ServiceShared Models.swift
#39 CANCELED
------
 > [persist build 4/4] RUN swift build -c release --product persist-server:
29.36 23 |         serverFD = socket(Int32(AF_INET), Int32(SOCK_STREAM), 0)
29.36    |                                           `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
29.36 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
29.36 25 |         var opt: Int32 = 1
29.36 
29.36 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
29.36 1 | protocol FixedWidthInteger {
29.36 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
29.36   |                   `- note: where 'T' = '__socket_type'
29.36 3 | 
------
------
 > [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server:
29.14 23 |         serverFD = socket(Int32(AF_INET), Int32(SOCK_STREAM), 0)
29.14    |                                           `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
29.14 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
29.14 25 |         var opt: Int32 = 1
29.14 
29.14 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
29.14 1 | protocol FixedWidthInteger {
29.14 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
29.14   |                   `- note: where 'T' = '__socket_type'
29.14 3 | 
------
failed to solve: process "/bin/sh -c swift build -c release --product persist-server" did not complete successfully: exit code: 1
 Network kong-codex_default  Creating
 Network kong-codex_default  Created
 Container kong-codex-typesense-1  Creating
 Container kong-codex-kong-1  Creating
 Container kong-codex-typesense-1  Created
 Container kong-codex-kong-1  Created
Attaching to kong-1, typesense-1
Error response from daemon: mounts denied: 
The path /srv/deploy/repos/kong-codex/kong.conf is not shared from the host and is not known to Docker.
You can configure shared paths from Docker -> Preferences... -> Resources -> File Sharing.
See https://docs.docker.com/desktop/settings/mac/#file-sharing for more info.
 Container kong-codex-kong-1  Stopping
 Container kong-codex-typesense-1  Stopping
 Container kong-codex-kong-1  Stopped
 Container kong-codex-kong-1  Removing
 Container kong-codex-kong-1  Removed
 Container kong-codex-typesense-1  Stopped
 Container kong-codex-typesense-1  Removing
 Container kong-codex-typesense-1  Removed
 Network kong-codex_default  Removing
 Network kong-codex_default  Removed

[2025-07-17T09:49:50.471959] Running integration tests for fountainai...
[2025-07-17T09:50:49.255466] Integration tests for fountainai failed with exit code 1

[2025-07-17T09:50:49.255646] Running integration tests for kong-codex...
[2025-07-17T09:51:00.285392] Integration tests for kong-codex failed with exit code 1
