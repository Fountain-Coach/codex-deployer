[2025-07-17T05:35:46.821642] === New Cycle ===
Building for debugging...
[0/14] Write swift-version-24593BA9C3E375BF.txt
[2/28] Compiling BaselineAwarenessServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/baseline-awareness/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
 21 | 
 22 |     func start() throws {
 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
 25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[3/28] Compiling LLMGatewayServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/llm-gateway/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
   |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[4/28] Emitting module LLMGatewayServer
[5/28] Emitting module ToolsFactoryServer
[6/28] Emitting module PersistServer
[7/28] Emitting module BootstrapServer
[8/28] Emitting module BaselineAwarenessServer
[9/28] Compiling BootstrapServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/bootstrap/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
   |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[10/28] Emitting module PlannerServer
[11/28] Compiling PlannerServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/planner/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
   |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
/srv/deploy/repos/fountainai/Generated/Server/persist/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
   |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[12/28] Emitting module FunctionCallerServer

[2025-07-17T05:35:46.822651] Starting swift build...
[2025-07-17T05:35:48.334824] swift build failed with exit code 1
[2025-07-17T05:35:48.419785] [dispatcher] Updated git remote to use token-based authentication.
[2025-07-17T05:35:49.689759] [dispatcher] Running Docker build...
[2025-07-17T05:35:49.690585] [dispatcher] Running tests...
Compose now can delegate build to bake for better performances
Just set COMPOSE_BAKE=true
#0 building with "default" instance using docker driver

#1 [function-caller internal] load build definition from Dockerfile
#1 transferring dockerfile: 290B done
#1 DONE 0.0s

#2 [baseline-awareness internal] load build definition from Dockerfile
#2 transferring dockerfile: 299B done
#2 DONE 0.0s

#3 [planner internal] load build definition from Dockerfile
#3 transferring dockerfile: 266B done
#3 DONE 0.0s

#4 [persist internal] load build definition from Dockerfile
#4 transferring dockerfile: 266B done
#4 DONE 0.0s

#5 [tools-factory internal] load build definition from Dockerfile
#5 transferring dockerfile: 284B done
#5 DONE 0.0s

#6 [bootstrap internal] load build definition from Dockerfile
#6 transferring dockerfile: 272B done
#6 DONE 0.0s

#7 [llm-gateway internal] load build definition from Dockerfile
#7 transferring dockerfile: 278B done
#7 DONE 0.0s

#8 [llm-gateway internal] load metadata for docker.io/library/ubuntu:22.04
#8 DONE 0.8s

#9 [baseline-awareness internal] load metadata for docker.io/library/swift:6.1-jammy
#9 DONE 0.8s

#10 [baseline-awareness internal] load .dockerignore
#10 transferring context: 2B done
#10 DONE 0.0s

#11 [bootstrap internal] load .dockerignore
#11 transferring context: 2B done
#11 DONE 0.0s

#12 [llm-gateway internal] load .dockerignore
#12 transferring context: 2B done
#12 DONE 0.0s

#13 [planner build 1/4] FROM docker.io/library/swift:6.1-jammy@sha256:512716edb447938962d96627ff0b9f00d5701bfa61d97a5b5654f07a1482c342
#13 DONE 0.0s

#14 [planner stage-1 1/2] FROM docker.io/library/ubuntu:22.04@sha256:59ccd419c0dc0edf9e3bff1a3b2b073ea15a2ce4bc45ce7c989278b225b09af3
#14 DONE 0.0s

#15 [tools-factory internal] load .dockerignore
#15 transferring context: 2B done
#15 DONE 0.0s

#16 [planner internal] load .dockerignore
#16 transferring context: 2B done
#16 DONE 0.0s

#17 [function-caller internal] load .dockerignore
#17 transferring context: 2B done
#17 DONE 0.0s

#18 [persist internal] load .dockerignore
#18 transferring context: 2B done
#18 DONE 0.0s

#19 [tools-factory internal] load build context
#19 transferring context: 1.82MB 5.0s
#19 ...

#20 [llm-gateway internal] load build context
#20 ...

#19 [tools-factory internal] load build context
#19 transferring context: 7.52MB 8.9s done
#19 ...

#21 [baseline-awareness internal] load build context
#21 transferring context: 7.52MB 8.0s done
#21 DONE 9.1s

#22 [planner internal] load build context
#22 transferring context: 7.52MB 8.9s done
#22 DONE 9.1s

#23 [persist internal] load build context
#23 transferring context: 7.52MB 8.8s done
#23 DONE 9.1s

#24 [bootstrap internal] load build context
#24 transferring context: 7.52MB 8.8s done
#24 DONE 9.1s

#25 [function-caller internal] load build context
#25 transferring context: 7.52MB 8.8s done
#25 DONE 9.1s

#19 [tools-factory internal] load build context
#19 DONE 9.1s

#20 [llm-gateway internal] load build context
#20 transferring context: 7.52MB 8.8s done
#20 DONE 9.1s

#26 [tools-factory build 2/4] WORKDIR /src
#26 CACHED

#27 [llm-gateway build 3/4] COPY . .
#27 DONE 11.2s

#28 [bootstrap build 3/4] COPY . .
#28 CACHED

#29 [persist build 3/4] COPY . .
#29 CACHED

#30 [planner build 3/4] COPY . .
#30 CACHED

#31 [tools-factory build 3/4] COPY . .
#31 CACHED

#32 [llm-gateway build 3/4] COPY . .
#32 CACHED

#33 [function-caller build 3/4] COPY . .
#33 CACHED

#34 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#34 ...

#35 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#35 ...

#36 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#36 ...

#37 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#37 ...

#38 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#38 ...

#39 [planner build 4/4] RUN swift build -c release --product planner-server
#39 ...

#40 [persist build 4/4] RUN swift build -c release --product persist-server
#40 ...

#34 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#34 14.97 Building for production...
#34 15.02 [0/6] Write sources
#34 15.20 [3/6] Write swift-version-24593BA9C3E375BF.txt
#34 ...

#38 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#38 15.10 Building for production...
#38 15.14 [0/14] Write sources
#38 15.31 [5/14] Write swift-version-24593BA9C3E375BF.txt
#38 15.79 [6/15] Compiling writer.c
#38 15.84 [7/15] Compiling reader.c
#38 16.06 [8/15] Compiling api.c
#38 16.13 [9/15] Compiling parser.c
#38 16.70 [10/15] Compiling emitter.c
#38 17.11 [11/15] Compiling scanner.c
#38 ...

#34 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#34 21.26 [5/7] Compiling ServiceShared Models.swift
#34 22.60 [6/8] Compiling LLMGatewayService HTTPKernel.swift
#34 22.90 [7/9] Compiling LLMGatewayServer main.swift
#34 22.90 /src/Generated/Server/llm-gateway/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#34 22.90 21 | 
#34 22.90 22 |     func start() throws {
#34 22.90 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
#34 22.90    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#34 22.90 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
#34 22.90 25 |         var opt: Int32 = 1
#34 22.90 
#34 22.90 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
#34 22.90 1 | protocol FixedWidthInteger {
#34 22.90 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
#34 22.90   |                   `- note: where 'T' = '__socket_type'
#34 22.90 3 | 
#34 ERROR: process "/bin/sh -c swift build -c release --product llm-gateway-server" did not complete successfully: exit code: 1

#37 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#37 15.07 Building for production...
#37 15.11 [0/14] Write sources
#37 15.24 [5/14] Write swift-version-24593BA9C3E375BF.txt
#37 15.80 [6/15] Compiling writer.c
#37 15.84 [7/15] Compiling reader.c
#37 16.26 [8/15] Compiling api.c
#37 16.28 [9/15] Compiling parser.c
#37 16.56 [10/15] Compiling emitter.c
#37 17.28 [11/15] Compiling scanner.c
#37 21.41 [13/16] Compiling ServiceShared Models.swift
#37 ...

#40 [persist build 4/4] RUN swift build -c release --product persist-server
#40 15.05 Building for production...
#40 15.11 [0/6] Write sources
#40 15.32 [3/6] Write swift-version-24593BA9C3E375BF.txt
#40 21.26 [5/7] Compiling ServiceShared Models.swift
#40 22.78 [6/8] Compiling PersistService HTTPKernel.swift
#40 23.10 [7/9] Compiling PersistServer main.swift
#40 23.10 /src/Generated/Server/persist/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#40 23.10 21 | 
#40 23.10 22 |     func start() throws {
#40 23.10 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
#40 23.10    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#40 23.10 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
#40 23.10 25 |         var opt: Int32 = 1
#40 23.10 
#40 23.10 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
#40 23.10 1 | protocol FixedWidthInteger {
#40 23.10 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
#40 23.10   |                   `- note: where 'T' = '__socket_type'
#40 23.10 3 | 
#40 ERROR: process "/bin/sh -c swift build -c release --product persist-server" did not complete successfully: exit code: 1

#39 [planner build 4/4] RUN swift build -c release --product planner-server
#39 15.25 Building for production...
#39 15.31 [0/6] Write sources
#39 15.67 [3/6] Write swift-version-24593BA9C3E375BF.txt
#39 21.26 [5/7] Compiling ServiceShared Models.swift
#39 23.34 [6/8] Compiling PlannerService HTTPKernel.swift
#39 ...

#36 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#36 15.10 Building for production...
#36 15.16 [0/6] Write sources
#36 15.33 [3/6] Write swift-version-24593BA9C3E375BF.txt
#36 21.29 [5/7] Compiling ServiceShared Models.swift
#36 23.54 [6/8] Compiling BaselineAwarenessService BaselineStore.swift
#36 CANCELED

#35 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#35 15.04 Building for production...
#35 15.08 [0/7] Write sources
#35 15.24 [4/7] Write swift-version-24593BA9C3E375BF.txt
#35 21.26 [6/8] Compiling ServiceShared Models.swift
#35 23.57 [7/9] Compiling BaselineAwarenessService BaselineStore.swift
#35 CANCELED

#37 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#37 CANCELED

#38 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#38 21.50 [13/16] Compiling ServiceShared Models.swift
#38 CANCELED

#39 [planner build 4/4] RUN swift build -c release --product planner-server
#39 CANCELED
------
 > [persist build 4/4] RUN swift build -c release --product persist-server:
23.10 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
23.10    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
23.10 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
23.10 25 |         var opt: Int32 = 1
23.10 
23.10 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
23.10 1 | protocol FixedWidthInteger {
23.10 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
23.10   |                   `- note: where 'T' = '__socket_type'
23.10 3 | 
------
------
 > [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server:
22.90 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
22.90    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
22.90 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
22.90 25 |         var opt: Int32 = 1
22.90 
22.90 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
22.90 1 | protocol FixedWidthInteger {
22.90 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
22.90   |                   `- note: where 'T' = '__socket_type'
22.90 3 | 
------
failed to solve: process "/bin/sh -c swift build -c release --product llm-gateway-server" did not complete successfully: exit code: 1
 Network kong-codex_default  Creating
 Network kong-codex_default  Created
 Container kong-codex-kong-1  Creating
 Container kong-codex-typesense-1  Creating
 Container kong-codex-kong-1  Created
 Container kong-codex-typesense-1  Created
Attaching to kong-1, typesense-1
Gracefully stopping... (press Ctrl+C again to force)
Error response from daemon: mounts denied: 
The path /srv/deploy/repos/kong-codex/kong.conf is not shared from the host and is not known to Docker.
You can configure shared paths from Docker -> Preferences... -> Resources -> File Sharing.
See https://docs.docker.com/desktop/settings/mac/#file-sharing for more info.
 Container kong-codex-typesense-1  Stopping
 Container kong-codex-kong-1  Stopping
 Container kong-codex-kong-1  Stopped
 Container kong-codex-kong-1  Removing
 Container kong-codex-kong-1  Removed
 Container kong-codex-typesense-1  Stopped
 Container kong-codex-typesense-1  Removing
 Container kong-codex-typesense-1  Removed
 Network kong-codex_default  Removing
 Network kong-codex_default  Removed

[2025-07-17T05:35:49.690805] Running integration tests for fountainai...
[2025-07-17T05:36:35.210695] Integration tests for fountainai failed with exit code 1

[2025-07-17T05:36:35.211524] Running integration tests for kong-codex...
[2025-07-17T05:36:46.334675] Integration tests for kong-codex failed with exit code 1
