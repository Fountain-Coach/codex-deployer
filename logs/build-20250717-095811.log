[2025-07-17T09:58:11.454703] === New Cycle ===
Building for debugging...
[0/396] Write sources
[1/401] Compiling chacha-x86_64-linux.S
[2/401] Compiling chacha-x86-linux.S
[2/401] Compiling chacha-x86_64-apple.S
[4/401] Compiling chacha-x86-apple.S
[5/401] Compiling chacha-armv8-win.S
[6/401] Compiling chacha-armv8-apple.S
[7/401] Compiling chacha-armv8-linux.S
[8/401] Write swift-version-24593BA9C3E375BF.txt
[9/401] Compiling chacha-armv4-linux.S
[10/396] Compiling aes128gcmsiv-x86_64-linux.S
[11/396] Compiling x86_64-mont5-linux.S
[12/396] Compiling aes128gcmsiv-x86_64-apple.S
[14/404] Emitting module PersistServer
[15/404] Compiling PersistServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/persist/main.swift:23:43: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(Int32(AF_INET), Int32(SOCK_STREAM), 0)
   |                                           `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[16/404] Emitting module Parser
[17/404] Emitting module PlannerServer
[18/404] Compiling PlannerServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/planner/main.swift:23:43: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(Int32(AF_INET), Int32(SOCK_STREAM), 0)
   |                                           `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[18/404] Compiling d1_pkt.cc
[18/404] Compiling d1_both.cc
[18/404] Compiling d1_srtp.cc
[18/404] Compiling d1_lib.cc
[18/404] Compiling dtls_method.cc

[2025-07-17T09:58:11.456835] Starting swift build...
[2025-07-17T09:58:13.536837] swift build failed with exit code 1
[2025-07-17T09:58:13.685502] [dispatcher] Updated git remote to use token-based authentication.
[2025-07-17T09:58:15.385048] [dispatcher] Running Docker build...
[2025-07-17T09:58:15.386802] [dispatcher] Running tests...
Compose now can delegate build to bake for better performances
Just set COMPOSE_BAKE=true
#0 building with "default" instance using docker driver

#1 [tools-factory internal] load build definition from Dockerfile
#1 transferring dockerfile: 284B 0.0s done
#1 DONE 0.0s

#2 [function-caller internal] load build definition from Dockerfile
#2 transferring dockerfile: 290B 0.0s done
#2 DONE 0.1s

#3 [baseline-awareness internal] load build definition from Dockerfile
#3 transferring dockerfile: 299B 0.0s done
#3 DONE 0.1s

#4 [persist internal] load build definition from Dockerfile
#4 transferring dockerfile: 266B 0.0s done
#4 DONE 0.1s

#5 [bootstrap internal] load build definition from Dockerfile
#5 transferring dockerfile: 272B 0.0s done
#5 DONE 0.1s

#6 [llm-gateway internal] load build definition from Dockerfile
#6 transferring dockerfile: 278B 0.0s done
#6 DONE 0.1s

#7 [planner internal] load build definition from Dockerfile
#7 transferring dockerfile: 266B 0.0s done
#7 DONE 0.1s

#8 [planner internal] load metadata for docker.io/library/ubuntu:22.04
#8 DONE 0.5s

#9 [bootstrap internal] load metadata for docker.io/library/swift:6.1-jammy
#9 DONE 0.5s

#10 [persist internal] load .dockerignore
#10 transferring context: 2B done
#10 DONE 0.0s

#11 [bootstrap internal] load .dockerignore
#11 transferring context: 2B done
#11 DONE 0.0s

#12 [baseline-awareness internal] load .dockerignore
#12 transferring context: 2B done
#12 DONE 0.0s

#13 [llm-gateway internal] load .dockerignore
#13 transferring context: 2B done
#13 DONE 0.0s

#14 [planner internal] load .dockerignore
#14 transferring context: 2B done
#14 DONE 0.0s

#15 [tools-factory build 1/4] FROM docker.io/library/swift:6.1-jammy@sha256:512716edb447938962d96627ff0b9f00d5701bfa61d97a5b5654f07a1482c342
#15 DONE 0.0s

#16 [tools-factory stage-1 1/2] FROM docker.io/library/ubuntu:22.04@sha256:59ccd419c0dc0edf9e3bff1a3b2b073ea15a2ce4bc45ce7c989278b225b09af3
#16 DONE 0.0s

#17 [function-caller internal] load .dockerignore
#17 transferring context: 2B done
#17 DONE 0.0s

#18 [tools-factory internal] load .dockerignore
#18 transferring context: 2B done
#18 DONE 0.0s

#19 [bootstrap internal] load build context
#19 transferring context: 2.09MB 5.0s
#19 ...

#20 [llm-gateway internal] load build context
#20 ...

#19 [bootstrap internal] load build context
#19 transferring context: 7.76MB 9.8s done
#19 ...

#21 [planner internal] load build context
#21 transferring context: 7.76MB 9.8s done
#21 ...

#20 [llm-gateway internal] load build context
#20 transferring context: 7.76MB 9.8s done
#20 DONE 10.1s

#22 [persist internal] load build context
#22 transferring context: 7.76MB 9.8s done
#22 DONE 10.1s

#21 [planner internal] load build context
#21 DONE 10.1s

#23 [tools-factory internal] load build context
#23 transferring context: 7.76MB 9.8s done
#23 DONE 10.1s

#24 [baseline-awareness internal] load build context
#24 transferring context: 7.76MB 9.2s done
#24 DONE 10.1s

#19 [bootstrap internal] load build context
#19 DONE 10.1s

#25 [function-caller internal] load build context
#25 transferring context: 7.76MB 9.8s done
#25 DONE 10.1s

#26 [bootstrap build 2/4] WORKDIR /src
#26 CACHED

#27 [bootstrap build 3/4] COPY . .
#27 DONE 10.7s

#28 [persist build 3/4] COPY . .
#28 CACHED

#29 [tools-factory build 3/4] COPY . .
#29 CACHED

#30 [planner build 3/4] COPY . .
#30 CACHED

#31 [bootstrap build 3/4] COPY . .
#31 CACHED

#32 [baseline-awareness build 3/4] COPY . .
#32 CACHED

#33 [function-caller build 3/4] COPY . .
#33 CACHED

#34 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#34 ...

#35 [planner build 4/4] RUN swift build -c release --product planner-server
#35 ...

#36 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#36 ...

#37 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#37 ...

#38 [persist build 4/4] RUN swift build -c release --product persist-server
#38 ...

#39 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#39 ...

#40 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#40 ...

#34 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#34 16.00 Building for production...
#34 16.07 [0/7] Write sources
#34 16.23 [4/7] Write swift-version-24593BA9C3E375BF.txt
#34 ...

#39 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#39 16.26 Building for production...
#39 16.30 [0/14] Write sources
#39 16.77 [5/14] Compiling writer.c
#39 16.78 [6/14] Compiling reader.c
#39 16.93 [7/14] Compiling parser.c
#39 16.98 [8/14] Compiling api.c
#39 17.42 [9/14] Compiling emitter.c
#39 17.42 [10/14] Write swift-version-24593BA9C3E375BF.txt
#39 17.81 [11/15] Compiling scanner.c
#39 ...

#34 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#34 21.75 [6/8] Compiling ServiceShared Models.swift
#34 ...

#40 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#40 16.02 Building for production...
#40 16.07 [0/6] Write sources
#40 16.24 [3/6] Write swift-version-24593BA9C3E375BF.txt
#40 21.63 [5/7] Compiling ServiceShared Models.swift
#40 23.55 [6/8] Compiling LLMGatewayService HTTPKernel.swift
#40 23.95 [7/9] Compiling LLMGatewayServer main.swift
#40 23.95 /src/Generated/Server/llm-gateway/main.swift:23:43: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#40 23.95 21 | 
#40 23.95 22 |     func start() throws {
#40 23.95 23 |         serverFD = socket(Int32(AF_INET), Int32(SOCK_STREAM), 0)
#40 23.95    |                                           `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#40 23.95 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
#40 23.95 25 |         var opt: Int32 = 1
#40 23.95 
#40 23.95 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
#40 23.95 1 | protocol FixedWidthInteger {
#40 23.95 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
#40 23.95   |                   `- note: where 'T' = '__socket_type'
#40 23.95 3 | 
#40 ERROR: process "/bin/sh -c swift build -c release --product llm-gateway-server" did not complete successfully: exit code: 1

#34 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#34 24.54 [7/9] Compiling BaselineAwarenessService BaselineStore.swift
#34 ...

#36 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#36 16.23 Building for production...
#36 16.27 [0/14] Write sources
#36 16.77 [5/14] Compiling writer.c
#36 16.79 [6/14] Compiling reader.c
#36 16.80 [7/14] Write swift-version-24593BA9C3E375BF.txt
#36 16.91 [8/14] Compiling parser.c
#36 17.08 [9/14] Compiling api.c
#36 17.41 [10/15] Compiling emitter.c
#36 18.06 [11/15] Compiling scanner.c
#36 22.75 [13/16] Compiling ServiceShared Models.swift
#36 CANCELED

#39 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#39 22.46 [13/16] Compiling ServiceShared Models.swift
#39 CANCELED

#35 [planner build 4/4] RUN swift build -c release --product planner-server
#35 16.04 Building for production...
#35 16.08 [0/6] Write sources
#35 16.23 [3/6] Write swift-version-24593BA9C3E375BF.txt
#35 21.69 [5/7] Compiling ServiceShared Models.swift
#35 24.54 [6/8] Compiling PlannerService HTTPKernel.swift
#35 CANCELED

#38 [persist build 4/4] RUN swift build -c release --product persist-server
#38 17.81 Building for production...
#38 17.84 [0/6] Write sources
#38 18.13 [3/6] Write swift-version-24593BA9C3E375BF.txt
#38 23.19 [5/7] Compiling ServiceShared Models.swift
#38 24.45 [6/8] Compiling PersistService HTTPKernel.swift
#38 CANCELED

#34 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#34 CANCELED

#37 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#37 16.27 Building for production...
#37 16.33 [0/6] Write sources
#37 16.53 [3/6] Write swift-version-24593BA9C3E375BF.txt
#37 21.87 [5/7] Compiling ServiceShared Models.swift
#37 24.55 [6/8] Compiling BaselineAwarenessService BaselineStore.swift
#37 CANCELED
------
 > [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server:
23.95 23 |         serverFD = socket(Int32(AF_INET), Int32(SOCK_STREAM), 0)
23.95    |                                           `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
23.95 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
23.95 25 |         var opt: Int32 = 1
23.95 
23.95 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
23.95 1 | protocol FixedWidthInteger {
23.95 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
23.95   |                   `- note: where 'T' = '__socket_type'
23.95 3 | 
------
failed to solve: process "/bin/sh -c swift build -c release --product llm-gateway-server" did not complete successfully: exit code: 1
 Network kong-codex_default  Creating
 Network kong-codex_default  Created
 Container kong-codex-kong-1  Creating
 Container kong-codex-typesense-1  Creating
 Container kong-codex-typesense-1  Created
 Container kong-codex-kong-1  Created
Attaching to kong-1, typesense-1
Error response from daemon: mounts denied: 
The path /srv/deploy/repos/kong-codex/kong.conf is not shared from the host and is not known to Docker.
You can configure shared paths from Docker -> Preferences... -> Resources -> File Sharing.
See https://docs.docker.com/desktop/settings/mac/#file-sharing for more info.
Gracefully stopping... (press Ctrl+C again to force)
 Container kong-codex-kong-1  Stopping
 Container kong-codex-typesense-1  Stopping
 Container kong-codex-kong-1  Stopped
 Container kong-codex-kong-1  Removing
 Container kong-codex-kong-1  Removed
 Container kong-codex-typesense-1  Stopped
 Container kong-codex-typesense-1  Removing
 Container kong-codex-typesense-1  Removed
 Network kong-codex_default  Removing
 Network kong-codex_default  Removed

[2025-07-17T09:58:15.387093] Running integration tests for fountainai...
[2025-07-17T09:59:03.113377] Integration tests for fountainai failed with exit code 1

[2025-07-17T09:59:03.113511] Running integration tests for kong-codex...
[2025-07-17T09:59:03.902200] Integration tests for kong-codex failed with exit code 1
