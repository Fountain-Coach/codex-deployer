[2025-07-17T05:52:20.702082] === New Cycle ===
Building for debugging...
[0/369] Compiling sha512-armv4-linux.S
[0/369] Compiling sha512-x86_64-apple.S
[0/369] Compiling sha512-586-apple.S
[0/369] Compiling sha512-586-linux.S
[0/369] Compiling sha512-armv8-win.S
[1/369] Compiling sha512-armv8-apple.S
[6/369] Compiling sha512-armv8-linux.S
[7/369] Compiling sha256-armv8-apple.S
[8/369] Compiling sha256-x86_64-apple.S
[9/369] Compiling sha256-x86_64-linux.S
[10/369] Compiling sha256-armv8-linux.S
[11/369] Compiling sha256-armv4-linux.S
[12/369] Compiling sha256-586-linux.S
[13/369] Compiling sha1-x86_64-linux.S
[14/369] Compiling sha256-586-apple.S
[15/369] Compiling sha1-x86_64-apple.S
[16/369] Write swift-version-24593BA9C3E375BF.txt
[17/369] Compiling sha256-armv8-win.S
[17/369] Compiling sha1-armv8-win.S
[18/365] Compiling sha1-armv4-large-linux.S
[19/365] Compiling sha1-armv8-linux.S
[21/365] Compiling sha1-armv8-apple.S
[22/365] Compiling sha1-586-linux.S
[23/365] Compiling sha1-586-apple.S
[24/365] Compiling rsaz-avx2-linux.S
[25/365] Compiling rsaz-avx2-apple.S
[27/408] Emitting module PlannerServer
[28/408] Compiling PlannerServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/planner/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
   |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[29/408] Emitting module BaselineAwarenessService
[30/408] Compiling LLMGatewayServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/llm-gateway/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
   |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[31/408] Emitting module PersistServer
[32/409] Compiling PersistServer main.swift
/srv/deploy/repos/fountainai/Generated/Server/persist/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
21 | 
22 |     func start() throws {
23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
   |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
25 |         var opt: Int32 = 1

Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
1 | protocol FixedWidthInteger {
2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
  |                   `- note: where 'T' = '__socket_type'
3 | 
[33/409] Compiling Atomics AtomicStorage.swift
[34/409] Compiling Atomics AtomicValue.swift
[35/409] Emitting module LLMGatewayServer
[35/409] Compiling bio_ssl.cc
[38/409] Compiling Atomics AtomicBool.swift
[39/409] Compiling Atomics AtomicInteger.swift
[40/409] Compiling Atomics AtomicOptionalWrappable.swift
[41/409] Compiling Atomics AtomicReference.swift
[42/409] Compiling DequeModule _DequeBuffer.swift
[43/409] Compiling Parser SpecLoader.swift
[44/409] Emitting module Parser

[2025-07-17T05:52:20.702999] Starting swift build...
[2025-07-17T05:52:23.287009] swift build failed with exit code 1
[2025-07-17T05:52:23.534388] [dispatcher] Updated git remote to use token-based authentication.
[2025-07-17T05:52:25.677882] [dispatcher] Running Docker build...
[2025-07-17T05:52:25.678872] [dispatcher] Running tests...
Compose now can delegate build to bake for better performances
Just set COMPOSE_BAKE=true
#0 building with "default" instance using docker driver

#1 [planner internal] load build definition from Dockerfile
#1 transferring dockerfile: 266B done
#1 DONE 0.0s

#2 [tools-factory internal] load build definition from Dockerfile
#2 transferring dockerfile: 284B done
#2 DONE 0.0s

#3 [llm-gateway internal] load build definition from Dockerfile
#3 transferring dockerfile: 278B done
#3 DONE 0.0s

#4 [function-caller internal] load build definition from Dockerfile
#4 transferring dockerfile: 290B done
#4 DONE 0.0s

#5 [persist internal] load build definition from Dockerfile
#5 transferring dockerfile: 266B done
#5 DONE 0.0s

#6 [bootstrap internal] load build definition from Dockerfile
#6 transferring dockerfile: 272B done
#6 DONE 0.0s

#7 [baseline-awareness internal] load build definition from Dockerfile
#7 transferring dockerfile: 299B done
#7 DONE 0.0s

#8 [bootstrap internal] load metadata for docker.io/library/ubuntu:22.04
#8 DONE 0.5s

#9 [tools-factory internal] load metadata for docker.io/library/swift:6.1-jammy
#9 DONE 0.5s

#10 [planner internal] load .dockerignore
#10 transferring context: 2B done
#10 DONE 0.0s

#11 [tools-factory internal] load .dockerignore
#11 transferring context: 2B done
#11 DONE 0.0s

#12 [baseline-awareness internal] load .dockerignore
#12 transferring context: 2B done
#12 DONE 0.0s

#13 [llm-gateway internal] load .dockerignore
#13 transferring context: 2B done
#13 DONE 0.0s

#14 [function-caller internal] load .dockerignore
#14 transferring context: 2B done
#14 DONE 0.0s

#15 [llm-gateway build 1/4] FROM docker.io/library/swift:6.1-jammy@sha256:512716edb447938962d96627ff0b9f00d5701bfa61d97a5b5654f07a1482c342
#15 DONE 0.0s

#16 [llm-gateway stage-1 1/2] FROM docker.io/library/ubuntu:22.04@sha256:59ccd419c0dc0edf9e3bff1a3b2b073ea15a2ce4bc45ce7c989278b225b09af3
#16 DONE 0.0s

#17 [bootstrap internal] load .dockerignore
#17 transferring context: 2B done
#17 DONE 0.0s

#18 [persist internal] load .dockerignore
#18 transferring context: 2B done
#18 DONE 0.0s

#19 [planner internal] load build context
#19 transferring context: 6.43MB 5.1s
#19 ...

#20 [llm-gateway internal] load build context
#20 ...

#19 [planner internal] load build context
#19 ...

#21 [bootstrap internal] load build context
#21 transferring context: 8.46MB 7.8s done
#21 DONE 8.3s

#22 [tools-factory internal] load build context
#22 transferring context: 8.46MB 8.3s done
#22 DONE 8.4s

#19 [planner internal] load build context
#19 transferring context: 8.46MB 8.3s done
#19 DONE 8.4s

#23 [function-caller internal] load build context
#23 transferring context: 8.46MB 8.2s done
#23 DONE 8.4s

#20 [llm-gateway internal] load build context
#20 transferring context: 8.46MB 8.2s done
#20 DONE 8.4s

#24 [baseline-awareness internal] load build context
#24 transferring context: 8.46MB 8.3s done
#24 DONE 8.4s

#25 [persist internal] load build context
#25 transferring context: 8.46MB 8.3s done
#25 DONE 8.4s

#26 [planner build 2/4] WORKDIR /src
#26 CACHED

#27 [planner build 3/4] COPY . .
#27 DONE 10.1s

#28 [function-caller build 3/4] COPY . .
#28 CACHED

#29 [tools-factory build 3/4] COPY . .
#29 CACHED

#30 [planner build 3/4] COPY . .
#30 CACHED

#31 [llm-gateway build 3/4] COPY . .
#31 CACHED

#32 [baseline-awareness build 3/4] COPY . .
#32 CACHED

#33 [persist build 3/4] COPY . .
#33 CACHED

#34 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#34 ...

#35 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#35 ...

#36 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#36 ...

#37 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#37 ...

#38 [planner build 4/4] RUN swift build -c release --product planner-server
#38 ...

#39 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#39 ...

#40 [persist build 4/4] RUN swift build -c release --product persist-server
#40 ...

#36 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#36 16.03 Building for production...
#36 16.12 [0/6] Write sources
#36 16.40 [3/6] Write swift-version-24593BA9C3E375BF.txt
#36 ...

#34 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#34 16.09 Building for production...
#34 16.29 [0/14] Write sources
#34 16.38 [5/14] Compiling writer.c
#34 16.65 [6/14] Compiling reader.c
#34 16.84 [7/14] Compiling parser.c
#34 16.94 [8/14] Compiling api.c
#34 17.27 [9/14] Compiling emitter.c
#34 17.65 [10/14] Write swift-version-24593BA9C3E375BF.txt
#34 17.65 [11/14] Compiling scanner.c
#34 ...

#36 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#36 21.97 [5/7] Compiling ServiceShared Models.swift
#36 24.01 [6/8] Compiling BaselineAwarenessService BaselineStore.swift
#36 ...

#40 [persist build 4/4] RUN swift build -c release --product persist-server
#40 16.11 Building for production...
#40 16.31 [0/6] Write sources
#40 16.57 [3/6] Write swift-version-24593BA9C3E375BF.txt
#40 21.84 [5/7] Compiling ServiceShared Models.swift
#40 23.42 [6/8] Compiling PersistService HTTPKernel.swift
#40 23.75 [7/9] Compiling PersistServer main.swift
#40 23.75 /src/Generated/Server/persist/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#40 23.75 21 | 
#40 23.75 22 |     func start() throws {
#40 23.75 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
#40 23.75    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#40 23.75 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
#40 23.75 25 |         var opt: Int32 = 1
#40 23.75 
#40 23.75 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
#40 23.75 1 | protocol FixedWidthInteger {
#40 23.75 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
#40 23.75   |                   `- note: where 'T' = '__socket_type'
#40 23.75 3 | 
#40 ERROR: process "/bin/sh -c swift build -c release --product persist-server" did not complete successfully: exit code: 1

#37 [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server
#37 16.21 Building for production...
#37 16.29 [0/6] Write sources
#37 16.53 [3/6] Write swift-version-24593BA9C3E375BF.txt
#37 21.96 [5/7] Compiling ServiceShared Models.swift
#37 23.33 [6/8] Compiling LLMGatewayService HTTPKernel.swift
#37 23.73 [7/9] Compiling LLMGatewayServer main.swift
#37 23.73 /src/Generated/Server/llm-gateway/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#37 23.73 21 | 
#37 23.73 22 |     func start() throws {
#37 23.73 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
#37 23.73    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#37 23.73 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
#37 23.73 25 |         var opt: Int32 = 1
#37 23.73 
#37 23.73 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
#37 23.73 1 | protocol FixedWidthInteger {
#37 23.73 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
#37 23.73   |                   `- note: where 'T' = '__socket_type'
#37 23.73 3 | 
#37 ERROR: process "/bin/sh -c swift build -c release --product llm-gateway-server" did not complete successfully: exit code: 1

#35 [bootstrap build 4/4] RUN swift build -c release --product bootstrap-server
#35 16.05 Building for production...
#35 16.12 [0/7] Write sources
#35 16.41 [4/7] Write swift-version-24593BA9C3E375BF.txt
#35 21.89 [6/8] Compiling ServiceShared Models.swift
#35 23.83 [7/9] Compiling BaselineAwarenessService BaselineStore.swift
#35 CANCELED

#39 [function-caller build 4/4] RUN swift build -c release --product function-caller-server
#39 16.05 Building for production...
#39 16.12 [0/14] Write sources
#39 16.39 [5/14] Compiling writer.c
#39 16.49 [6/14] Compiling reader.c
#39 16.78 [7/14] Compiling parser.c
#39 16.82 [8/14] Compiling api.c
#39 17.14 [9/14] Compiling emitter.c
#39 17.14 [10/14] Write swift-version-24593BA9C3E375BF.txt
#39 17.58 [11/15] Compiling scanner.c
#39 22.84 [13/16] Compiling ServiceShared Models.swift
#39 CANCELED

#38 [planner build 4/4] RUN swift build -c release --product planner-server
#38 16.10 Building for production...
#38 16.30 [0/6] Write sources
#38 16.68 [3/6] Write swift-version-24593BA9C3E375BF.txt
#38 22.17 [5/7] Compiling ServiceShared Models.swift
#38 23.86 [6/8] Compiling PlannerService HTTPKernel.swift
#38 24.17 [7/9] Compiling PlannerServer main.swift
#38 24.17 /src/Generated/Server/planner/main.swift:23:36: error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#38 24.17 21 | 
#38 24.17 22 |     func start() throws {
#38 24.17 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
#38 24.17    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
#38 24.17 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
#38 24.17 25 |         var opt: Int32 = 1
#38 24.17 
#38 24.17 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
#38 24.17 1 | protocol FixedWidthInteger {
#38 24.17 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
#38 24.17   |                   `- note: where 'T' = '__socket_type'
#38 24.17 3 | 
#38 CANCELED

#36 [baseline-awareness build 4/4] RUN swift build -c release --product baseline-awareness-server
#36 CANCELED

#34 [tools-factory build 4/4] RUN swift build -c release --product tools-factory-server
#34 23.44 [13/16] Compiling ServiceShared Models.swift
#34 CANCELED
------
 > [persist build 4/4] RUN swift build -c release --product persist-server:
23.75 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
23.75    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
23.75 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
23.75 25 |         var opt: Int32 = 1
23.75 
23.75 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
23.75 1 | protocol FixedWidthInteger {
23.75 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
23.75   |                   `- note: where 'T' = '__socket_type'
23.75 3 | 
------
------
 > [llm-gateway build 4/4] RUN swift build -c release --product llm-gateway-server:
23.73 23 |         serverFD = socket(AF_INET, Int32(SOCK_STREAM), 0)
23.73    |                                    `- error: initializer 'init(_:)' requires that '__socket_type' conform to 'BinaryFloatingPoint'
23.73 24 |         guard serverFD >= 0 else { throw RuntimeError.socket }
23.73 25 |         var opt: Int32 = 1
23.73 
23.73 Swift.FixedWidthInteger.init:2:19: note: where 'T' = '__socket_type'
23.73 1 | protocol FixedWidthInteger {
23.73 2 | @inlinable public init<T>(_ source: T) where T : BinaryFloatingPoint}
23.73   |                   `- note: where 'T' = '__socket_type'
23.73 3 | 
------
failed to solve: process "/bin/sh -c swift build -c release --product persist-server" did not complete successfully: exit code: 1
 Network kong-codex_default  Creating
 Network kong-codex_default  Created
 Container kong-codex-typesense-1  Creating
 Container kong-codex-kong-1  Creating
 Container kong-codex-typesense-1  Created
 Container kong-codex-kong-1  Created
Attaching to kong-1, typesense-1
Gracefully stopping... (press Ctrl+C again to force)
Error response from daemon: mounts denied: 
The path /srv/deploy/repos/kong-codex/kong.conf is not shared from the host and is not known to Docker.
You can configure shared paths from Docker -> Preferences... -> Resources -> File Sharing.
See https://docs.docker.com/desktop/settings/mac/#file-sharing for more info.
 Container kong-codex-kong-1  Stopping
 Container kong-codex-typesense-1  Stopping
 Container kong-codex-kong-1  Stopped
 Container kong-codex-kong-1  Removing
 Container kong-codex-kong-1  Removed
 Container kong-codex-typesense-1  Stopped
 Container kong-codex-typesense-1  Removing
 Container kong-codex-typesense-1  Removed
 Network kong-codex_default  Removing
 Network kong-codex_default  Removed

[2025-07-17T05:52:25.679649] Running integration tests for fountainai...
[2025-07-17T05:53:09.485538] Integration tests for fountainai failed with exit code 1

[2025-07-17T05:53:09.485717] Running integration tests for kong-codex...
[2025-07-17T05:53:20.215238] Integration tests for kong-codex failed with exit code 1
